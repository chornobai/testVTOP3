/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/vendor.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../node_modules/webpack/buildin/amd-options.js":
/*!******************************************************!*\
  !*** ../node_modules/webpack/buildin/amd-options.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {/* globals __webpack_amd_options__ */
module.exports = __webpack_amd_options__;

/* WEBPACK VAR INJECTION */}.call(this, {}))

/***/ }),

/***/ "../node_modules/webpack/buildin/harmony-module.js":
/*!*********************************************************!*\
  !*** ../node_modules/webpack/buildin/harmony-module.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function(originalModule) {
	if (!originalModule.webpackPolyfill) {
		var module = Object.create(originalModule);
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		Object.defineProperty(module, "exports", {
			enumerable: true
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),

/***/ "./js/vendor.js":
/*!**********************!*\
  !*** ./js/vendor.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _vendor_swiper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vendor/swiper */ "./js/vendor/swiper.js");
/* harmony import */ var _vendor_gsap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vendor/gsap */ "./js/vendor/gsap.js");
/* harmony import */ var _vendor_gsap__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_vendor_gsap__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _vendor_all__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vendor/all */ "./js/vendor/all.js");
/* harmony import */ var _vendor_all__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_vendor_all__WEBPACK_IMPORTED_MODULE_2__);
// Swiper 7.4.1




/***/ }),

/***/ "./js/vendor/all.js":
/*!**************************!*\
  !*** ./js/vendor/all.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj){"@babel/helpers - typeof";return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj;}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;},_typeof(obj);}(function(global,factory){( false?undefined:_typeof(exports))==='object'&&typeof module!=='undefined'?factory(exports): true?!(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):(undefined);})(this,function(exports){'use strict';function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype);subClass.prototype.constructor=subClass;subClass.__proto__=superClass;}function _assertThisInitialized(self){if(self===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}/*!
   * GSAP 3.11.5
   * https://greensock.com
   *
   * @license Copyright 2008-2023, GreenSock. All rights reserved.
   * Subject to the terms at https://greensock.com/standard-license or for
   * Club GreenSock members, the agreement issued with that membership.
   * @author: Jack Doyle, jack@greensock.com
  */var _config={autoSleep:120,force3D:"auto",nullTargetWarn:1,units:{lineHeight:""}},_defaults={duration:.5,overwrite:false,delay:0},_suppressOverwrites,_reverting,_context,_bigNum=1e8,_tinyNum=1/_bigNum,_2PI=Math.PI*2,_HALF_PI=_2PI/4,_gsID=0,_sqrt=Math.sqrt,_cos=Math.cos,_sin=Math.sin,_isString=function _isString(value){return typeof value==="string";},_isFunction=function _isFunction(value){return typeof value==="function";},_isNumber=function _isNumber(value){return typeof value==="number";},_isUndefined=function _isUndefined(value){return typeof value==="undefined";},_isObject=function _isObject(value){return _typeof(value)==="object";},_isNotFalse=function _isNotFalse(value){return value!==false;},_windowExists=function _windowExists(){return typeof window!=="undefined";},_isFuncOrString=function _isFuncOrString(value){return _isFunction(value)||_isString(value);},_isTypedArray=typeof ArrayBuffer==="function"&&ArrayBuffer.isView||function(){},_isArray=Array.isArray,_strictNumExp=/(?:-?\.?\d|\.)+/gi,_numExp=/[-+=.]*\d+[.e\-+]*\d*[e\-+]*\d*/g,_numWithUnitExp=/[-+=.]*\d+[.e-]*\d*[a-z%]*/g,_complexStringNumExp=/[-+=.]*\d+\.?\d*(?:e-|e\+)?\d*/gi,_relExp=/[+-]=-?[.\d]+/,_delimitedValueExp=/[^,'"\[\]\s]+/gi,_unitExp=/^[+\-=e\s\d]*\d+[.\d]*([a-z]*|%)\s*$/i,_globalTimeline,_win,_coreInitted,_doc,_globals={},_installScope={},_coreReady,_install=function _install(scope){return(_installScope=_merge(scope,_globals))&&gsap;},_missingPlugin=function _missingPlugin(property,value){return console.warn("Invalid property",property,"set to",value,"Missing plugin? gsap.registerPlugin()");},_warn=function _warn(message,suppress){return!suppress&&console.warn(message);},_addGlobal=function _addGlobal(name,obj){return name&&(_globals[name]=obj)&&_installScope&&(_installScope[name]=obj)||_globals;},_emptyFunc=function _emptyFunc(){return 0;},_startAtRevertConfig={suppressEvents:true,isStart:true,kill:false},_revertConfigNoKill={suppressEvents:true,kill:false},_revertConfig={suppressEvents:true},_reservedProps={},_lazyTweens=[],_lazyLookup={},_lastRenderedFrame,_plugins={},_effects={},_nextGCFrame=30,_harnessPlugins=[],_callbackNames="",_harness=function _harness(targets){var target=targets[0],harnessPlugin,i;_isObject(target)||_isFunction(target)||(targets=[targets]);if(!(harnessPlugin=(target._gsap||{}).harness)){i=_harnessPlugins.length;while(i--&&!_harnessPlugins[i].targetTest(target)){}harnessPlugin=_harnessPlugins[i];}i=targets.length;while(i--){targets[i]&&(targets[i]._gsap||(targets[i]._gsap=new GSCache(targets[i],harnessPlugin)))||targets.splice(i,1);}return targets;},_getCache=function _getCache(target){return target._gsap||_harness(toArray(target))[0]._gsap;},_getProperty=function _getProperty(target,property,v){return(v=target[property])&&_isFunction(v)?target[property]():_isUndefined(v)&&target.getAttribute&&target.getAttribute(property)||v;},_forEachName=function _forEachName(names,func){return(names=names.split(",")).forEach(func)||names;},_round=function _round(value){return Math.round(value*100000)/100000||0;},_roundPrecise=function _roundPrecise(value){return Math.round(value*10000000)/10000000||0;},_parseRelative=function _parseRelative(start,value){var operator=value.charAt(0),end=parseFloat(value.substr(2));start=parseFloat(start);return operator==="+"?start+end:operator==="-"?start-end:operator==="*"?start*end:start/end;},_arrayContainsAny=function _arrayContainsAny(toSearch,toFind){var l=toFind.length,i=0;for(;toSearch.indexOf(toFind[i])<0&&++i<l;){}return i<l;},_lazyRender=function _lazyRender(){var l=_lazyTweens.length,a=_lazyTweens.slice(0),i,tween;_lazyLookup={};_lazyTweens.length=0;for(i=0;i<l;i++){tween=a[i];tween&&tween._lazy&&(tween.render(tween._lazy[0],tween._lazy[1],true)._lazy=0);}},_lazySafeRender=function _lazySafeRender(animation,time,suppressEvents,force){_lazyTweens.length&&!_reverting&&_lazyRender();animation.render(time,suppressEvents,force||_reverting&&time<0&&(animation._initted||animation._startAt));_lazyTweens.length&&!_reverting&&_lazyRender();},_numericIfPossible=function _numericIfPossible(value){var n=parseFloat(value);return(n||n===0)&&(value+"").match(_delimitedValueExp).length<2?n:_isString(value)?value.trim():value;},_passThrough=function _passThrough(p){return p;},_setDefaults=function _setDefaults(obj,defaults){for(var p in defaults){p in obj||(obj[p]=defaults[p]);}return obj;},_setKeyframeDefaults=function _setKeyframeDefaults(excludeDuration){return function(obj,defaults){for(var p in defaults){p in obj||p==="duration"&&excludeDuration||p==="ease"||(obj[p]=defaults[p]);}};},_merge=function _merge(base,toMerge){for(var p in toMerge){base[p]=toMerge[p];}return base;},_mergeDeep=function _mergeDeep(base,toMerge){for(var p in toMerge){p!=="__proto__"&&p!=="constructor"&&p!=="prototype"&&(base[p]=_isObject(toMerge[p])?_mergeDeep(base[p]||(base[p]={}),toMerge[p]):toMerge[p]);}return base;},_copyExcluding=function _copyExcluding(obj,excluding){var copy={},p;for(p in obj){p in excluding||(copy[p]=obj[p]);}return copy;},_inheritDefaults=function _inheritDefaults(vars){var parent=vars.parent||_globalTimeline,func=vars.keyframes?_setKeyframeDefaults(_isArray(vars.keyframes)):_setDefaults;if(_isNotFalse(vars.inherit)){while(parent){func(vars,parent.vars.defaults);parent=parent.parent||parent._dp;}}return vars;},_arraysMatch=function _arraysMatch(a1,a2){var i=a1.length,match=i===a2.length;while(match&&i--&&a1[i]===a2[i]){}return i<0;},_addLinkedListItem=function _addLinkedListItem(parent,child,firstProp,lastProp,sortBy){if(firstProp===void 0){firstProp="_first";}if(lastProp===void 0){lastProp="_last";}var prev=parent[lastProp],t;if(sortBy){t=child[sortBy];while(prev&&prev[sortBy]>t){prev=prev._prev;}}if(prev){child._next=prev._next;prev._next=child;}else{child._next=parent[firstProp];parent[firstProp]=child;}if(child._next){child._next._prev=child;}else{parent[lastProp]=child;}child._prev=prev;child.parent=child._dp=parent;return child;},_removeLinkedListItem=function _removeLinkedListItem(parent,child,firstProp,lastProp){if(firstProp===void 0){firstProp="_first";}if(lastProp===void 0){lastProp="_last";}var prev=child._prev,next=child._next;if(prev){prev._next=next;}else if(parent[firstProp]===child){parent[firstProp]=next;}if(next){next._prev=prev;}else if(parent[lastProp]===child){parent[lastProp]=prev;}child._next=child._prev=child.parent=null;},_removeFromParent=function _removeFromParent(child,onlyIfParentHasAutoRemove){child.parent&&(!onlyIfParentHasAutoRemove||child.parent.autoRemoveChildren)&&child.parent.remove(child);child._act=0;},_uncache=function _uncache(animation,child){if(animation&&(!child||child._end>animation._dur||child._start<0)){var a=animation;while(a){a._dirty=1;a=a.parent;}}return animation;},_recacheAncestors=function _recacheAncestors(animation){var parent=animation.parent;while(parent&&parent.parent){parent._dirty=1;parent.totalDuration();parent=parent.parent;}return animation;},_rewindStartAt=function _rewindStartAt(tween,totalTime,suppressEvents,force){return tween._startAt&&(_reverting?tween._startAt.revert(_revertConfigNoKill):tween.vars.immediateRender&&!tween.vars.autoRevert||tween._startAt.render(totalTime,true,force));},_hasNoPausedAncestors=function _hasNoPausedAncestors(animation){return!animation||animation._ts&&_hasNoPausedAncestors(animation.parent);},_elapsedCycleDuration=function _elapsedCycleDuration(animation){return animation._repeat?_animationCycle(animation._tTime,animation=animation.duration()+animation._rDelay)*animation:0;},_animationCycle=function _animationCycle(tTime,cycleDuration){var whole=Math.floor(tTime/=cycleDuration);return tTime&&whole===tTime?whole-1:whole;},_parentToChildTotalTime=function _parentToChildTotalTime(parentTime,child){return(parentTime-child._start)*child._ts+(child._ts>=0?0:child._dirty?child.totalDuration():child._tDur);},_setEnd=function _setEnd(animation){return animation._end=_roundPrecise(animation._start+(animation._tDur/Math.abs(animation._ts||animation._rts||_tinyNum)||0));},_alignPlayhead=function _alignPlayhead(animation,totalTime){var parent=animation._dp;if(parent&&parent.smoothChildTiming&&animation._ts){animation._start=_roundPrecise(parent._time-(animation._ts>0?totalTime/animation._ts:((animation._dirty?animation.totalDuration():animation._tDur)-totalTime)/-animation._ts));_setEnd(animation);parent._dirty||_uncache(parent,animation);}return animation;},_postAddChecks=function _postAddChecks(timeline,child){var t;if(child._time||child._initted&&!child._dur){t=_parentToChildTotalTime(timeline.rawTime(),child);if(!child._dur||_clamp(0,child.totalDuration(),t)-child._tTime>_tinyNum){child.render(t,true);}}if(_uncache(timeline,child)._dp&&timeline._initted&&timeline._time>=timeline._dur&&timeline._ts){if(timeline._dur<timeline.duration()){t=timeline;while(t._dp){t.rawTime()>=0&&t.totalTime(t._tTime);t=t._dp;}}timeline._zTime=-_tinyNum;}},_addToTimeline=function _addToTimeline(timeline,child,position,skipChecks){child.parent&&_removeFromParent(child);child._start=_roundPrecise((_isNumber(position)?position:position||timeline!==_globalTimeline?_parsePosition(timeline,position,child):timeline._time)+child._delay);child._end=_roundPrecise(child._start+(child.totalDuration()/Math.abs(child.timeScale())||0));_addLinkedListItem(timeline,child,"_first","_last",timeline._sort?"_start":0);_isFromOrFromStart(child)||(timeline._recent=child);skipChecks||_postAddChecks(timeline,child);timeline._ts<0&&_alignPlayhead(timeline,timeline._tTime);return timeline;},_scrollTrigger=function _scrollTrigger(animation,trigger){return(_globals.ScrollTrigger||_missingPlugin("scrollTrigger",trigger))&&_globals.ScrollTrigger.create(trigger,animation);},_attemptInitTween=function _attemptInitTween(tween,time,force,suppressEvents,tTime){_initTween(tween,time,tTime);if(!tween._initted){return 1;}if(!force&&tween._pt&&!_reverting&&(tween._dur&&tween.vars.lazy!==false||!tween._dur&&tween.vars.lazy)&&_lastRenderedFrame!==_ticker.frame){_lazyTweens.push(tween);tween._lazy=[tTime,suppressEvents];return 1;}},_parentPlayheadIsBeforeStart=function _parentPlayheadIsBeforeStart(_ref){var parent=_ref.parent;return parent&&parent._ts&&parent._initted&&!parent._lock&&(parent.rawTime()<0||_parentPlayheadIsBeforeStart(parent));},_isFromOrFromStart=function _isFromOrFromStart(_ref2){var data=_ref2.data;return data==="isFromStart"||data==="isStart";},_renderZeroDurationTween=function _renderZeroDurationTween(tween,totalTime,suppressEvents,force){var prevRatio=tween.ratio,ratio=totalTime<0||!totalTime&&(!tween._start&&_parentPlayheadIsBeforeStart(tween)&&!(!tween._initted&&_isFromOrFromStart(tween))||(tween._ts<0||tween._dp._ts<0)&&!_isFromOrFromStart(tween))?0:1,repeatDelay=tween._rDelay,tTime=0,pt,iteration,prevIteration;if(repeatDelay&&tween._repeat){tTime=_clamp(0,tween._tDur,totalTime);iteration=_animationCycle(tTime,repeatDelay);tween._yoyo&&iteration&1&&(ratio=1-ratio);if(iteration!==_animationCycle(tween._tTime,repeatDelay)){prevRatio=1-ratio;tween.vars.repeatRefresh&&tween._initted&&tween.invalidate();}}if(ratio!==prevRatio||_reverting||force||tween._zTime===_tinyNum||!totalTime&&tween._zTime){if(!tween._initted&&_attemptInitTween(tween,totalTime,force,suppressEvents,tTime)){return;}prevIteration=tween._zTime;tween._zTime=totalTime||(suppressEvents?_tinyNum:0);suppressEvents||(suppressEvents=totalTime&&!prevIteration);tween.ratio=ratio;tween._from&&(ratio=1-ratio);tween._time=0;tween._tTime=tTime;pt=tween._pt;while(pt){pt.r(ratio,pt.d);pt=pt._next;}totalTime<0&&_rewindStartAt(tween,totalTime,suppressEvents,true);tween._onUpdate&&!suppressEvents&&_callback(tween,"onUpdate");tTime&&tween._repeat&&!suppressEvents&&tween.parent&&_callback(tween,"onRepeat");if((totalTime>=tween._tDur||totalTime<0)&&tween.ratio===ratio){ratio&&_removeFromParent(tween,1);if(!suppressEvents&&!_reverting){_callback(tween,ratio?"onComplete":"onReverseComplete",true);tween._prom&&tween._prom();}}}else if(!tween._zTime){tween._zTime=totalTime;}},_findNextPauseTween=function _findNextPauseTween(animation,prevTime,time){var child;if(time>prevTime){child=animation._first;while(child&&child._start<=time){if(child.data==="isPause"&&child._start>prevTime){return child;}child=child._next;}}else{child=animation._last;while(child&&child._start>=time){if(child.data==="isPause"&&child._start<prevTime){return child;}child=child._prev;}}},_setDuration=function _setDuration(animation,duration,skipUncache,leavePlayhead){var repeat=animation._repeat,dur=_roundPrecise(duration)||0,totalProgress=animation._tTime/animation._tDur;totalProgress&&!leavePlayhead&&(animation._time*=dur/animation._dur);animation._dur=dur;animation._tDur=!repeat?dur:repeat<0?1e10:_roundPrecise(dur*(repeat+1)+animation._rDelay*repeat);totalProgress>0&&!leavePlayhead&&_alignPlayhead(animation,animation._tTime=animation._tDur*totalProgress);animation.parent&&_setEnd(animation);skipUncache||_uncache(animation.parent,animation);return animation;},_onUpdateTotalDuration=function _onUpdateTotalDuration(animation){return animation instanceof Timeline?_uncache(animation):_setDuration(animation,animation._dur);},_zeroPosition={_start:0,endTime:_emptyFunc,totalDuration:_emptyFunc},_parsePosition=function _parsePosition(animation,position,percentAnimation){var labels=animation.labels,recent=animation._recent||_zeroPosition,clippedDuration=animation.duration()>=_bigNum?recent.endTime(false):animation._dur,i,offset,isPercent;if(_isString(position)&&(isNaN(position)||position in labels)){offset=position.charAt(0);isPercent=position.substr(-1)==="%";i=position.indexOf("=");if(offset==="<"||offset===">"){i>=0&&(position=position.replace(/=/,""));return(offset==="<"?recent._start:recent.endTime(recent._repeat>=0))+(parseFloat(position.substr(1))||0)*(isPercent?(i<0?recent:percentAnimation).totalDuration()/100:1);}if(i<0){position in labels||(labels[position]=clippedDuration);return labels[position];}offset=parseFloat(position.charAt(i-1)+position.substr(i+1));if(isPercent&&percentAnimation){offset=offset/100*(_isArray(percentAnimation)?percentAnimation[0]:percentAnimation).totalDuration();}return i>1?_parsePosition(animation,position.substr(0,i-1),percentAnimation)+offset:clippedDuration+offset;}return position==null?clippedDuration:+position;},_createTweenType=function _createTweenType(type,params,timeline){var isLegacy=_isNumber(params[1]),varsIndex=(isLegacy?2:1)+(type<2?0:1),vars=params[varsIndex],irVars,parent;isLegacy&&(vars.duration=params[1]);vars.parent=timeline;if(type){irVars=vars;parent=timeline;while(parent&&!("immediateRender"in irVars)){irVars=parent.vars.defaults||{};parent=_isNotFalse(parent.vars.inherit)&&parent.parent;}vars.immediateRender=_isNotFalse(irVars.immediateRender);type<2?vars.runBackwards=1:vars.startAt=params[varsIndex-1];}return new Tween(params[0],vars,params[varsIndex+1]);},_conditionalReturn=function _conditionalReturn(value,func){return value||value===0?func(value):func;},_clamp=function _clamp(min,max,value){return value<min?min:value>max?max:value;},getUnit=function getUnit(value,v){return!_isString(value)||!(v=_unitExp.exec(value))?"":v[1];},clamp=function clamp(min,max,value){return _conditionalReturn(value,function(v){return _clamp(min,max,v);});},_slice=[].slice,_isArrayLike=function _isArrayLike(value,nonEmpty){return value&&_isObject(value)&&"length"in value&&(!nonEmpty&&!value.length||value.length-1 in value&&_isObject(value[0]))&&!value.nodeType&&value!==_win;},_flatten=function _flatten(ar,leaveStrings,accumulator){if(accumulator===void 0){accumulator=[];}return ar.forEach(function(value){var _accumulator;return _isString(value)&&!leaveStrings||_isArrayLike(value,1)?(_accumulator=accumulator).push.apply(_accumulator,toArray(value)):accumulator.push(value);})||accumulator;},toArray=function toArray(value,scope,leaveStrings){return _context&&!scope&&_context.selector?_context.selector(value):_isString(value)&&!leaveStrings&&(_coreInitted||!_wake())?_slice.call((scope||_doc).querySelectorAll(value),0):_isArray(value)?_flatten(value,leaveStrings):_isArrayLike(value)?_slice.call(value,0):value?[value]:[];},selector=function selector(value){value=toArray(value)[0]||_warn("Invalid scope")||{};return function(v){var el=value.current||value.nativeElement||value;return toArray(v,el.querySelectorAll?el:el===value?_warn("Invalid scope")||_doc.createElement("div"):value);};},shuffle=function shuffle(a){return a.sort(function(){return .5-Math.random();});},distribute=function distribute(v){if(_isFunction(v)){return v;}var vars=_isObject(v)?v:{each:v},ease=_parseEase(vars.ease),from=vars.from||0,base=parseFloat(vars.base)||0,cache={},isDecimal=from>0&&from<1,ratios=isNaN(from)||isDecimal,axis=vars.axis,ratioX=from,ratioY=from;if(_isString(from)){ratioX=ratioY={center:.5,edges:.5,end:1}[from]||0;}else if(!isDecimal&&ratios){ratioX=from[0];ratioY=from[1];}return function(i,target,a){var l=(a||vars).length,distances=cache[l],originX,originY,x,y,d,j,max,min,wrapAt;if(!distances){wrapAt=vars.grid==="auto"?0:(vars.grid||[1,_bigNum])[1];if(!wrapAt){max=-_bigNum;while(max<(max=a[wrapAt++].getBoundingClientRect().left)&&wrapAt<l){}wrapAt--;}distances=cache[l]=[];originX=ratios?Math.min(wrapAt,l)*ratioX-.5:from%wrapAt;originY=wrapAt===_bigNum?0:ratios?l*ratioY/wrapAt-.5:from/wrapAt|0;max=0;min=_bigNum;for(j=0;j<l;j++){x=j%wrapAt-originX;y=originY-(j/wrapAt|0);distances[j]=d=!axis?_sqrt(x*x+y*y):Math.abs(axis==="y"?y:x);d>max&&(max=d);d<min&&(min=d);}from==="random"&&shuffle(distances);distances.max=max-min;distances.min=min;distances.v=l=(parseFloat(vars.amount)||parseFloat(vars.each)*(wrapAt>l?l-1:!axis?Math.max(wrapAt,l/wrapAt):axis==="y"?l/wrapAt:wrapAt)||0)*(from==="edges"?-1:1);distances.b=l<0?base-l:base;distances.u=getUnit(vars.amount||vars.each)||0;ease=ease&&l<0?_invertEase(ease):ease;}l=(distances[i]-distances.min)/distances.max||0;return _roundPrecise(distances.b+(ease?ease(l):l)*distances.v)+distances.u;};},_roundModifier=function _roundModifier(v){var p=Math.pow(10,((v+"").split(".")[1]||"").length);return function(raw){var n=_roundPrecise(Math.round(parseFloat(raw)/v)*v*p);return(n-n%1)/p+(_isNumber(raw)?0:getUnit(raw));};},snap=function snap(snapTo,value){var isArray=_isArray(snapTo),radius,is2D;if(!isArray&&_isObject(snapTo)){radius=isArray=snapTo.radius||_bigNum;if(snapTo.values){snapTo=toArray(snapTo.values);if(is2D=!_isNumber(snapTo[0])){radius*=radius;}}else{snapTo=_roundModifier(snapTo.increment);}}return _conditionalReturn(value,!isArray?_roundModifier(snapTo):_isFunction(snapTo)?function(raw){is2D=snapTo(raw);return Math.abs(is2D-raw)<=radius?is2D:raw;}:function(raw){var x=parseFloat(is2D?raw.x:raw),y=parseFloat(is2D?raw.y:0),min=_bigNum,closest=0,i=snapTo.length,dx,dy;while(i--){if(is2D){dx=snapTo[i].x-x;dy=snapTo[i].y-y;dx=dx*dx+dy*dy;}else{dx=Math.abs(snapTo[i]-x);}if(dx<min){min=dx;closest=i;}}closest=!radius||min<=radius?snapTo[closest]:raw;return is2D||closest===raw||_isNumber(raw)?closest:closest+getUnit(raw);});},random=function random(min,max,roundingIncrement,returnFunction){return _conditionalReturn(_isArray(min)?!max:roundingIncrement===true?!!(roundingIncrement=0):!returnFunction,function(){return _isArray(min)?min[~~(Math.random()*min.length)]:(roundingIncrement=roundingIncrement||1e-5)&&(returnFunction=roundingIncrement<1?Math.pow(10,(roundingIncrement+"").length-2):1)&&Math.floor(Math.round((min-roundingIncrement/2+Math.random()*(max-min+roundingIncrement*.99))/roundingIncrement)*roundingIncrement*returnFunction)/returnFunction;});},pipe=function pipe(){for(var _len=arguments.length,functions=new Array(_len),_key=0;_key<_len;_key++){functions[_key]=arguments[_key];}return function(value){return functions.reduce(function(v,f){return f(v);},value);};},unitize=function unitize(func,unit){return function(value){return func(parseFloat(value))+(unit||getUnit(value));};},normalize=function normalize(min,max,value){return mapRange(min,max,0,1,value);},_wrapArray=function _wrapArray(a,wrapper,value){return _conditionalReturn(value,function(index){return a[~~wrapper(index)];});},wrap=function wrap(min,max,value){var range=max-min;return _isArray(min)?_wrapArray(min,wrap(0,min.length),max):_conditionalReturn(value,function(value){return(range+(value-min)%range)%range+min;});},wrapYoyo=function wrapYoyo(min,max,value){var range=max-min,total=range*2;return _isArray(min)?_wrapArray(min,wrapYoyo(0,min.length-1),max):_conditionalReturn(value,function(value){value=(total+(value-min)%total)%total||0;return min+(value>range?total-value:value);});},_replaceRandom=function _replaceRandom(value){var prev=0,s="",i,nums,end,isArray;while(~(i=value.indexOf("random(",prev))){end=value.indexOf(")",i);isArray=value.charAt(i+7)==="[";nums=value.substr(i+7,end-i-7).match(isArray?_delimitedValueExp:_strictNumExp);s+=value.substr(prev,i-prev)+random(isArray?nums:+nums[0],isArray?0:+nums[1],+nums[2]||1e-5);prev=end+1;}return s+value.substr(prev,value.length-prev);},mapRange=function mapRange(inMin,inMax,outMin,outMax,value){var inRange=inMax-inMin,outRange=outMax-outMin;return _conditionalReturn(value,function(value){return outMin+((value-inMin)/inRange*outRange||0);});},interpolate=function interpolate(start,end,progress,mutate){var func=isNaN(start+end)?0:function(p){return(1-p)*start+p*end;};if(!func){var isString=_isString(start),master={},p,i,interpolators,l,il;progress===true&&(mutate=1)&&(progress=null);if(isString){start={p:start};end={p:end};}else if(_isArray(start)&&!_isArray(end)){interpolators=[];l=start.length;il=l-2;for(i=1;i<l;i++){interpolators.push(interpolate(start[i-1],start[i]));}l--;func=function func(p){p*=l;var i=Math.min(il,~~p);return interpolators[i](p-i);};progress=end;}else if(!mutate){start=_merge(_isArray(start)?[]:{},start);}if(!interpolators){for(p in end){_addPropTween.call(master,start,p,"get",end[p]);}func=function func(p){return _renderPropTweens(p,master)||(isString?start.p:start);};}}return _conditionalReturn(progress,func);},_getLabelInDirection=function _getLabelInDirection(timeline,fromTime,backward){var labels=timeline.labels,min=_bigNum,p,distance,label;for(p in labels){distance=labels[p]-fromTime;if(distance<0===!!backward&&distance&&min>(distance=Math.abs(distance))){label=p;min=distance;}}return label;},_callback=function _callback(animation,type,executeLazyFirst){var v=animation.vars,callback=v[type],prevContext=_context,context=animation._ctx,params,scope,result;if(!callback){return;}params=v[type+"Params"];scope=v.callbackScope||animation;executeLazyFirst&&_lazyTweens.length&&_lazyRender();context&&(_context=context);result=params?callback.apply(scope,params):callback.call(scope);_context=prevContext;return result;},_interrupt=function _interrupt(animation){_removeFromParent(animation);animation.scrollTrigger&&animation.scrollTrigger.kill(!!_reverting);animation.progress()<1&&_callback(animation,"onInterrupt");return animation;},_quickTween,_registerPluginQueue=[],_createPlugin=function _createPlugin(config){if(!_windowExists()){_registerPluginQueue.push(config);return;}config=!config.name&&config["default"]||config;var name=config.name,isFunc=_isFunction(config),Plugin=name&&!isFunc&&config.init?function(){this._props=[];}:config,instanceDefaults={init:_emptyFunc,render:_renderPropTweens,add:_addPropTween,kill:_killPropTweensOf,modifier:_addPluginModifier,rawVars:0},statics={targetTest:0,get:0,getSetter:_getSetter,aliases:{},register:0};_wake();if(config!==Plugin){if(_plugins[name]){return;}_setDefaults(Plugin,_setDefaults(_copyExcluding(config,instanceDefaults),statics));_merge(Plugin.prototype,_merge(instanceDefaults,_copyExcluding(config,statics)));_plugins[Plugin.prop=name]=Plugin;if(config.targetTest){_harnessPlugins.push(Plugin);_reservedProps[name]=1;}name=(name==="css"?"CSS":name.charAt(0).toUpperCase()+name.substr(1))+"Plugin";}_addGlobal(name,Plugin);config.register&&config.register(gsap,Plugin,PropTween);},_255=255,_colorLookup={aqua:[0,_255,_255],lime:[0,_255,0],silver:[192,192,192],black:[0,0,0],maroon:[128,0,0],teal:[0,128,128],blue:[0,0,_255],navy:[0,0,128],white:[_255,_255,_255],olive:[128,128,0],yellow:[_255,_255,0],orange:[_255,165,0],gray:[128,128,128],purple:[128,0,128],green:[0,128,0],red:[_255,0,0],pink:[_255,192,203],cyan:[0,_255,_255],transparent:[_255,_255,_255,0]},_hue=function _hue(h,m1,m2){h+=h<0?1:h>1?-1:0;return(h*6<1?m1+(m2-m1)*h*6:h<.5?m2:h*3<2?m1+(m2-m1)*(2/3-h)*6:m1)*_255+.5|0;},splitColor=function splitColor(v,toHSL,forceAlpha){var a=!v?_colorLookup.black:_isNumber(v)?[v>>16,v>>8&_255,v&_255]:0,r,g,b,h,s,l,max,min,d,wasHSL;if(!a){if(v.substr(-1)===","){v=v.substr(0,v.length-1);}if(_colorLookup[v]){a=_colorLookup[v];}else if(v.charAt(0)==="#"){if(v.length<6){r=v.charAt(1);g=v.charAt(2);b=v.charAt(3);v="#"+r+r+g+g+b+b+(v.length===5?v.charAt(4)+v.charAt(4):"");}if(v.length===9){a=parseInt(v.substr(1,6),16);return[a>>16,a>>8&_255,a&_255,parseInt(v.substr(7),16)/255];}v=parseInt(v.substr(1),16);a=[v>>16,v>>8&_255,v&_255];}else if(v.substr(0,3)==="hsl"){a=wasHSL=v.match(_strictNumExp);if(!toHSL){h=+a[0]%360/360;s=+a[1]/100;l=+a[2]/100;g=l<=.5?l*(s+1):l+s-l*s;r=l*2-g;a.length>3&&(a[3]*=1);a[0]=_hue(h+1/3,r,g);a[1]=_hue(h,r,g);a[2]=_hue(h-1/3,r,g);}else if(~v.indexOf("=")){a=v.match(_numExp);forceAlpha&&a.length<4&&(a[3]=1);return a;}}else{a=v.match(_strictNumExp)||_colorLookup.transparent;}a=a.map(Number);}if(toHSL&&!wasHSL){r=a[0]/_255;g=a[1]/_255;b=a[2]/_255;max=Math.max(r,g,b);min=Math.min(r,g,b);l=(max+min)/2;if(max===min){h=s=0;}else{d=max-min;s=l>0.5?d/(2-max-min):d/(max+min);h=max===r?(g-b)/d+(g<b?6:0):max===g?(b-r)/d+2:(r-g)/d+4;h*=60;}a[0]=~~(h+.5);a[1]=~~(s*100+.5);a[2]=~~(l*100+.5);}forceAlpha&&a.length<4&&(a[3]=1);return a;},_colorOrderData=function _colorOrderData(v){var values=[],c=[],i=-1;v.split(_colorExp).forEach(function(v){var a=v.match(_numWithUnitExp)||[];values.push.apply(values,a);c.push(i+=a.length+1);});values.c=c;return values;},_formatColors=function _formatColors(s,toHSL,orderMatchData){var result="",colors=(s+result).match(_colorExp),type=toHSL?"hsla(":"rgba(",i=0,c,shell,d,l;if(!colors){return s;}colors=colors.map(function(color){return(color=splitColor(color,toHSL,1))&&type+(toHSL?color[0]+","+color[1]+"%,"+color[2]+"%,"+color[3]:color.join(","))+")";});if(orderMatchData){d=_colorOrderData(s);c=orderMatchData.c;if(c.join(result)!==d.c.join(result)){shell=s.replace(_colorExp,"1").split(_numWithUnitExp);l=shell.length-1;for(;i<l;i++){result+=shell[i]+(~c.indexOf(i)?colors.shift()||type+"0,0,0,0)":(d.length?d:colors.length?colors:orderMatchData).shift());}}}if(!shell){shell=s.split(_colorExp);l=shell.length-1;for(;i<l;i++){result+=shell[i]+colors[i];}}return result+shell[l];},_colorExp=function(){var s="(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3,4}){1,2}\\b",p;for(p in _colorLookup){s+="|"+p+"\\b";}return new RegExp(s+")","gi");}(),_hslExp=/hsl[a]?\(/,_colorStringFilter=function _colorStringFilter(a){var combined=a.join(" "),toHSL;_colorExp.lastIndex=0;if(_colorExp.test(combined)){toHSL=_hslExp.test(combined);a[1]=_formatColors(a[1],toHSL);a[0]=_formatColors(a[0],toHSL,_colorOrderData(a[1]));return true;}},_tickerActive,_ticker=function(){var _getTime=Date.now,_lagThreshold=500,_adjustedLag=33,_startTime=_getTime(),_lastUpdate=_startTime,_gap=1000/240,_nextTime=_gap,_listeners=[],_id,_req,_raf,_self,_delta,_i,_tick=function _tick(v){var elapsed=_getTime()-_lastUpdate,manual=v===true,overlap,dispatch,time,frame;elapsed>_lagThreshold&&(_startTime+=elapsed-_adjustedLag);_lastUpdate+=elapsed;time=_lastUpdate-_startTime;overlap=time-_nextTime;if(overlap>0||manual){frame=++_self.frame;_delta=time-_self.time*1000;_self.time=time=time/1000;_nextTime+=overlap+(overlap>=_gap?4:_gap-overlap);dispatch=1;}manual||(_id=_req(_tick));if(dispatch){for(_i=0;_i<_listeners.length;_i++){_listeners[_i](time,_delta,frame,v);}}};_self={time:0,frame:0,tick:function tick(){_tick(true);},deltaRatio:function deltaRatio(fps){return _delta/(1000/(fps||60));},wake:function wake(){if(_coreReady){if(!_coreInitted&&_windowExists()){_win=_coreInitted=window;_doc=_win.document||{};_globals.gsap=gsap;(_win.gsapVersions||(_win.gsapVersions=[])).push(gsap.version);_install(_installScope||_win.GreenSockGlobals||!_win.gsap&&_win||{});_raf=_win.requestAnimationFrame;_registerPluginQueue.forEach(_createPlugin);}_id&&_self.sleep();_req=_raf||function(f){return setTimeout(f,_nextTime-_self.time*1000+1|0);};_tickerActive=1;_tick(2);}},sleep:function sleep(){(_raf?_win.cancelAnimationFrame:clearTimeout)(_id);_tickerActive=0;_req=_emptyFunc;},lagSmoothing:function lagSmoothing(threshold,adjustedLag){_lagThreshold=threshold||Infinity;_adjustedLag=Math.min(adjustedLag||33,_lagThreshold);},fps:function fps(_fps){_gap=1000/(_fps||240);_nextTime=_self.time*1000+_gap;},add:function add(callback,once,prioritize){var func=once?function(t,d,f,v){callback(t,d,f,v);_self.remove(func);}:callback;_self.remove(callback);_listeners[prioritize?"unshift":"push"](func);_wake();return func;},remove:function remove(callback,i){~(i=_listeners.indexOf(callback))&&_listeners.splice(i,1)&&_i>=i&&_i--;},_listeners:_listeners};return _self;}(),_wake=function _wake(){return!_tickerActive&&_ticker.wake();},_easeMap={},_customEaseExp=/^[\d.\-M][\d.\-,\s]/,_quotesExp=/["']/g,_parseObjectInString=function _parseObjectInString(value){var obj={},split=value.substr(1,value.length-3).split(":"),key=split[0],i=1,l=split.length,index,val,parsedVal;for(;i<l;i++){val=split[i];index=i!==l-1?val.lastIndexOf(","):val.length;parsedVal=val.substr(0,index);obj[key]=isNaN(parsedVal)?parsedVal.replace(_quotesExp,"").trim():+parsedVal;key=val.substr(index+1).trim();}return obj;},_valueInParentheses=function _valueInParentheses(value){var open=value.indexOf("(")+1,close=value.indexOf(")"),nested=value.indexOf("(",open);return value.substring(open,~nested&&nested<close?value.indexOf(")",close+1):close);},_configEaseFromString=function _configEaseFromString(name){var split=(name+"").split("("),ease=_easeMap[split[0]];return ease&&split.length>1&&ease.config?ease.config.apply(null,~name.indexOf("{")?[_parseObjectInString(split[1])]:_valueInParentheses(name).split(",").map(_numericIfPossible)):_easeMap._CE&&_customEaseExp.test(name)?_easeMap._CE("",name):ease;},_invertEase=function _invertEase(ease){return function(p){return 1-ease(1-p);};},_propagateYoyoEase=function _propagateYoyoEase(timeline,isYoyo){var child=timeline._first,ease;while(child){if(child instanceof Timeline){_propagateYoyoEase(child,isYoyo);}else if(child.vars.yoyoEase&&(!child._yoyo||!child._repeat)&&child._yoyo!==isYoyo){if(child.timeline){_propagateYoyoEase(child.timeline,isYoyo);}else{ease=child._ease;child._ease=child._yEase;child._yEase=ease;child._yoyo=isYoyo;}}child=child._next;}},_parseEase=function _parseEase(ease,defaultEase){return!ease?defaultEase:(_isFunction(ease)?ease:_easeMap[ease]||_configEaseFromString(ease))||defaultEase;},_insertEase=function _insertEase(names,easeIn,easeOut,easeInOut){if(easeOut===void 0){easeOut=function easeOut(p){return 1-easeIn(1-p);};}if(easeInOut===void 0){easeInOut=function easeInOut(p){return p<.5?easeIn(p*2)/2:1-easeIn((1-p)*2)/2;};}var ease={easeIn:easeIn,easeOut:easeOut,easeInOut:easeInOut},lowercaseName;_forEachName(names,function(name){_easeMap[name]=_globals[name]=ease;_easeMap[lowercaseName=name.toLowerCase()]=easeOut;for(var p in ease){_easeMap[lowercaseName+(p==="easeIn"?".in":p==="easeOut"?".out":".inOut")]=_easeMap[name+"."+p]=ease[p];}});return ease;},_easeInOutFromOut=function _easeInOutFromOut(easeOut){return function(p){return p<.5?(1-easeOut(1-p*2))/2:.5+easeOut((p-.5)*2)/2;};},_configElastic=function _configElastic(type,amplitude,period){var p1=amplitude>=1?amplitude:1,p2=(period||(type?.3:.45))/(amplitude<1?amplitude:1),p3=p2/_2PI*(Math.asin(1/p1)||0),easeOut=function easeOut(p){return p===1?1:p1*Math.pow(2,-10*p)*_sin((p-p3)*p2)+1;},ease=type==="out"?easeOut:type==="in"?function(p){return 1-easeOut(1-p);}:_easeInOutFromOut(easeOut);p2=_2PI/p2;ease.config=function(amplitude,period){return _configElastic(type,amplitude,period);};return ease;},_configBack=function _configBack(type,overshoot){if(overshoot===void 0){overshoot=1.70158;}var easeOut=function easeOut(p){return p?--p*p*((overshoot+1)*p+overshoot)+1:0;},ease=type==="out"?easeOut:type==="in"?function(p){return 1-easeOut(1-p);}:_easeInOutFromOut(easeOut);ease.config=function(overshoot){return _configBack(type,overshoot);};return ease;};_forEachName("Linear,Quad,Cubic,Quart,Quint,Strong",function(name,i){var power=i<5?i+1:i;_insertEase(name+",Power"+(power-1),i?function(p){return Math.pow(p,power);}:function(p){return p;},function(p){return 1-Math.pow(1-p,power);},function(p){return p<.5?Math.pow(p*2,power)/2:1-Math.pow((1-p)*2,power)/2;});});_easeMap.Linear.easeNone=_easeMap.none=_easeMap.Linear.easeIn;_insertEase("Elastic",_configElastic("in"),_configElastic("out"),_configElastic());(function(n,c){var n1=1/c,n2=2*n1,n3=2.5*n1,easeOut=function easeOut(p){return p<n1?n*p*p:p<n2?n*Math.pow(p-1.5/c,2)+.75:p<n3?n*(p-=2.25/c)*p+.9375:n*Math.pow(p-2.625/c,2)+.984375;};_insertEase("Bounce",function(p){return 1-easeOut(1-p);},easeOut);})(7.5625,2.75);_insertEase("Expo",function(p){return p?Math.pow(2,10*(p-1)):0;});_insertEase("Circ",function(p){return-(_sqrt(1-p*p)-1);});_insertEase("Sine",function(p){return p===1?1:-_cos(p*_HALF_PI)+1;});_insertEase("Back",_configBack("in"),_configBack("out"),_configBack());_easeMap.SteppedEase=_easeMap.steps=_globals.SteppedEase={config:function config(steps,immediateStart){if(steps===void 0){steps=1;}var p1=1/steps,p2=steps+(immediateStart?0:1),p3=immediateStart?1:0,max=1-_tinyNum;return function(p){return((p2*_clamp(0,max,p)|0)+p3)*p1;};}};_defaults.ease=_easeMap["quad.out"];_forEachName("onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt",function(name){return _callbackNames+=name+","+name+"Params,";});var GSCache=function GSCache(target,harness){this.id=_gsID++;target._gsap=this;this.target=target;this.harness=harness;this.get=harness?harness.get:_getProperty;this.set=harness?harness.getSetter:_getSetter;};var Animation=function(){function Animation(vars){this.vars=vars;this._delay=+vars.delay||0;if(this._repeat=vars.repeat===Infinity?-2:vars.repeat||0){this._rDelay=vars.repeatDelay||0;this._yoyo=!!vars.yoyo||!!vars.yoyoEase;}this._ts=1;_setDuration(this,+vars.duration,1,1);this.data=vars.data;if(_context){this._ctx=_context;_context.data.push(this);}_tickerActive||_ticker.wake();}var _proto=Animation.prototype;_proto.delay=function delay(value){if(value||value===0){this.parent&&this.parent.smoothChildTiming&&this.startTime(this._start+value-this._delay);this._delay=value;return this;}return this._delay;};_proto.duration=function duration(value){return arguments.length?this.totalDuration(this._repeat>0?value+(value+this._rDelay)*this._repeat:value):this.totalDuration()&&this._dur;};_proto.totalDuration=function totalDuration(value){if(!arguments.length){return this._tDur;}this._dirty=0;return _setDuration(this,this._repeat<0?value:(value-this._repeat*this._rDelay)/(this._repeat+1));};_proto.totalTime=function totalTime(_totalTime,suppressEvents){_wake();if(!arguments.length){return this._tTime;}var parent=this._dp;if(parent&&parent.smoothChildTiming&&this._ts){_alignPlayhead(this,_totalTime);!parent._dp||parent.parent||_postAddChecks(parent,this);while(parent&&parent.parent){if(parent.parent._time!==parent._start+(parent._ts>=0?parent._tTime/parent._ts:(parent.totalDuration()-parent._tTime)/-parent._ts)){parent.totalTime(parent._tTime,true);}parent=parent.parent;}if(!this.parent&&this._dp.autoRemoveChildren&&(this._ts>0&&_totalTime<this._tDur||this._ts<0&&_totalTime>0||!this._tDur&&!_totalTime)){_addToTimeline(this._dp,this,this._start-this._delay);}}if(this._tTime!==_totalTime||!this._dur&&!suppressEvents||this._initted&&Math.abs(this._zTime)===_tinyNum||!_totalTime&&!this._initted&&(this.add||this._ptLookup)){this._ts||(this._pTime=_totalTime);_lazySafeRender(this,_totalTime,suppressEvents);}return this;};_proto.time=function time(value,suppressEvents){return arguments.length?this.totalTime(Math.min(this.totalDuration(),value+_elapsedCycleDuration(this))%(this._dur+this._rDelay)||(value?this._dur:0),suppressEvents):this._time;};_proto.totalProgress=function totalProgress(value,suppressEvents){return arguments.length?this.totalTime(this.totalDuration()*value,suppressEvents):this.totalDuration()?Math.min(1,this._tTime/this._tDur):this.ratio;};_proto.progress=function progress(value,suppressEvents){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&!(this.iteration()&1)?1-value:value)+_elapsedCycleDuration(this),suppressEvents):this.duration()?Math.min(1,this._time/this._dur):this.ratio;};_proto.iteration=function iteration(value,suppressEvents){var cycleDuration=this.duration()+this._rDelay;return arguments.length?this.totalTime(this._time+(value-1)*cycleDuration,suppressEvents):this._repeat?_animationCycle(this._tTime,cycleDuration)+1:1;};_proto.timeScale=function timeScale(value){if(!arguments.length){return this._rts===-_tinyNum?0:this._rts;}if(this._rts===value){return this;}var tTime=this.parent&&this._ts?_parentToChildTotalTime(this.parent._time,this):this._tTime;this._rts=+value||0;this._ts=this._ps||value===-_tinyNum?0:this._rts;this.totalTime(_clamp(-Math.abs(this._delay),this._tDur,tTime),true);_setEnd(this);return _recacheAncestors(this);};_proto.paused=function paused(value){if(!arguments.length){return this._ps;}if(this._ps!==value){this._ps=value;if(value){this._pTime=this._tTime||Math.max(-this._delay,this.rawTime());this._ts=this._act=0;}else{_wake();this._ts=this._rts;this.totalTime(this.parent&&!this.parent.smoothChildTiming?this.rawTime():this._tTime||this._pTime,this.progress()===1&&Math.abs(this._zTime)!==_tinyNum&&(this._tTime-=_tinyNum));}}return this;};_proto.startTime=function startTime(value){if(arguments.length){this._start=value;var parent=this.parent||this._dp;parent&&(parent._sort||!this.parent)&&_addToTimeline(parent,this,value-this._delay);return this;}return this._start;};_proto.endTime=function endTime(includeRepeats){return this._start+(_isNotFalse(includeRepeats)?this.totalDuration():this.duration())/Math.abs(this._ts||1);};_proto.rawTime=function rawTime(wrapRepeats){var parent=this.parent||this._dp;return!parent?this._tTime:wrapRepeats&&(!this._ts||this._repeat&&this._time&&this.totalProgress()<1)?this._tTime%(this._dur+this._rDelay):!this._ts?this._tTime:_parentToChildTotalTime(parent.rawTime(wrapRepeats),this);};_proto.revert=function revert(config){if(config===void 0){config=_revertConfig;}var prevIsReverting=_reverting;_reverting=config;if(this._initted||this._startAt){this.timeline&&this.timeline.revert(config);this.totalTime(-0.01,config.suppressEvents);}this.data!=="nested"&&config.kill!==false&&this.kill();_reverting=prevIsReverting;return this;};_proto.globalTime=function globalTime(rawTime){var animation=this,time=arguments.length?rawTime:animation.rawTime();while(animation){time=animation._start+time/(animation._ts||1);animation=animation._dp;}return!this.parent&&this._sat?this._sat.vars.immediateRender?-1:this._sat.globalTime(rawTime):time;};_proto.repeat=function repeat(value){if(arguments.length){this._repeat=value===Infinity?-2:value;return _onUpdateTotalDuration(this);}return this._repeat===-2?Infinity:this._repeat;};_proto.repeatDelay=function repeatDelay(value){if(arguments.length){var time=this._time;this._rDelay=value;_onUpdateTotalDuration(this);return time?this.time(time):this;}return this._rDelay;};_proto.yoyo=function yoyo(value){if(arguments.length){this._yoyo=value;return this;}return this._yoyo;};_proto.seek=function seek(position,suppressEvents){return this.totalTime(_parsePosition(this,position),_isNotFalse(suppressEvents));};_proto.restart=function restart(includeDelay,suppressEvents){return this.play().totalTime(includeDelay?-this._delay:0,_isNotFalse(suppressEvents));};_proto.play=function play(from,suppressEvents){from!=null&&this.seek(from,suppressEvents);return this.reversed(false).paused(false);};_proto.reverse=function reverse(from,suppressEvents){from!=null&&this.seek(from||this.totalDuration(),suppressEvents);return this.reversed(true).paused(false);};_proto.pause=function pause(atTime,suppressEvents){atTime!=null&&this.seek(atTime,suppressEvents);return this.paused(true);};_proto.resume=function resume(){return this.paused(false);};_proto.reversed=function reversed(value){if(arguments.length){!!value!==this.reversed()&&this.timeScale(-this._rts||(value?-_tinyNum:0));return this;}return this._rts<0;};_proto.invalidate=function invalidate(){this._initted=this._act=0;this._zTime=-_tinyNum;return this;};_proto.isActive=function isActive(){var parent=this.parent||this._dp,start=this._start,rawTime;return!!(!parent||this._ts&&this._initted&&parent.isActive()&&(rawTime=parent.rawTime(true))>=start&&rawTime<this.endTime(true)-_tinyNum);};_proto.eventCallback=function eventCallback(type,callback,params){var vars=this.vars;if(arguments.length>1){if(!callback){delete vars[type];}else{vars[type]=callback;params&&(vars[type+"Params"]=params);type==="onUpdate"&&(this._onUpdate=callback);}return this;}return vars[type];};_proto.then=function then(onFulfilled){var self=this;return new Promise(function(resolve){var f=_isFunction(onFulfilled)?onFulfilled:_passThrough,_resolve=function _resolve(){var _then=self.then;self.then=null;_isFunction(f)&&(f=f(self))&&(f.then||f===self)&&(self.then=_then);resolve(f);self.then=_then;};if(self._initted&&self.totalProgress()===1&&self._ts>=0||!self._tTime&&self._ts<0){_resolve();}else{self._prom=_resolve;}});};_proto.kill=function kill(){_interrupt(this);};return Animation;}();_setDefaults(Animation.prototype,{_time:0,_start:0,_end:0,_tTime:0,_tDur:0,_dirty:0,_repeat:0,_yoyo:false,parent:null,_initted:false,_rDelay:0,_ts:1,_dp:0,ratio:0,_zTime:-_tinyNum,_prom:0,_ps:false,_rts:1});var Timeline=function(_Animation){_inheritsLoose(Timeline,_Animation);function Timeline(vars,position){var _this;if(vars===void 0){vars={};}_this=_Animation.call(this,vars)||this;_this.labels={};_this.smoothChildTiming=!!vars.smoothChildTiming;_this.autoRemoveChildren=!!vars.autoRemoveChildren;_this._sort=_isNotFalse(vars.sortChildren);_globalTimeline&&_addToTimeline(vars.parent||_globalTimeline,_assertThisInitialized(_this),position);vars.reversed&&_this.reverse();vars.paused&&_this.paused(true);vars.scrollTrigger&&_scrollTrigger(_assertThisInitialized(_this),vars.scrollTrigger);return _this;}var _proto2=Timeline.prototype;_proto2.to=function to(targets,vars,position){_createTweenType(0,arguments,this);return this;};_proto2.from=function from(targets,vars,position){_createTweenType(1,arguments,this);return this;};_proto2.fromTo=function fromTo(targets,fromVars,toVars,position){_createTweenType(2,arguments,this);return this;};_proto2.set=function set(targets,vars,position){vars.duration=0;vars.parent=this;_inheritDefaults(vars).repeatDelay||(vars.repeat=0);vars.immediateRender=!!vars.immediateRender;new Tween(targets,vars,_parsePosition(this,position),1);return this;};_proto2.call=function call(callback,params,position){return _addToTimeline(this,Tween.delayedCall(0,callback,params),position);};_proto2.staggerTo=function staggerTo(targets,duration,vars,stagger,position,onCompleteAll,onCompleteAllParams){vars.duration=duration;vars.stagger=vars.stagger||stagger;vars.onComplete=onCompleteAll;vars.onCompleteParams=onCompleteAllParams;vars.parent=this;new Tween(targets,vars,_parsePosition(this,position));return this;};_proto2.staggerFrom=function staggerFrom(targets,duration,vars,stagger,position,onCompleteAll,onCompleteAllParams){vars.runBackwards=1;_inheritDefaults(vars).immediateRender=_isNotFalse(vars.immediateRender);return this.staggerTo(targets,duration,vars,stagger,position,onCompleteAll,onCompleteAllParams);};_proto2.staggerFromTo=function staggerFromTo(targets,duration,fromVars,toVars,stagger,position,onCompleteAll,onCompleteAllParams){toVars.startAt=fromVars;_inheritDefaults(toVars).immediateRender=_isNotFalse(toVars.immediateRender);return this.staggerTo(targets,duration,toVars,stagger,position,onCompleteAll,onCompleteAllParams);};_proto2.render=function render(totalTime,suppressEvents,force){var prevTime=this._time,tDur=this._dirty?this.totalDuration():this._tDur,dur=this._dur,tTime=totalTime<=0?0:_roundPrecise(totalTime),crossingStart=this._zTime<0!==totalTime<0&&(this._initted||!dur),time,child,next,iteration,cycleDuration,prevPaused,pauseTween,timeScale,prevStart,prevIteration,yoyo,isYoyo;this!==_globalTimeline&&tTime>tDur&&totalTime>=0&&(tTime=tDur);if(tTime!==this._tTime||force||crossingStart){if(prevTime!==this._time&&dur){tTime+=this._time-prevTime;totalTime+=this._time-prevTime;}time=tTime;prevStart=this._start;timeScale=this._ts;prevPaused=!timeScale;if(crossingStart){dur||(prevTime=this._zTime);(totalTime||!suppressEvents)&&(this._zTime=totalTime);}if(this._repeat){yoyo=this._yoyo;cycleDuration=dur+this._rDelay;if(this._repeat<-1&&totalTime<0){return this.totalTime(cycleDuration*100+totalTime,suppressEvents,force);}time=_roundPrecise(tTime%cycleDuration);if(tTime===tDur){iteration=this._repeat;time=dur;}else{iteration=~~(tTime/cycleDuration);if(iteration&&iteration===tTime/cycleDuration){time=dur;iteration--;}time>dur&&(time=dur);}prevIteration=_animationCycle(this._tTime,cycleDuration);!prevTime&&this._tTime&&prevIteration!==iteration&&this._tTime-prevIteration*cycleDuration-this._dur<=0&&(prevIteration=iteration);if(yoyo&&iteration&1){time=dur-time;isYoyo=1;}if(iteration!==prevIteration&&!this._lock){var rewinding=yoyo&&prevIteration&1,doesWrap=rewinding===(yoyo&&iteration&1);iteration<prevIteration&&(rewinding=!rewinding);prevTime=rewinding?0:dur;this._lock=1;this.render(prevTime||(isYoyo?0:_roundPrecise(iteration*cycleDuration)),suppressEvents,!dur)._lock=0;this._tTime=tTime;!suppressEvents&&this.parent&&_callback(this,"onRepeat");this.vars.repeatRefresh&&!isYoyo&&(this.invalidate()._lock=1);if(prevTime&&prevTime!==this._time||prevPaused!==!this._ts||this.vars.onRepeat&&!this.parent&&!this._act){return this;}dur=this._dur;tDur=this._tDur;if(doesWrap){this._lock=2;prevTime=rewinding?dur:-0.0001;this.render(prevTime,true);this.vars.repeatRefresh&&!isYoyo&&this.invalidate();}this._lock=0;if(!this._ts&&!prevPaused){return this;}_propagateYoyoEase(this,isYoyo);}}if(this._hasPause&&!this._forcing&&this._lock<2){pauseTween=_findNextPauseTween(this,_roundPrecise(prevTime),_roundPrecise(time));if(pauseTween){tTime-=time-(time=pauseTween._start);}}this._tTime=tTime;this._time=time;this._act=!timeScale;if(!this._initted){this._onUpdate=this.vars.onUpdate;this._initted=1;this._zTime=totalTime;prevTime=0;}if(!prevTime&&time&&!suppressEvents&&!iteration){_callback(this,"onStart");if(this._tTime!==tTime){return this;}}if(time>=prevTime&&totalTime>=0){child=this._first;while(child){next=child._next;if((child._act||time>=child._start)&&child._ts&&pauseTween!==child){if(child.parent!==this){return this.render(totalTime,suppressEvents,force);}child.render(child._ts>0?(time-child._start)*child._ts:(child._dirty?child.totalDuration():child._tDur)+(time-child._start)*child._ts,suppressEvents,force);if(time!==this._time||!this._ts&&!prevPaused){pauseTween=0;next&&(tTime+=this._zTime=-_tinyNum);break;}}child=next;}}else{child=this._last;var adjustedTime=totalTime<0?totalTime:time;while(child){next=child._prev;if((child._act||adjustedTime<=child._end)&&child._ts&&pauseTween!==child){if(child.parent!==this){return this.render(totalTime,suppressEvents,force);}child.render(child._ts>0?(adjustedTime-child._start)*child._ts:(child._dirty?child.totalDuration():child._tDur)+(adjustedTime-child._start)*child._ts,suppressEvents,force||_reverting&&(child._initted||child._startAt));if(time!==this._time||!this._ts&&!prevPaused){pauseTween=0;next&&(tTime+=this._zTime=adjustedTime?-_tinyNum:_tinyNum);break;}}child=next;}}if(pauseTween&&!suppressEvents){this.pause();pauseTween.render(time>=prevTime?0:-_tinyNum)._zTime=time>=prevTime?1:-1;if(this._ts){this._start=prevStart;_setEnd(this);return this.render(totalTime,suppressEvents,force);}}this._onUpdate&&!suppressEvents&&_callback(this,"onUpdate",true);if(tTime===tDur&&this._tTime>=this.totalDuration()||!tTime&&prevTime)if(prevStart===this._start||Math.abs(timeScale)!==Math.abs(this._ts))if(!this._lock){(totalTime||!dur)&&(tTime===tDur&&this._ts>0||!tTime&&this._ts<0)&&_removeFromParent(this,1);if(!suppressEvents&&!(totalTime<0&&!prevTime)&&(tTime||prevTime||!tDur)){_callback(this,tTime===tDur&&totalTime>=0?"onComplete":"onReverseComplete",true);this._prom&&!(tTime<tDur&&this.timeScale()>0)&&this._prom();}}}return this;};_proto2.add=function add(child,position){var _this2=this;_isNumber(position)||(position=_parsePosition(this,position,child));if(!(child instanceof Animation)){if(_isArray(child)){child.forEach(function(obj){return _this2.add(obj,position);});return this;}if(_isString(child)){return this.addLabel(child,position);}if(_isFunction(child)){child=Tween.delayedCall(0,child);}else{return this;}}return this!==child?_addToTimeline(this,child,position):this;};_proto2.getChildren=function getChildren(nested,tweens,timelines,ignoreBeforeTime){if(nested===void 0){nested=true;}if(tweens===void 0){tweens=true;}if(timelines===void 0){timelines=true;}if(ignoreBeforeTime===void 0){ignoreBeforeTime=-_bigNum;}var a=[],child=this._first;while(child){if(child._start>=ignoreBeforeTime){if(child instanceof Tween){tweens&&a.push(child);}else{timelines&&a.push(child);nested&&a.push.apply(a,child.getChildren(true,tweens,timelines));}}child=child._next;}return a;};_proto2.getById=function getById(id){var animations=this.getChildren(1,1,1),i=animations.length;while(i--){if(animations[i].vars.id===id){return animations[i];}}};_proto2.remove=function remove(child){if(_isString(child)){return this.removeLabel(child);}if(_isFunction(child)){return this.killTweensOf(child);}_removeLinkedListItem(this,child);if(child===this._recent){this._recent=this._last;}return _uncache(this);};_proto2.totalTime=function totalTime(_totalTime2,suppressEvents){if(!arguments.length){return this._tTime;}this._forcing=1;if(!this._dp&&this._ts){this._start=_roundPrecise(_ticker.time-(this._ts>0?_totalTime2/this._ts:(this.totalDuration()-_totalTime2)/-this._ts));}_Animation.prototype.totalTime.call(this,_totalTime2,suppressEvents);this._forcing=0;return this;};_proto2.addLabel=function addLabel(label,position){this.labels[label]=_parsePosition(this,position);return this;};_proto2.removeLabel=function removeLabel(label){delete this.labels[label];return this;};_proto2.addPause=function addPause(position,callback,params){var t=Tween.delayedCall(0,callback||_emptyFunc,params);t.data="isPause";this._hasPause=1;return _addToTimeline(this,t,_parsePosition(this,position));};_proto2.removePause=function removePause(position){var child=this._first;position=_parsePosition(this,position);while(child){if(child._start===position&&child.data==="isPause"){_removeFromParent(child);}child=child._next;}};_proto2.killTweensOf=function killTweensOf(targets,props,onlyActive){var tweens=this.getTweensOf(targets,onlyActive),i=tweens.length;while(i--){_overwritingTween!==tweens[i]&&tweens[i].kill(targets,props);}return this;};_proto2.getTweensOf=function getTweensOf(targets,onlyActive){var a=[],parsedTargets=toArray(targets),child=this._first,isGlobalTime=_isNumber(onlyActive),children;while(child){if(child instanceof Tween){if(_arrayContainsAny(child._targets,parsedTargets)&&(isGlobalTime?(!_overwritingTween||child._initted&&child._ts)&&child.globalTime(0)<=onlyActive&&child.globalTime(child.totalDuration())>onlyActive:!onlyActive||child.isActive())){a.push(child);}}else if((children=child.getTweensOf(parsedTargets,onlyActive)).length){a.push.apply(a,children);}child=child._next;}return a;};_proto2.tweenTo=function tweenTo(position,vars){vars=vars||{};var tl=this,endTime=_parsePosition(tl,position),_vars=vars,startAt=_vars.startAt,_onStart=_vars.onStart,onStartParams=_vars.onStartParams,immediateRender=_vars.immediateRender,initted,tween=Tween.to(tl,_setDefaults({ease:vars.ease||"none",lazy:false,immediateRender:false,time:endTime,overwrite:"auto",duration:vars.duration||Math.abs((endTime-(startAt&&"time"in startAt?startAt.time:tl._time))/tl.timeScale())||_tinyNum,onStart:function onStart(){tl.pause();if(!initted){var duration=vars.duration||Math.abs((endTime-(startAt&&"time"in startAt?startAt.time:tl._time))/tl.timeScale());tween._dur!==duration&&_setDuration(tween,duration,0,1).render(tween._time,true,true);initted=1;}_onStart&&_onStart.apply(tween,onStartParams||[]);}},vars));return immediateRender?tween.render(0):tween;};_proto2.tweenFromTo=function tweenFromTo(fromPosition,toPosition,vars){return this.tweenTo(toPosition,_setDefaults({startAt:{time:_parsePosition(this,fromPosition)}},vars));};_proto2.recent=function recent(){return this._recent;};_proto2.nextLabel=function nextLabel(afterTime){if(afterTime===void 0){afterTime=this._time;}return _getLabelInDirection(this,_parsePosition(this,afterTime));};_proto2.previousLabel=function previousLabel(beforeTime){if(beforeTime===void 0){beforeTime=this._time;}return _getLabelInDirection(this,_parsePosition(this,beforeTime),1);};_proto2.currentLabel=function currentLabel(value){return arguments.length?this.seek(value,true):this.previousLabel(this._time+_tinyNum);};_proto2.shiftChildren=function shiftChildren(amount,adjustLabels,ignoreBeforeTime){if(ignoreBeforeTime===void 0){ignoreBeforeTime=0;}var child=this._first,labels=this.labels,p;while(child){if(child._start>=ignoreBeforeTime){child._start+=amount;child._end+=amount;}child=child._next;}if(adjustLabels){for(p in labels){if(labels[p]>=ignoreBeforeTime){labels[p]+=amount;}}}return _uncache(this);};_proto2.invalidate=function invalidate(soft){var child=this._first;this._lock=0;while(child){child.invalidate(soft);child=child._next;}return _Animation.prototype.invalidate.call(this,soft);};_proto2.clear=function clear(includeLabels){if(includeLabels===void 0){includeLabels=true;}var child=this._first,next;while(child){next=child._next;this.remove(child);child=next;}this._dp&&(this._time=this._tTime=this._pTime=0);includeLabels&&(this.labels={});return _uncache(this);};_proto2.totalDuration=function totalDuration(value){var max=0,self=this,child=self._last,prevStart=_bigNum,prev,start,parent;if(arguments.length){return self.timeScale((self._repeat<0?self.duration():self.totalDuration())/(self.reversed()?-value:value));}if(self._dirty){parent=self.parent;while(child){prev=child._prev;child._dirty&&child.totalDuration();start=child._start;if(start>prevStart&&self._sort&&child._ts&&!self._lock){self._lock=1;_addToTimeline(self,child,start-child._delay,1)._lock=0;}else{prevStart=start;}if(start<0&&child._ts){max-=start;if(!parent&&!self._dp||parent&&parent.smoothChildTiming){self._start+=start/self._ts;self._time-=start;self._tTime-=start;}self.shiftChildren(-start,false,-1e999);prevStart=0;}child._end>max&&child._ts&&(max=child._end);child=prev;}_setDuration(self,self===_globalTimeline&&self._time>max?self._time:max,1,1);self._dirty=0;}return self._tDur;};Timeline.updateRoot=function updateRoot(time){if(_globalTimeline._ts){_lazySafeRender(_globalTimeline,_parentToChildTotalTime(time,_globalTimeline));_lastRenderedFrame=_ticker.frame;}if(_ticker.frame>=_nextGCFrame){_nextGCFrame+=_config.autoSleep||120;var child=_globalTimeline._first;if(!child||!child._ts)if(_config.autoSleep&&_ticker._listeners.length<2){while(child&&!child._ts){child=child._next;}child||_ticker.sleep();}}};return Timeline;}(Animation);_setDefaults(Timeline.prototype,{_lock:0,_hasPause:0,_forcing:0});var _addComplexStringPropTween=function _addComplexStringPropTween(target,prop,start,end,setter,stringFilter,funcParam){var pt=new PropTween(this._pt,target,prop,0,1,_renderComplexString,null,setter),index=0,matchIndex=0,result,startNums,color,endNum,chunk,startNum,hasRandom,a;pt.b=start;pt.e=end;start+="";end+="";if(hasRandom=~end.indexOf("random(")){end=_replaceRandom(end);}if(stringFilter){a=[start,end];stringFilter(a,target,prop);start=a[0];end=a[1];}startNums=start.match(_complexStringNumExp)||[];while(result=_complexStringNumExp.exec(end)){endNum=result[0];chunk=end.substring(index,result.index);if(color){color=(color+1)%5;}else if(chunk.substr(-5)==="rgba("){color=1;}if(endNum!==startNums[matchIndex++]){startNum=parseFloat(startNums[matchIndex-1])||0;pt._pt={_next:pt._pt,p:chunk||matchIndex===1?chunk:",",s:startNum,c:endNum.charAt(1)==="="?_parseRelative(startNum,endNum)-startNum:parseFloat(endNum)-startNum,m:color&&color<4?Math.round:0};index=_complexStringNumExp.lastIndex;}}pt.c=index<end.length?end.substring(index,end.length):"";pt.fp=funcParam;if(_relExp.test(end)||hasRandom){pt.e=0;}this._pt=pt;return pt;},_addPropTween=function _addPropTween(target,prop,start,end,index,targets,modifier,stringFilter,funcParam,optional){_isFunction(end)&&(end=end(index||0,target,targets));var currentValue=target[prop],parsedStart=start!=="get"?start:!_isFunction(currentValue)?currentValue:funcParam?target[prop.indexOf("set")||!_isFunction(target["get"+prop.substr(3)])?prop:"get"+prop.substr(3)](funcParam):target[prop](),setter=!_isFunction(currentValue)?_setterPlain:funcParam?_setterFuncWithParam:_setterFunc,pt;if(_isString(end)){if(~end.indexOf("random(")){end=_replaceRandom(end);}if(end.charAt(1)==="="){pt=_parseRelative(parsedStart,end)+(getUnit(parsedStart)||0);if(pt||pt===0){end=pt;}}}if(!optional||parsedStart!==end||_forceAllPropTweens){if(!isNaN(parsedStart*end)&&end!==""){pt=new PropTween(this._pt,target,prop,+parsedStart||0,end-(parsedStart||0),typeof currentValue==="boolean"?_renderBoolean:_renderPlain,0,setter);funcParam&&(pt.fp=funcParam);modifier&&pt.modifier(modifier,this,target);return this._pt=pt;}!currentValue&&!(prop in target)&&_missingPlugin(prop,end);return _addComplexStringPropTween.call(this,target,prop,parsedStart,end,setter,stringFilter||_config.stringFilter,funcParam);}},_processVars=function _processVars(vars,index,target,targets,tween){_isFunction(vars)&&(vars=_parseFuncOrString(vars,tween,index,target,targets));if(!_isObject(vars)||vars.style&&vars.nodeType||_isArray(vars)||_isTypedArray(vars)){return _isString(vars)?_parseFuncOrString(vars,tween,index,target,targets):vars;}var copy={},p;for(p in vars){copy[p]=_parseFuncOrString(vars[p],tween,index,target,targets);}return copy;},_checkPlugin=function _checkPlugin(property,vars,tween,index,target,targets){var plugin,pt,ptLookup,i;if(_plugins[property]&&(plugin=new _plugins[property]()).init(target,plugin.rawVars?vars[property]:_processVars(vars[property],index,target,targets,tween),tween,index,targets)!==false){tween._pt=pt=new PropTween(tween._pt,target,property,0,1,plugin.render,plugin,0,plugin.priority);if(tween!==_quickTween){ptLookup=tween._ptLookup[tween._targets.indexOf(target)];i=plugin._props.length;while(i--){ptLookup[plugin._props[i]]=pt;}}}return plugin;},_overwritingTween,_forceAllPropTweens,_initTween=function _initTween(tween,time,tTime){var vars=tween.vars,ease=vars.ease,startAt=vars.startAt,immediateRender=vars.immediateRender,lazy=vars.lazy,onUpdate=vars.onUpdate,onUpdateParams=vars.onUpdateParams,callbackScope=vars.callbackScope,runBackwards=vars.runBackwards,yoyoEase=vars.yoyoEase,keyframes=vars.keyframes,autoRevert=vars.autoRevert,dur=tween._dur,prevStartAt=tween._startAt,targets=tween._targets,parent=tween.parent,fullTargets=parent&&parent.data==="nested"?parent.vars.targets:targets,autoOverwrite=tween._overwrite==="auto"&&!_suppressOverwrites,tl=tween.timeline,cleanVars,i,p,pt,target,hasPriority,gsData,harness,plugin,ptLookup,index,harnessVars,overwritten;tl&&(!keyframes||!ease)&&(ease="none");tween._ease=_parseEase(ease,_defaults.ease);tween._yEase=yoyoEase?_invertEase(_parseEase(yoyoEase===true?ease:yoyoEase,_defaults.ease)):0;if(yoyoEase&&tween._yoyo&&!tween._repeat){yoyoEase=tween._yEase;tween._yEase=tween._ease;tween._ease=yoyoEase;}tween._from=!tl&&!!vars.runBackwards;if(!tl||keyframes&&!vars.stagger){harness=targets[0]?_getCache(targets[0]).harness:0;harnessVars=harness&&vars[harness.prop];cleanVars=_copyExcluding(vars,_reservedProps);if(prevStartAt){prevStartAt._zTime<0&&prevStartAt.progress(1);time<0&&runBackwards&&immediateRender&&!autoRevert?prevStartAt.render(-1,true):prevStartAt.revert(runBackwards&&dur?_revertConfigNoKill:_startAtRevertConfig);prevStartAt._lazy=0;}if(startAt){_removeFromParent(tween._startAt=Tween.set(targets,_setDefaults({data:"isStart",overwrite:false,parent:parent,immediateRender:true,lazy:!prevStartAt&&_isNotFalse(lazy),startAt:null,delay:0,onUpdate:onUpdate,onUpdateParams:onUpdateParams,callbackScope:callbackScope,stagger:0},startAt)));tween._startAt._dp=0;tween._startAt._sat=tween;time<0&&(_reverting||!immediateRender&&!autoRevert)&&tween._startAt.revert(_revertConfigNoKill);if(immediateRender){if(dur&&time<=0&&tTime<=0){time&&(tween._zTime=time);return;}}}else if(runBackwards&&dur){if(!prevStartAt){time&&(immediateRender=false);p=_setDefaults({overwrite:false,data:"isFromStart",lazy:immediateRender&&!prevStartAt&&_isNotFalse(lazy),immediateRender:immediateRender,stagger:0,parent:parent},cleanVars);harnessVars&&(p[harness.prop]=harnessVars);_removeFromParent(tween._startAt=Tween.set(targets,p));tween._startAt._dp=0;tween._startAt._sat=tween;time<0&&(_reverting?tween._startAt.revert(_revertConfigNoKill):tween._startAt.render(-1,true));tween._zTime=time;if(!immediateRender){_initTween(tween._startAt,_tinyNum,_tinyNum);}else if(!time){return;}}}tween._pt=tween._ptCache=0;lazy=dur&&_isNotFalse(lazy)||lazy&&!dur;for(i=0;i<targets.length;i++){target=targets[i];gsData=target._gsap||_harness(targets)[i]._gsap;tween._ptLookup[i]=ptLookup={};_lazyLookup[gsData.id]&&_lazyTweens.length&&_lazyRender();index=fullTargets===targets?i:fullTargets.indexOf(target);if(harness&&(plugin=new harness()).init(target,harnessVars||cleanVars,tween,index,fullTargets)!==false){tween._pt=pt=new PropTween(tween._pt,target,plugin.name,0,1,plugin.render,plugin,0,plugin.priority);plugin._props.forEach(function(name){ptLookup[name]=pt;});plugin.priority&&(hasPriority=1);}if(!harness||harnessVars){for(p in cleanVars){if(_plugins[p]&&(plugin=_checkPlugin(p,cleanVars,tween,index,target,fullTargets))){plugin.priority&&(hasPriority=1);}else{ptLookup[p]=pt=_addPropTween.call(tween,target,p,"get",cleanVars[p],index,fullTargets,0,vars.stringFilter);}}}tween._op&&tween._op[i]&&tween.kill(target,tween._op[i]);if(autoOverwrite&&tween._pt){_overwritingTween=tween;_globalTimeline.killTweensOf(target,ptLookup,tween.globalTime(time));overwritten=!tween.parent;_overwritingTween=0;}tween._pt&&lazy&&(_lazyLookup[gsData.id]=1);}hasPriority&&_sortPropTweensByPriority(tween);tween._onInit&&tween._onInit(tween);}tween._onUpdate=onUpdate;tween._initted=(!tween._op||tween._pt)&&!overwritten;keyframes&&time<=0&&tl.render(_bigNum,true,true);},_updatePropTweens=function _updatePropTweens(tween,property,value,start,startIsRelative,ratio,time){var ptCache=(tween._pt&&tween._ptCache||(tween._ptCache={}))[property],pt,rootPT,lookup,i;if(!ptCache){ptCache=tween._ptCache[property]=[];lookup=tween._ptLookup;i=tween._targets.length;while(i--){pt=lookup[i][property];if(pt&&pt.d&&pt.d._pt){pt=pt.d._pt;while(pt&&pt.p!==property&&pt.fp!==property){pt=pt._next;}}if(!pt){_forceAllPropTweens=1;tween.vars[property]="+=0";_initTween(tween,time);_forceAllPropTweens=0;return 1;}ptCache.push(pt);}}i=ptCache.length;while(i--){rootPT=ptCache[i];pt=rootPT._pt||rootPT;pt.s=(start||start===0)&&!startIsRelative?start:pt.s+(start||0)+ratio*pt.c;pt.c=value-pt.s;rootPT.e&&(rootPT.e=_round(value)+getUnit(rootPT.e));rootPT.b&&(rootPT.b=pt.s+getUnit(rootPT.b));}},_addAliasesToVars=function _addAliasesToVars(targets,vars){var harness=targets[0]?_getCache(targets[0]).harness:0,propertyAliases=harness&&harness.aliases,copy,p,i,aliases;if(!propertyAliases){return vars;}copy=_merge({},vars);for(p in propertyAliases){if(p in copy){aliases=propertyAliases[p].split(",");i=aliases.length;while(i--){copy[aliases[i]]=copy[p];}}}return copy;},_parseKeyframe=function _parseKeyframe(prop,obj,allProps,easeEach){var ease=obj.ease||easeEach||"power1.inOut",p,a;if(_isArray(obj)){a=allProps[prop]||(allProps[prop]=[]);obj.forEach(function(value,i){return a.push({t:i/(obj.length-1)*100,v:value,e:ease});});}else{for(p in obj){a=allProps[p]||(allProps[p]=[]);p==="ease"||a.push({t:parseFloat(prop),v:obj[p],e:ease});}}},_parseFuncOrString=function _parseFuncOrString(value,tween,i,target,targets){return _isFunction(value)?value.call(tween,i,target,targets):_isString(value)&&~value.indexOf("random(")?_replaceRandom(value):value;},_staggerTweenProps=_callbackNames+"repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase,autoRevert",_staggerPropsToSkip={};_forEachName(_staggerTweenProps+",id,stagger,delay,duration,paused,scrollTrigger",function(name){return _staggerPropsToSkip[name]=1;});var Tween=function(_Animation2){_inheritsLoose(Tween,_Animation2);function Tween(targets,vars,position,skipInherit){var _this3;if(typeof vars==="number"){position.duration=vars;vars=position;position=null;}_this3=_Animation2.call(this,skipInherit?vars:_inheritDefaults(vars))||this;var _this3$vars=_this3.vars,duration=_this3$vars.duration,delay=_this3$vars.delay,immediateRender=_this3$vars.immediateRender,stagger=_this3$vars.stagger,overwrite=_this3$vars.overwrite,keyframes=_this3$vars.keyframes,defaults=_this3$vars.defaults,scrollTrigger=_this3$vars.scrollTrigger,yoyoEase=_this3$vars.yoyoEase,parent=vars.parent||_globalTimeline,parsedTargets=(_isArray(targets)||_isTypedArray(targets)?_isNumber(targets[0]):"length"in vars)?[targets]:toArray(targets),tl,i,copy,l,p,curTarget,staggerFunc,staggerVarsToMerge;_this3._targets=parsedTargets.length?_harness(parsedTargets):_warn("GSAP target "+targets+" not found. https://greensock.com",!_config.nullTargetWarn)||[];_this3._ptLookup=[];_this3._overwrite=overwrite;if(keyframes||stagger||_isFuncOrString(duration)||_isFuncOrString(delay)){vars=_this3.vars;tl=_this3.timeline=new Timeline({data:"nested",defaults:defaults||{},targets:parent&&parent.data==="nested"?parent.vars.targets:parsedTargets});tl.kill();tl.parent=tl._dp=_assertThisInitialized(_this3);tl._start=0;if(stagger||_isFuncOrString(duration)||_isFuncOrString(delay)){l=parsedTargets.length;staggerFunc=stagger&&distribute(stagger);if(_isObject(stagger)){for(p in stagger){if(~_staggerTweenProps.indexOf(p)){staggerVarsToMerge||(staggerVarsToMerge={});staggerVarsToMerge[p]=stagger[p];}}}for(i=0;i<l;i++){copy=_copyExcluding(vars,_staggerPropsToSkip);copy.stagger=0;yoyoEase&&(copy.yoyoEase=yoyoEase);staggerVarsToMerge&&_merge(copy,staggerVarsToMerge);curTarget=parsedTargets[i];copy.duration=+_parseFuncOrString(duration,_assertThisInitialized(_this3),i,curTarget,parsedTargets);copy.delay=(+_parseFuncOrString(delay,_assertThisInitialized(_this3),i,curTarget,parsedTargets)||0)-_this3._delay;if(!stagger&&l===1&&copy.delay){_this3._delay=delay=copy.delay;_this3._start+=delay;copy.delay=0;}tl.to(curTarget,copy,staggerFunc?staggerFunc(i,curTarget,parsedTargets):0);tl._ease=_easeMap.none;}tl.duration()?duration=delay=0:_this3.timeline=0;}else if(keyframes){_inheritDefaults(_setDefaults(tl.vars.defaults,{ease:"none"}));tl._ease=_parseEase(keyframes.ease||vars.ease||"none");var time=0,a,kf,v;if(_isArray(keyframes)){keyframes.forEach(function(frame){return tl.to(parsedTargets,frame,">");});tl.duration();}else{copy={};for(p in keyframes){p==="ease"||p==="easeEach"||_parseKeyframe(p,keyframes[p],copy,keyframes.easeEach);}for(p in copy){a=copy[p].sort(function(a,b){return a.t-b.t;});time=0;for(i=0;i<a.length;i++){kf=a[i];v={ease:kf.e,duration:(kf.t-(i?a[i-1].t:0))/100*duration};v[p]=kf.v;tl.to(parsedTargets,v,time);time+=v.duration;}}tl.duration()<duration&&tl.to({},{duration:duration-tl.duration()});}}duration||_this3.duration(duration=tl.duration());}else{_this3.timeline=0;}if(overwrite===true&&!_suppressOverwrites){_overwritingTween=_assertThisInitialized(_this3);_globalTimeline.killTweensOf(parsedTargets);_overwritingTween=0;}_addToTimeline(parent,_assertThisInitialized(_this3),position);vars.reversed&&_this3.reverse();vars.paused&&_this3.paused(true);if(immediateRender||!duration&&!keyframes&&_this3._start===_roundPrecise(parent._time)&&_isNotFalse(immediateRender)&&_hasNoPausedAncestors(_assertThisInitialized(_this3))&&parent.data!=="nested"){_this3._tTime=-_tinyNum;_this3.render(Math.max(0,-delay)||0);}scrollTrigger&&_scrollTrigger(_assertThisInitialized(_this3),scrollTrigger);return _this3;}var _proto3=Tween.prototype;_proto3.render=function render(totalTime,suppressEvents,force){var prevTime=this._time,tDur=this._tDur,dur=this._dur,isNegative=totalTime<0,tTime=totalTime>tDur-_tinyNum&&!isNegative?tDur:totalTime<_tinyNum?0:totalTime,time,pt,iteration,cycleDuration,prevIteration,isYoyo,ratio,timeline,yoyoEase;if(!dur){_renderZeroDurationTween(this,totalTime,suppressEvents,force);}else if(tTime!==this._tTime||!totalTime||force||!this._initted&&this._tTime||this._startAt&&this._zTime<0!==isNegative){time=tTime;timeline=this.timeline;if(this._repeat){cycleDuration=dur+this._rDelay;if(this._repeat<-1&&isNegative){return this.totalTime(cycleDuration*100+totalTime,suppressEvents,force);}time=_roundPrecise(tTime%cycleDuration);if(tTime===tDur){iteration=this._repeat;time=dur;}else{iteration=~~(tTime/cycleDuration);if(iteration&&iteration===tTime/cycleDuration){time=dur;iteration--;}time>dur&&(time=dur);}isYoyo=this._yoyo&&iteration&1;if(isYoyo){yoyoEase=this._yEase;time=dur-time;}prevIteration=_animationCycle(this._tTime,cycleDuration);if(time===prevTime&&!force&&this._initted){this._tTime=tTime;return this;}if(iteration!==prevIteration){timeline&&this._yEase&&_propagateYoyoEase(timeline,isYoyo);if(this.vars.repeatRefresh&&!isYoyo&&!this._lock){this._lock=force=1;this.render(_roundPrecise(cycleDuration*iteration),true).invalidate()._lock=0;}}}if(!this._initted){if(_attemptInitTween(this,isNegative?totalTime:time,force,suppressEvents,tTime)){this._tTime=0;return this;}if(prevTime!==this._time){return this;}if(dur!==this._dur){return this.render(totalTime,suppressEvents,force);}}this._tTime=tTime;this._time=time;if(!this._act&&this._ts){this._act=1;this._lazy=0;}this.ratio=ratio=(yoyoEase||this._ease)(time/dur);if(this._from){this.ratio=ratio=1-ratio;}if(time&&!prevTime&&!suppressEvents&&!iteration){_callback(this,"onStart");if(this._tTime!==tTime){return this;}}pt=this._pt;while(pt){pt.r(ratio,pt.d);pt=pt._next;}timeline&&timeline.render(totalTime<0?totalTime:!time&&isYoyo?-_tinyNum:timeline._dur*timeline._ease(time/this._dur),suppressEvents,force)||this._startAt&&(this._zTime=totalTime);if(this._onUpdate&&!suppressEvents){isNegative&&_rewindStartAt(this,totalTime,suppressEvents,force);_callback(this,"onUpdate");}this._repeat&&iteration!==prevIteration&&this.vars.onRepeat&&!suppressEvents&&this.parent&&_callback(this,"onRepeat");if((tTime===this._tDur||!tTime)&&this._tTime===tTime){isNegative&&!this._onUpdate&&_rewindStartAt(this,totalTime,true,true);(totalTime||!dur)&&(tTime===this._tDur&&this._ts>0||!tTime&&this._ts<0)&&_removeFromParent(this,1);if(!suppressEvents&&!(isNegative&&!prevTime)&&(tTime||prevTime||isYoyo)){_callback(this,tTime===tDur?"onComplete":"onReverseComplete",true);this._prom&&!(tTime<tDur&&this.timeScale()>0)&&this._prom();}}}return this;};_proto3.targets=function targets(){return this._targets;};_proto3.invalidate=function invalidate(soft){(!soft||!this.vars.runBackwards)&&(this._startAt=0);this._pt=this._op=this._onUpdate=this._lazy=this.ratio=0;this._ptLookup=[];this.timeline&&this.timeline.invalidate(soft);return _Animation2.prototype.invalidate.call(this,soft);};_proto3.resetTo=function resetTo(property,value,start,startIsRelative){_tickerActive||_ticker.wake();this._ts||this.play();var time=Math.min(this._dur,(this._dp._time-this._start)*this._ts),ratio;this._initted||_initTween(this,time);ratio=this._ease(time/this._dur);if(_updatePropTweens(this,property,value,start,startIsRelative,ratio,time)){return this.resetTo(property,value,start,startIsRelative);}_alignPlayhead(this,0);this.parent||_addLinkedListItem(this._dp,this,"_first","_last",this._dp._sort?"_start":0);return this.render(0);};_proto3.kill=function kill(targets,vars){if(vars===void 0){vars="all";}if(!targets&&(!vars||vars==="all")){this._lazy=this._pt=0;return this.parent?_interrupt(this):this;}if(this.timeline){var tDur=this.timeline.totalDuration();this.timeline.killTweensOf(targets,vars,_overwritingTween&&_overwritingTween.vars.overwrite!==true)._first||_interrupt(this);this.parent&&tDur!==this.timeline.totalDuration()&&_setDuration(this,this._dur*this.timeline._tDur/tDur,0,1);return this;}var parsedTargets=this._targets,killingTargets=targets?toArray(targets):parsedTargets,propTweenLookup=this._ptLookup,firstPT=this._pt,overwrittenProps,curLookup,curOverwriteProps,props,p,pt,i;if((!vars||vars==="all")&&_arraysMatch(parsedTargets,killingTargets)){vars==="all"&&(this._pt=0);return _interrupt(this);}overwrittenProps=this._op=this._op||[];if(vars!=="all"){if(_isString(vars)){p={};_forEachName(vars,function(name){return p[name]=1;});vars=p;}vars=_addAliasesToVars(parsedTargets,vars);}i=parsedTargets.length;while(i--){if(~killingTargets.indexOf(parsedTargets[i])){curLookup=propTweenLookup[i];if(vars==="all"){overwrittenProps[i]=vars;props=curLookup;curOverwriteProps={};}else{curOverwriteProps=overwrittenProps[i]=overwrittenProps[i]||{};props=vars;}for(p in props){pt=curLookup&&curLookup[p];if(pt){if(!("kill"in pt.d)||pt.d.kill(p)===true){_removeLinkedListItem(this,pt,"_pt");}delete curLookup[p];}if(curOverwriteProps!=="all"){curOverwriteProps[p]=1;}}}}this._initted&&!this._pt&&firstPT&&_interrupt(this);return this;};Tween.to=function to(targets,vars){return new Tween(targets,vars,arguments[2]);};Tween.from=function from(targets,vars){return _createTweenType(1,arguments);};Tween.delayedCall=function delayedCall(delay,callback,params,scope){return new Tween(callback,0,{immediateRender:false,lazy:false,overwrite:false,delay:delay,onComplete:callback,onReverseComplete:callback,onCompleteParams:params,onReverseCompleteParams:params,callbackScope:scope});};Tween.fromTo=function fromTo(targets,fromVars,toVars){return _createTweenType(2,arguments);};Tween.set=function set(targets,vars){vars.duration=0;vars.repeatDelay||(vars.repeat=0);return new Tween(targets,vars);};Tween.killTweensOf=function killTweensOf(targets,props,onlyActive){return _globalTimeline.killTweensOf(targets,props,onlyActive);};return Tween;}(Animation);_setDefaults(Tween.prototype,{_targets:[],_lazy:0,_startAt:0,_op:0,_onInit:0});_forEachName("staggerTo,staggerFrom,staggerFromTo",function(name){Tween[name]=function(){var tl=new Timeline(),params=_slice.call(arguments,0);params.splice(name==="staggerFromTo"?5:4,0,0);return tl[name].apply(tl,params);};});var _setterPlain=function _setterPlain(target,property,value){return target[property]=value;},_setterFunc=function _setterFunc(target,property,value){return target[property](value);},_setterFuncWithParam=function _setterFuncWithParam(target,property,value,data){return target[property](data.fp,value);},_setterAttribute=function _setterAttribute(target,property,value){return target.setAttribute(property,value);},_getSetter=function _getSetter(target,property){return _isFunction(target[property])?_setterFunc:_isUndefined(target[property])&&target.setAttribute?_setterAttribute:_setterPlain;},_renderPlain=function _renderPlain(ratio,data){return data.set(data.t,data.p,Math.round((data.s+data.c*ratio)*1000000)/1000000,data);},_renderBoolean=function _renderBoolean(ratio,data){return data.set(data.t,data.p,!!(data.s+data.c*ratio),data);},_renderComplexString=function _renderComplexString(ratio,data){var pt=data._pt,s="";if(!ratio&&data.b){s=data.b;}else if(ratio===1&&data.e){s=data.e;}else{while(pt){s=pt.p+(pt.m?pt.m(pt.s+pt.c*ratio):Math.round((pt.s+pt.c*ratio)*10000)/10000)+s;pt=pt._next;}s+=data.c;}data.set(data.t,data.p,s,data);},_renderPropTweens=function _renderPropTweens(ratio,data){var pt=data._pt;while(pt){pt.r(ratio,pt.d);pt=pt._next;}},_addPluginModifier=function _addPluginModifier(modifier,tween,target,property){var pt=this._pt,next;while(pt){next=pt._next;pt.p===property&&pt.modifier(modifier,tween,target);pt=next;}},_killPropTweensOf=function _killPropTweensOf(property){var pt=this._pt,hasNonDependentRemaining,next;while(pt){next=pt._next;if(pt.p===property&&!pt.op||pt.op===property){_removeLinkedListItem(this,pt,"_pt");}else if(!pt.dep){hasNonDependentRemaining=1;}pt=next;}return!hasNonDependentRemaining;},_setterWithModifier=function _setterWithModifier(target,property,value,data){data.mSet(target,property,data.m.call(data.tween,value,data.mt),data);},_sortPropTweensByPriority=function _sortPropTweensByPriority(parent){var pt=parent._pt,next,pt2,first,last;while(pt){next=pt._next;pt2=first;while(pt2&&pt2.pr>pt.pr){pt2=pt2._next;}if(pt._prev=pt2?pt2._prev:last){pt._prev._next=pt;}else{first=pt;}if(pt._next=pt2){pt2._prev=pt;}else{last=pt;}pt=next;}parent._pt=first;};var PropTween=function(){function PropTween(next,target,prop,start,change,renderer,data,setter,priority){this.t=target;this.s=start;this.c=change;this.p=prop;this.r=renderer||_renderPlain;this.d=data||this;this.set=setter||_setterPlain;this.pr=priority||0;this._next=next;if(next){next._prev=this;}}var _proto4=PropTween.prototype;_proto4.modifier=function modifier(func,tween,target){this.mSet=this.mSet||this.set;this.set=_setterWithModifier;this.m=func;this.mt=target;this.tween=tween;};return PropTween;}();_forEachName(_callbackNames+"parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert,scrollTrigger",function(name){return _reservedProps[name]=1;});_globals.TweenMax=_globals.TweenLite=Tween;_globals.TimelineLite=_globals.TimelineMax=Timeline;_globalTimeline=new Timeline({sortChildren:false,defaults:_defaults,autoRemoveChildren:true,id:"root",smoothChildTiming:true});_config.stringFilter=_colorStringFilter;var _media=[],_listeners={},_emptyArray=[],_lastMediaTime=0,_dispatch=function _dispatch(type){return(_listeners[type]||_emptyArray).map(function(f){return f();});},_onMediaChange=function _onMediaChange(){var time=Date.now(),matches=[];if(time-_lastMediaTime>2){_dispatch("matchMediaInit");_media.forEach(function(c){var queries=c.queries,conditions=c.conditions,match,p,anyMatch,toggled;for(p in queries){match=_win.matchMedia(queries[p]).matches;match&&(anyMatch=1);if(match!==conditions[p]){conditions[p]=match;toggled=1;}}if(toggled){c.revert();anyMatch&&matches.push(c);}});_dispatch("matchMediaRevert");matches.forEach(function(c){return c.onMatch(c);});_lastMediaTime=time;_dispatch("matchMedia");}};var Context=function(){function Context(func,scope){this.selector=scope&&selector(scope);this.data=[];this._r=[];this.isReverted=false;func&&this.add(func);}var _proto5=Context.prototype;_proto5.add=function add(name,func,scope){if(_isFunction(name)){scope=func;func=name;name=_isFunction;}var self=this,f=function f(){var prev=_context,prevSelector=self.selector,result;prev&&prev!==self&&prev.data.push(self);scope&&(self.selector=selector(scope));_context=self;result=func.apply(self,arguments);_isFunction(result)&&self._r.push(result);_context=prev;self.selector=prevSelector;self.isReverted=false;return result;};self.last=f;return name===_isFunction?f(self):name?self[name]=f:f;};_proto5.ignore=function ignore(func){var prev=_context;_context=null;func(this);_context=prev;};_proto5.getTweens=function getTweens(){var a=[];this.data.forEach(function(e){return e instanceof Context?a.push.apply(a,e.getTweens()):e instanceof Tween&&!(e.parent&&e.parent.data==="nested")&&a.push(e);});return a;};_proto5.clear=function clear(){this._r.length=this.data.length=0;};_proto5.kill=function kill(revert,matchMedia){var _this4=this;if(revert){var tweens=this.getTweens();this.data.forEach(function(t){if(t.data==="isFlip"){t.revert();t.getChildren(true,true,false).forEach(function(tween){return tweens.splice(tweens.indexOf(tween),1);});}});tweens.map(function(t){return{g:t.globalTime(0),t:t};}).sort(function(a,b){return b.g-a.g||-1;}).forEach(function(o){return o.t.revert(revert);});this.data.forEach(function(e){return!(e instanceof Animation)&&e.revert&&e.revert(revert);});this._r.forEach(function(f){return f(revert,_this4);});this.isReverted=true;}else{this.data.forEach(function(e){return e.kill&&e.kill();});}this.clear();if(matchMedia){var i=_media.indexOf(this);!!~i&&_media.splice(i,1);}};_proto5.revert=function revert(config){this.kill(config||{});};return Context;}();var MatchMedia=function(){function MatchMedia(scope){this.contexts=[];this.scope=scope;}var _proto6=MatchMedia.prototype;_proto6.add=function add(conditions,func,scope){_isObject(conditions)||(conditions={matches:conditions});var context=new Context(0,scope||this.scope),cond=context.conditions={},mq,p,active;this.contexts.push(context);func=context.add("onMatch",func);context.queries=conditions;for(p in conditions){if(p==="all"){active=1;}else{mq=_win.matchMedia(conditions[p]);if(mq){_media.indexOf(context)<0&&_media.push(context);(cond[p]=mq.matches)&&(active=1);mq.addListener?mq.addListener(_onMediaChange):mq.addEventListener("change",_onMediaChange);}}}active&&func(context);return this;};_proto6.revert=function revert(config){this.kill(config||{});};_proto6.kill=function kill(revert){this.contexts.forEach(function(c){return c.kill(revert,true);});};return MatchMedia;}();var _gsap={registerPlugin:function registerPlugin(){for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++){args[_key2]=arguments[_key2];}args.forEach(function(config){return _createPlugin(config);});},timeline:function timeline(vars){return new Timeline(vars);},getTweensOf:function getTweensOf(targets,onlyActive){return _globalTimeline.getTweensOf(targets,onlyActive);},getProperty:function getProperty(target,property,unit,uncache){_isString(target)&&(target=toArray(target)[0]);var getter=_getCache(target||{}).get,format=unit?_passThrough:_numericIfPossible;unit==="native"&&(unit="");return!target?target:!property?function(property,unit,uncache){return format((_plugins[property]&&_plugins[property].get||getter)(target,property,unit,uncache));}:format((_plugins[property]&&_plugins[property].get||getter)(target,property,unit,uncache));},quickSetter:function quickSetter(target,property,unit){target=toArray(target);if(target.length>1){var setters=target.map(function(t){return gsap.quickSetter(t,property,unit);}),l=setters.length;return function(value){var i=l;while(i--){setters[i](value);}};}target=target[0]||{};var Plugin=_plugins[property],cache=_getCache(target),p=cache.harness&&(cache.harness.aliases||{})[property]||property,setter=Plugin?function(value){var p=new Plugin();_quickTween._pt=0;p.init(target,unit?value+unit:value,_quickTween,0,[target]);p.render(1,p);_quickTween._pt&&_renderPropTweens(1,_quickTween);}:cache.set(target,p);return Plugin?setter:function(value){return setter(target,p,unit?value+unit:value,cache,1);};},quickTo:function quickTo(target,property,vars){var _merge2;var tween=gsap.to(target,_merge((_merge2={},_merge2[property]="+=0.1",_merge2.paused=true,_merge2),vars||{})),func=function func(value,start,startIsRelative){return tween.resetTo(property,value,start,startIsRelative);};func.tween=tween;return func;},isTweening:function isTweening(targets){return _globalTimeline.getTweensOf(targets,true).length>0;},defaults:function defaults(value){value&&value.ease&&(value.ease=_parseEase(value.ease,_defaults.ease));return _mergeDeep(_defaults,value||{});},config:function config(value){return _mergeDeep(_config,value||{});},registerEffect:function registerEffect(_ref3){var name=_ref3.name,effect=_ref3.effect,plugins=_ref3.plugins,defaults=_ref3.defaults,extendTimeline=_ref3.extendTimeline;(plugins||"").split(",").forEach(function(pluginName){return pluginName&&!_plugins[pluginName]&&!_globals[pluginName]&&_warn(name+" effect requires "+pluginName+" plugin.");});_effects[name]=function(targets,vars,tl){return effect(toArray(targets),_setDefaults(vars||{},defaults),tl);};if(extendTimeline){Timeline.prototype[name]=function(targets,vars,position){return this.add(_effects[name](targets,_isObject(vars)?vars:(position=vars)&&{},this),position);};}},registerEase:function registerEase(name,ease){_easeMap[name]=_parseEase(ease);},parseEase:function parseEase(ease,defaultEase){return arguments.length?_parseEase(ease,defaultEase):_easeMap;},getById:function getById(id){return _globalTimeline.getById(id);},exportRoot:function exportRoot(vars,includeDelayedCalls){if(vars===void 0){vars={};}var tl=new Timeline(vars),child,next;tl.smoothChildTiming=_isNotFalse(vars.smoothChildTiming);_globalTimeline.remove(tl);tl._dp=0;tl._time=tl._tTime=_globalTimeline._time;child=_globalTimeline._first;while(child){next=child._next;if(includeDelayedCalls||!(!child._dur&&child instanceof Tween&&child.vars.onComplete===child._targets[0])){_addToTimeline(tl,child,child._start-child._delay);}child=next;}_addToTimeline(_globalTimeline,tl,0);return tl;},context:function context(func,scope){return func?new Context(func,scope):_context;},matchMedia:function matchMedia(scope){return new MatchMedia(scope);},matchMediaRefresh:function matchMediaRefresh(){return _media.forEach(function(c){var cond=c.conditions,found,p;for(p in cond){if(cond[p]){cond[p]=false;found=1;}}found&&c.revert();})||_onMediaChange();},addEventListener:function addEventListener(type,callback){var a=_listeners[type]||(_listeners[type]=[]);~a.indexOf(callback)||a.push(callback);},removeEventListener:function removeEventListener(type,callback){var a=_listeners[type],i=a&&a.indexOf(callback);i>=0&&a.splice(i,1);},utils:{wrap:wrap,wrapYoyo:wrapYoyo,distribute:distribute,random:random,snap:snap,normalize:normalize,getUnit:getUnit,clamp:clamp,splitColor:splitColor,toArray:toArray,selector:selector,mapRange:mapRange,pipe:pipe,unitize:unitize,interpolate:interpolate,shuffle:shuffle},install:_install,effects:_effects,ticker:_ticker,updateRoot:Timeline.updateRoot,plugins:_plugins,globalTimeline:_globalTimeline,core:{PropTween:PropTween,globals:_addGlobal,Tween:Tween,Timeline:Timeline,Animation:Animation,getCache:_getCache,_removeLinkedListItem:_removeLinkedListItem,reverting:function reverting(){return _reverting;},context:function context(toAdd){if(toAdd&&_context){_context.data.push(toAdd);toAdd._ctx=_context;}return _context;},suppressOverwrites:function suppressOverwrites(value){return _suppressOverwrites=value;}}};_forEachName("to,from,fromTo,delayedCall,set,killTweensOf",function(name){return _gsap[name]=Tween[name];});_ticker.add(Timeline.updateRoot);_quickTween=_gsap.to({},{duration:0});var _getPluginPropTween=function _getPluginPropTween(plugin,prop){var pt=plugin._pt;while(pt&&pt.p!==prop&&pt.op!==prop&&pt.fp!==prop){pt=pt._next;}return pt;},_addModifiers=function _addModifiers(tween,modifiers){var targets=tween._targets,p,i,pt;for(p in modifiers){i=targets.length;while(i--){pt=tween._ptLookup[i][p];if(pt&&(pt=pt.d)){if(pt._pt){pt=_getPluginPropTween(pt,p);}pt&&pt.modifier&&pt.modifier(modifiers[p],tween,targets[i],p);}}}},_buildModifierPlugin=function _buildModifierPlugin(name,modifier){return{name:name,rawVars:1,init:function init(target,vars,tween){tween._onInit=function(tween){var temp,p;if(_isString(vars)){temp={};_forEachName(vars,function(name){return temp[name]=1;});vars=temp;}if(modifier){temp={};for(p in vars){temp[p]=modifier(vars[p]);}vars=temp;}_addModifiers(tween,vars);};}};};var gsap=_gsap.registerPlugin({name:"attr",init:function init(target,vars,tween,index,targets){var p,pt,v;this.tween=tween;for(p in vars){v=target.getAttribute(p)||"";pt=this.add(target,"setAttribute",(v||0)+"",vars[p],index,targets,0,0,p);pt.op=p;pt.b=v;this._props.push(p);}},render:function render(ratio,data){var pt=data._pt;while(pt){_reverting?pt.set(pt.t,pt.p,pt.b,pt):pt.r(ratio,pt.d);pt=pt._next;}}},{name:"endArray",init:function init(target,value){var i=value.length;while(i--){this.add(target,i,target[i]||0,value[i],0,0,0,0,0,1);}}},_buildModifierPlugin("roundProps",_roundModifier),_buildModifierPlugin("modifiers"),_buildModifierPlugin("snap",snap))||_gsap;Tween.version=Timeline.version=gsap.version="3.11.5";_coreReady=1;_windowExists()&&_wake();var Power0=_easeMap.Power0,Power1=_easeMap.Power1,Power2=_easeMap.Power2,Power3=_easeMap.Power3,Power4=_easeMap.Power4,Linear=_easeMap.Linear,Quad=_easeMap.Quad,Cubic=_easeMap.Cubic,Quart=_easeMap.Quart,Quint=_easeMap.Quint,Strong=_easeMap.Strong,Elastic=_easeMap.Elastic,Back=_easeMap.Back,SteppedEase=_easeMap.SteppedEase,Bounce=_easeMap.Bounce,Sine=_easeMap.Sine,Expo=_easeMap.Expo,Circ=_easeMap.Circ;var _win$1,_doc$1,_docElement,_pluginInitted,_tempDiv,_tempDivStyler,_recentSetterPlugin,_reverting$1,_windowExists$1=function _windowExists(){return typeof window!=="undefined";},_transformProps={},_RAD2DEG=180/Math.PI,_DEG2RAD=Math.PI/180,_atan2=Math.atan2,_bigNum$1=1e8,_capsExp=/([A-Z])/g,_horizontalExp=/(left|right|width|margin|padding|x)/i,_complexExp=/[\s,\(]\S/,_propertyAliases={autoAlpha:"opacity,visibility",scale:"scaleX,scaleY",alpha:"opacity"},_renderCSSProp=function _renderCSSProp(ratio,data){return data.set(data.t,data.p,Math.round((data.s+data.c*ratio)*10000)/10000+data.u,data);},_renderPropWithEnd=function _renderPropWithEnd(ratio,data){return data.set(data.t,data.p,ratio===1?data.e:Math.round((data.s+data.c*ratio)*10000)/10000+data.u,data);},_renderCSSPropWithBeginning=function _renderCSSPropWithBeginning(ratio,data){return data.set(data.t,data.p,ratio?Math.round((data.s+data.c*ratio)*10000)/10000+data.u:data.b,data);},_renderRoundedCSSProp=function _renderRoundedCSSProp(ratio,data){var value=data.s+data.c*ratio;data.set(data.t,data.p,~~(value+(value<0?-.5:.5))+data.u,data);},_renderNonTweeningValue=function _renderNonTweeningValue(ratio,data){return data.set(data.t,data.p,ratio?data.e:data.b,data);},_renderNonTweeningValueOnlyAtEnd=function _renderNonTweeningValueOnlyAtEnd(ratio,data){return data.set(data.t,data.p,ratio!==1?data.b:data.e,data);},_setterCSSStyle=function _setterCSSStyle(target,property,value){return target.style[property]=value;},_setterCSSProp=function _setterCSSProp(target,property,value){return target.style.setProperty(property,value);},_setterTransform=function _setterTransform(target,property,value){return target._gsap[property]=value;},_setterScale=function _setterScale(target,property,value){return target._gsap.scaleX=target._gsap.scaleY=value;},_setterScaleWithRender=function _setterScaleWithRender(target,property,value,data,ratio){var cache=target._gsap;cache.scaleX=cache.scaleY=value;cache.renderTransform(ratio,cache);},_setterTransformWithRender=function _setterTransformWithRender(target,property,value,data,ratio){var cache=target._gsap;cache[property]=value;cache.renderTransform(ratio,cache);},_transformProp="transform",_transformOriginProp=_transformProp+"Origin",_saveStyle=function _saveStyle(property,isNotCSS){var _this=this;var target=this.target,style=target.style;if(property in _transformProps){this.tfm=this.tfm||{};if(property!=="transform"){property=_propertyAliases[property]||property;~property.indexOf(",")?property.split(",").forEach(function(a){return _this.tfm[a]=_get(target,a);}):this.tfm[property]=target._gsap.x?target._gsap[property]:_get(target,property);}else{return _propertyAliases.transform.split(",").forEach(function(p){return _saveStyle.call(_this,p,isNotCSS);});}if(this.props.indexOf(_transformProp)>=0){return;}if(target._gsap.svg){this.svgo=target.getAttribute("data-svg-origin");this.props.push(_transformOriginProp,isNotCSS,"");}property=_transformProp;}(style||isNotCSS)&&this.props.push(property,isNotCSS,style[property]);},_removeIndependentTransforms=function _removeIndependentTransforms(style){if(style.translate){style.removeProperty("translate");style.removeProperty("scale");style.removeProperty("rotate");}},_revertStyle=function _revertStyle(){var props=this.props,target=this.target,style=target.style,cache=target._gsap,i,p;for(i=0;i<props.length;i+=3){props[i+1]?target[props[i]]=props[i+2]:props[i+2]?style[props[i]]=props[i+2]:style.removeProperty(props[i].substr(0,2)==="--"?props[i]:props[i].replace(_capsExp,"-$1").toLowerCase());}if(this.tfm){for(p in this.tfm){cache[p]=this.tfm[p];}if(cache.svg){cache.renderTransform();target.setAttribute("data-svg-origin",this.svgo||"");}i=_reverting$1();if((!i||!i.isStart)&&!style[_transformProp]){_removeIndependentTransforms(style);cache.uncache=1;}}},_getStyleSaver=function _getStyleSaver(target,properties){var saver={target:target,props:[],revert:_revertStyle,save:_saveStyle};target._gsap||gsap.core.getCache(target);properties&&properties.split(",").forEach(function(p){return saver.save(p);});return saver;},_supports3D,_createElement=function _createElement(type,ns){var e=_doc$1.createElementNS?_doc$1.createElementNS((ns||"http://www.w3.org/1999/xhtml").replace(/^https/,"http"),type):_doc$1.createElement(type);return e.style?e:_doc$1.createElement(type);},_getComputedProperty=function _getComputedProperty(target,property,skipPrefixFallback){var cs=getComputedStyle(target);return cs[property]||cs.getPropertyValue(property.replace(_capsExp,"-$1").toLowerCase())||cs.getPropertyValue(property)||!skipPrefixFallback&&_getComputedProperty(target,_checkPropPrefix(property)||property,1)||"";},_prefixes="O,Moz,ms,Ms,Webkit".split(","),_checkPropPrefix=function _checkPropPrefix(property,element,preferPrefix){var e=element||_tempDiv,s=e.style,i=5;if(property in s&&!preferPrefix){return property;}property=property.charAt(0).toUpperCase()+property.substr(1);while(i--&&!(_prefixes[i]+property in s)){}return i<0?null:(i===3?"ms":i>=0?_prefixes[i]:"")+property;},_initCore=function _initCore(){if(_windowExists$1()&&window.document){_win$1=window;_doc$1=_win$1.document;_docElement=_doc$1.documentElement;_tempDiv=_createElement("div")||{style:{}};_tempDivStyler=_createElement("div");_transformProp=_checkPropPrefix(_transformProp);_transformOriginProp=_transformProp+"Origin";_tempDiv.style.cssText="border-width:0;line-height:0;position:absolute;padding:0";_supports3D=!!_checkPropPrefix("perspective");_reverting$1=gsap.core.reverting;_pluginInitted=1;}},_getBBoxHack=function _getBBoxHack(swapIfPossible){var svg=_createElement("svg",this.ownerSVGElement&&this.ownerSVGElement.getAttribute("xmlns")||"http://www.w3.org/2000/svg"),oldParent=this.parentNode,oldSibling=this.nextSibling,oldCSS=this.style.cssText,bbox;_docElement.appendChild(svg);svg.appendChild(this);this.style.display="block";if(swapIfPossible){try{bbox=this.getBBox();this._gsapBBox=this.getBBox;this.getBBox=_getBBoxHack;}catch(e){}}else if(this._gsapBBox){bbox=this._gsapBBox();}if(oldParent){if(oldSibling){oldParent.insertBefore(this,oldSibling);}else{oldParent.appendChild(this);}}_docElement.removeChild(svg);this.style.cssText=oldCSS;return bbox;},_getAttributeFallbacks=function _getAttributeFallbacks(target,attributesArray){var i=attributesArray.length;while(i--){if(target.hasAttribute(attributesArray[i])){return target.getAttribute(attributesArray[i]);}}},_getBBox=function _getBBox(target){var bounds;try{bounds=target.getBBox();}catch(error){bounds=_getBBoxHack.call(target,true);}bounds&&(bounds.width||bounds.height)||target.getBBox===_getBBoxHack||(bounds=_getBBoxHack.call(target,true));return bounds&&!bounds.width&&!bounds.x&&!bounds.y?{x:+_getAttributeFallbacks(target,["x","cx","x1"])||0,y:+_getAttributeFallbacks(target,["y","cy","y1"])||0,width:0,height:0}:bounds;},_isSVG=function _isSVG(e){return!!(e.getCTM&&(!e.parentNode||e.ownerSVGElement)&&_getBBox(e));},_removeProperty=function _removeProperty(target,property){if(property){var style=target.style;if(property in _transformProps&&property!==_transformOriginProp){property=_transformProp;}if(style.removeProperty){if(property.substr(0,2)==="ms"||property.substr(0,6)==="webkit"){property="-"+property;}style.removeProperty(property.replace(_capsExp,"-$1").toLowerCase());}else{style.removeAttribute(property);}}},_addNonTweeningPT=function _addNonTweeningPT(plugin,target,property,beginning,end,onlySetAtEnd){var pt=new PropTween(plugin._pt,target,property,0,1,onlySetAtEnd?_renderNonTweeningValueOnlyAtEnd:_renderNonTweeningValue);plugin._pt=pt;pt.b=beginning;pt.e=end;plugin._props.push(property);return pt;},_nonConvertibleUnits={deg:1,rad:1,turn:1},_nonStandardLayouts={grid:1,flex:1},_convertToUnit=function _convertToUnit(target,property,value,unit){var curValue=parseFloat(value)||0,curUnit=(value+"").trim().substr((curValue+"").length)||"px",style=_tempDiv.style,horizontal=_horizontalExp.test(property),isRootSVG=target.tagName.toLowerCase()==="svg",measureProperty=(isRootSVG?"client":"offset")+(horizontal?"Width":"Height"),amount=100,toPixels=unit==="px",toPercent=unit==="%",px,parent,cache,isSVG;if(unit===curUnit||!curValue||_nonConvertibleUnits[unit]||_nonConvertibleUnits[curUnit]){return curValue;}curUnit!=="px"&&!toPixels&&(curValue=_convertToUnit(target,property,value,"px"));isSVG=target.getCTM&&_isSVG(target);if((toPercent||curUnit==="%")&&(_transformProps[property]||~property.indexOf("adius"))){px=isSVG?target.getBBox()[horizontal?"width":"height"]:target[measureProperty];return _round(toPercent?curValue/px*amount:curValue/100*px);}style[horizontal?"width":"height"]=amount+(toPixels?curUnit:unit);parent=~property.indexOf("adius")||unit==="em"&&target.appendChild&&!isRootSVG?target:target.parentNode;if(isSVG){parent=(target.ownerSVGElement||{}).parentNode;}if(!parent||parent===_doc$1||!parent.appendChild){parent=_doc$1.body;}cache=parent._gsap;if(cache&&toPercent&&cache.width&&horizontal&&cache.time===_ticker.time&&!cache.uncache){return _round(curValue/cache.width*amount);}else{(toPercent||curUnit==="%")&&!_nonStandardLayouts[_getComputedProperty(parent,"display")]&&(style.position=_getComputedProperty(target,"position"));parent===target&&(style.position="static");parent.appendChild(_tempDiv);px=_tempDiv[measureProperty];parent.removeChild(_tempDiv);style.position="absolute";if(horizontal&&toPercent){cache=_getCache(parent);cache.time=_ticker.time;cache.width=parent[measureProperty];}}return _round(toPixels?px*curValue/amount:px&&curValue?amount/px*curValue:0);},_get=function _get(target,property,unit,uncache){var value;_pluginInitted||_initCore();if(property in _propertyAliases&&property!=="transform"){property=_propertyAliases[property];if(~property.indexOf(",")){property=property.split(",")[0];}}if(_transformProps[property]&&property!=="transform"){value=_parseTransform(target,uncache);value=property!=="transformOrigin"?value[property]:value.svg?value.origin:_firstTwoOnly(_getComputedProperty(target,_transformOriginProp))+" "+value.zOrigin+"px";}else{value=target.style[property];if(!value||value==="auto"||uncache||~(value+"").indexOf("calc(")){value=_specialProps[property]&&_specialProps[property](target,property,unit)||_getComputedProperty(target,property)||_getProperty(target,property)||(property==="opacity"?1:0);}}return unit&&!~(value+"").trim().indexOf(" ")?_convertToUnit(target,property,value,unit)+unit:value;},_tweenComplexCSSString=function _tweenComplexCSSString(target,prop,start,end){if(!start||start==="none"){var p=_checkPropPrefix(prop,target,1),s=p&&_getComputedProperty(target,p,1);if(s&&s!==start){prop=p;start=s;}else if(prop==="borderColor"){start=_getComputedProperty(target,"borderTopColor");}}var pt=new PropTween(this._pt,target.style,prop,0,1,_renderComplexString),index=0,matchIndex=0,a,result,startValues,startNum,color,startValue,endValue,endNum,chunk,endUnit,startUnit,endValues;pt.b=start;pt.e=end;start+="";end+="";if(end==="auto"){target.style[prop]=end;end=_getComputedProperty(target,prop)||end;target.style[prop]=start;}a=[start,end];_colorStringFilter(a);start=a[0];end=a[1];startValues=start.match(_numWithUnitExp)||[];endValues=end.match(_numWithUnitExp)||[];if(endValues.length){while(result=_numWithUnitExp.exec(end)){endValue=result[0];chunk=end.substring(index,result.index);if(color){color=(color+1)%5;}else if(chunk.substr(-5)==="rgba("||chunk.substr(-5)==="hsla("){color=1;}if(endValue!==(startValue=startValues[matchIndex++]||"")){startNum=parseFloat(startValue)||0;startUnit=startValue.substr((startNum+"").length);endValue.charAt(1)==="="&&(endValue=_parseRelative(startNum,endValue)+startUnit);endNum=parseFloat(endValue);endUnit=endValue.substr((endNum+"").length);index=_numWithUnitExp.lastIndex-endUnit.length;if(!endUnit){endUnit=endUnit||_config.units[prop]||startUnit;if(index===end.length){end+=endUnit;pt.e+=endUnit;}}if(startUnit!==endUnit){startNum=_convertToUnit(target,prop,startValue,endUnit)||0;}pt._pt={_next:pt._pt,p:chunk||matchIndex===1?chunk:",",s:startNum,c:endNum-startNum,m:color&&color<4||prop==="zIndex"?Math.round:0};}}pt.c=index<end.length?end.substring(index,end.length):"";}else{pt.r=prop==="display"&&end==="none"?_renderNonTweeningValueOnlyAtEnd:_renderNonTweeningValue;}_relExp.test(end)&&(pt.e=0);this._pt=pt;return pt;},_keywordToPercent={top:"0%",bottom:"100%",left:"0%",right:"100%",center:"50%"},_convertKeywordsToPercentages=function _convertKeywordsToPercentages(value){var split=value.split(" "),x=split[0],y=split[1]||"50%";if(x==="top"||x==="bottom"||y==="left"||y==="right"){value=x;x=y;y=value;}split[0]=_keywordToPercent[x]||x;split[1]=_keywordToPercent[y]||y;return split.join(" ");},_renderClearProps=function _renderClearProps(ratio,data){if(data.tween&&data.tween._time===data.tween._dur){var target=data.t,style=target.style,props=data.u,cache=target._gsap,prop,clearTransforms,i;if(props==="all"||props===true){style.cssText="";clearTransforms=1;}else{props=props.split(",");i=props.length;while(--i>-1){prop=props[i];if(_transformProps[prop]){clearTransforms=1;prop=prop==="transformOrigin"?_transformOriginProp:_transformProp;}_removeProperty(target,prop);}}if(clearTransforms){_removeProperty(target,_transformProp);if(cache){cache.svg&&target.removeAttribute("transform");_parseTransform(target,1);cache.uncache=1;_removeIndependentTransforms(style);}}}},_specialProps={clearProps:function clearProps(plugin,target,property,endValue,tween){if(tween.data!=="isFromStart"){var pt=plugin._pt=new PropTween(plugin._pt,target,property,0,0,_renderClearProps);pt.u=endValue;pt.pr=-10;pt.tween=tween;plugin._props.push(property);return 1;}}},_identity2DMatrix=[1,0,0,1,0,0],_rotationalProperties={},_isNullTransform=function _isNullTransform(value){return value==="matrix(1, 0, 0, 1, 0, 0)"||value==="none"||!value;},_getComputedTransformMatrixAsArray=function _getComputedTransformMatrixAsArray(target){var matrixString=_getComputedProperty(target,_transformProp);return _isNullTransform(matrixString)?_identity2DMatrix:matrixString.substr(7).match(_numExp).map(_round);},_getMatrix=function _getMatrix(target,force2D){var cache=target._gsap||_getCache(target),style=target.style,matrix=_getComputedTransformMatrixAsArray(target),parent,nextSibling,temp,addedToDOM;if(cache.svg&&target.getAttribute("transform")){temp=target.transform.baseVal.consolidate().matrix;matrix=[temp.a,temp.b,temp.c,temp.d,temp.e,temp.f];return matrix.join(",")==="1,0,0,1,0,0"?_identity2DMatrix:matrix;}else if(matrix===_identity2DMatrix&&!target.offsetParent&&target!==_docElement&&!cache.svg){temp=style.display;style.display="block";parent=target.parentNode;if(!parent||!target.offsetParent){addedToDOM=1;nextSibling=target.nextElementSibling;_docElement.appendChild(target);}matrix=_getComputedTransformMatrixAsArray(target);temp?style.display=temp:_removeProperty(target,"display");if(addedToDOM){nextSibling?parent.insertBefore(target,nextSibling):parent?parent.appendChild(target):_docElement.removeChild(target);}}return force2D&&matrix.length>6?[matrix[0],matrix[1],matrix[4],matrix[5],matrix[12],matrix[13]]:matrix;},_applySVGOrigin=function _applySVGOrigin(target,origin,originIsAbsolute,smooth,matrixArray,pluginToAddPropTweensTo){var cache=target._gsap,matrix=matrixArray||_getMatrix(target,true),xOriginOld=cache.xOrigin||0,yOriginOld=cache.yOrigin||0,xOffsetOld=cache.xOffset||0,yOffsetOld=cache.yOffset||0,a=matrix[0],b=matrix[1],c=matrix[2],d=matrix[3],tx=matrix[4],ty=matrix[5],originSplit=origin.split(" "),xOrigin=parseFloat(originSplit[0])||0,yOrigin=parseFloat(originSplit[1])||0,bounds,determinant,x,y;if(!originIsAbsolute){bounds=_getBBox(target);xOrigin=bounds.x+(~originSplit[0].indexOf("%")?xOrigin/100*bounds.width:xOrigin);yOrigin=bounds.y+(~(originSplit[1]||originSplit[0]).indexOf("%")?yOrigin/100*bounds.height:yOrigin);}else if(matrix!==_identity2DMatrix&&(determinant=a*d-b*c)){x=xOrigin*(d/determinant)+yOrigin*(-c/determinant)+(c*ty-d*tx)/determinant;y=xOrigin*(-b/determinant)+yOrigin*(a/determinant)-(a*ty-b*tx)/determinant;xOrigin=x;yOrigin=y;}if(smooth||smooth!==false&&cache.smooth){tx=xOrigin-xOriginOld;ty=yOrigin-yOriginOld;cache.xOffset=xOffsetOld+(tx*a+ty*c)-tx;cache.yOffset=yOffsetOld+(tx*b+ty*d)-ty;}else{cache.xOffset=cache.yOffset=0;}cache.xOrigin=xOrigin;cache.yOrigin=yOrigin;cache.smooth=!!smooth;cache.origin=origin;cache.originIsAbsolute=!!originIsAbsolute;target.style[_transformOriginProp]="0px 0px";if(pluginToAddPropTweensTo){_addNonTweeningPT(pluginToAddPropTweensTo,cache,"xOrigin",xOriginOld,xOrigin);_addNonTweeningPT(pluginToAddPropTweensTo,cache,"yOrigin",yOriginOld,yOrigin);_addNonTweeningPT(pluginToAddPropTweensTo,cache,"xOffset",xOffsetOld,cache.xOffset);_addNonTweeningPT(pluginToAddPropTweensTo,cache,"yOffset",yOffsetOld,cache.yOffset);}target.setAttribute("data-svg-origin",xOrigin+" "+yOrigin);},_parseTransform=function _parseTransform(target,uncache){var cache=target._gsap||new GSCache(target);if("x"in cache&&!uncache&&!cache.uncache){return cache;}var style=target.style,invertedScaleX=cache.scaleX<0,px="px",deg="deg",cs=getComputedStyle(target),origin=_getComputedProperty(target,_transformOriginProp)||"0",x,y,z,scaleX,scaleY,rotation,rotationX,rotationY,skewX,skewY,perspective,xOrigin,yOrigin,matrix,angle,cos,sin,a,b,c,d,a12,a22,t1,t2,t3,a13,a23,a33,a42,a43,a32;x=y=z=rotation=rotationX=rotationY=skewX=skewY=perspective=0;scaleX=scaleY=1;cache.svg=!!(target.getCTM&&_isSVG(target));if(cs.translate){if(cs.translate!=="none"||cs.scale!=="none"||cs.rotate!=="none"){style[_transformProp]=(cs.translate!=="none"?"translate3d("+(cs.translate+" 0 0").split(" ").slice(0,3).join(", ")+") ":"")+(cs.rotate!=="none"?"rotate("+cs.rotate+") ":"")+(cs.scale!=="none"?"scale("+cs.scale.split(" ").join(",")+") ":"")+(cs[_transformProp]!=="none"?cs[_transformProp]:"");}style.scale=style.rotate=style.translate="none";}matrix=_getMatrix(target,cache.svg);if(cache.svg){if(cache.uncache){t2=target.getBBox();origin=cache.xOrigin-t2.x+"px "+(cache.yOrigin-t2.y)+"px";t1="";}else{t1=!uncache&&target.getAttribute("data-svg-origin");}_applySVGOrigin(target,t1||origin,!!t1||cache.originIsAbsolute,cache.smooth!==false,matrix);}xOrigin=cache.xOrigin||0;yOrigin=cache.yOrigin||0;if(matrix!==_identity2DMatrix){a=matrix[0];b=matrix[1];c=matrix[2];d=matrix[3];x=a12=matrix[4];y=a22=matrix[5];if(matrix.length===6){scaleX=Math.sqrt(a*a+b*b);scaleY=Math.sqrt(d*d+c*c);rotation=a||b?_atan2(b,a)*_RAD2DEG:0;skewX=c||d?_atan2(c,d)*_RAD2DEG+rotation:0;skewX&&(scaleY*=Math.abs(Math.cos(skewX*_DEG2RAD)));if(cache.svg){x-=xOrigin-(xOrigin*a+yOrigin*c);y-=yOrigin-(xOrigin*b+yOrigin*d);}}else{a32=matrix[6];a42=matrix[7];a13=matrix[8];a23=matrix[9];a33=matrix[10];a43=matrix[11];x=matrix[12];y=matrix[13];z=matrix[14];angle=_atan2(a32,a33);rotationX=angle*_RAD2DEG;if(angle){cos=Math.cos(-angle);sin=Math.sin(-angle);t1=a12*cos+a13*sin;t2=a22*cos+a23*sin;t3=a32*cos+a33*sin;a13=a12*-sin+a13*cos;a23=a22*-sin+a23*cos;a33=a32*-sin+a33*cos;a43=a42*-sin+a43*cos;a12=t1;a22=t2;a32=t3;}angle=_atan2(-c,a33);rotationY=angle*_RAD2DEG;if(angle){cos=Math.cos(-angle);sin=Math.sin(-angle);t1=a*cos-a13*sin;t2=b*cos-a23*sin;t3=c*cos-a33*sin;a43=d*sin+a43*cos;a=t1;b=t2;c=t3;}angle=_atan2(b,a);rotation=angle*_RAD2DEG;if(angle){cos=Math.cos(angle);sin=Math.sin(angle);t1=a*cos+b*sin;t2=a12*cos+a22*sin;b=b*cos-a*sin;a22=a22*cos-a12*sin;a=t1;a12=t2;}if(rotationX&&Math.abs(rotationX)+Math.abs(rotation)>359.9){rotationX=rotation=0;rotationY=180-rotationY;}scaleX=_round(Math.sqrt(a*a+b*b+c*c));scaleY=_round(Math.sqrt(a22*a22+a32*a32));angle=_atan2(a12,a22);skewX=Math.abs(angle)>0.0002?angle*_RAD2DEG:0;perspective=a43?1/(a43<0?-a43:a43):0;}if(cache.svg){t1=target.getAttribute("transform");cache.forceCSS=target.setAttribute("transform","")||!_isNullTransform(_getComputedProperty(target,_transformProp));t1&&target.setAttribute("transform",t1);}}if(Math.abs(skewX)>90&&Math.abs(skewX)<270){if(invertedScaleX){scaleX*=-1;skewX+=rotation<=0?180:-180;rotation+=rotation<=0?180:-180;}else{scaleY*=-1;skewX+=skewX<=0?180:-180;}}uncache=uncache||cache.uncache;cache.x=x-((cache.xPercent=x&&(!uncache&&cache.xPercent||(Math.round(target.offsetWidth/2)===Math.round(-x)?-50:0)))?target.offsetWidth*cache.xPercent/100:0)+px;cache.y=y-((cache.yPercent=y&&(!uncache&&cache.yPercent||(Math.round(target.offsetHeight/2)===Math.round(-y)?-50:0)))?target.offsetHeight*cache.yPercent/100:0)+px;cache.z=z+px;cache.scaleX=_round(scaleX);cache.scaleY=_round(scaleY);cache.rotation=_round(rotation)+deg;cache.rotationX=_round(rotationX)+deg;cache.rotationY=_round(rotationY)+deg;cache.skewX=skewX+deg;cache.skewY=skewY+deg;cache.transformPerspective=perspective+px;if(cache.zOrigin=parseFloat(origin.split(" ")[2])||0){style[_transformOriginProp]=_firstTwoOnly(origin);}cache.xOffset=cache.yOffset=0;cache.force3D=_config.force3D;cache.renderTransform=cache.svg?_renderSVGTransforms:_supports3D?_renderCSSTransforms:_renderNon3DTransforms;cache.uncache=0;return cache;},_firstTwoOnly=function _firstTwoOnly(value){return(value=value.split(" "))[0]+" "+value[1];},_addPxTranslate=function _addPxTranslate(target,start,value){var unit=getUnit(start);return _round(parseFloat(start)+parseFloat(_convertToUnit(target,"x",value+"px",unit)))+unit;},_renderNon3DTransforms=function _renderNon3DTransforms(ratio,cache){cache.z="0px";cache.rotationY=cache.rotationX="0deg";cache.force3D=0;_renderCSSTransforms(ratio,cache);},_zeroDeg="0deg",_zeroPx="0px",_endParenthesis=") ",_renderCSSTransforms=function _renderCSSTransforms(ratio,cache){var _ref=cache||this,xPercent=_ref.xPercent,yPercent=_ref.yPercent,x=_ref.x,y=_ref.y,z=_ref.z,rotation=_ref.rotation,rotationY=_ref.rotationY,rotationX=_ref.rotationX,skewX=_ref.skewX,skewY=_ref.skewY,scaleX=_ref.scaleX,scaleY=_ref.scaleY,transformPerspective=_ref.transformPerspective,force3D=_ref.force3D,target=_ref.target,zOrigin=_ref.zOrigin,transforms="",use3D=force3D==="auto"&&ratio&&ratio!==1||force3D===true;if(zOrigin&&(rotationX!==_zeroDeg||rotationY!==_zeroDeg)){var angle=parseFloat(rotationY)*_DEG2RAD,a13=Math.sin(angle),a33=Math.cos(angle),cos;angle=parseFloat(rotationX)*_DEG2RAD;cos=Math.cos(angle);x=_addPxTranslate(target,x,a13*cos*-zOrigin);y=_addPxTranslate(target,y,-Math.sin(angle)*-zOrigin);z=_addPxTranslate(target,z,a33*cos*-zOrigin+zOrigin);}if(transformPerspective!==_zeroPx){transforms+="perspective("+transformPerspective+_endParenthesis;}if(xPercent||yPercent){transforms+="translate("+xPercent+"%, "+yPercent+"%) ";}if(use3D||x!==_zeroPx||y!==_zeroPx||z!==_zeroPx){transforms+=z!==_zeroPx||use3D?"translate3d("+x+", "+y+", "+z+") ":"translate("+x+", "+y+_endParenthesis;}if(rotation!==_zeroDeg){transforms+="rotate("+rotation+_endParenthesis;}if(rotationY!==_zeroDeg){transforms+="rotateY("+rotationY+_endParenthesis;}if(rotationX!==_zeroDeg){transforms+="rotateX("+rotationX+_endParenthesis;}if(skewX!==_zeroDeg||skewY!==_zeroDeg){transforms+="skew("+skewX+", "+skewY+_endParenthesis;}if(scaleX!==1||scaleY!==1){transforms+="scale("+scaleX+", "+scaleY+_endParenthesis;}target.style[_transformProp]=transforms||"translate(0, 0)";},_renderSVGTransforms=function _renderSVGTransforms(ratio,cache){var _ref2=cache||this,xPercent=_ref2.xPercent,yPercent=_ref2.yPercent,x=_ref2.x,y=_ref2.y,rotation=_ref2.rotation,skewX=_ref2.skewX,skewY=_ref2.skewY,scaleX=_ref2.scaleX,scaleY=_ref2.scaleY,target=_ref2.target,xOrigin=_ref2.xOrigin,yOrigin=_ref2.yOrigin,xOffset=_ref2.xOffset,yOffset=_ref2.yOffset,forceCSS=_ref2.forceCSS,tx=parseFloat(x),ty=parseFloat(y),a11,a21,a12,a22,temp;rotation=parseFloat(rotation);skewX=parseFloat(skewX);skewY=parseFloat(skewY);if(skewY){skewY=parseFloat(skewY);skewX+=skewY;rotation+=skewY;}if(rotation||skewX){rotation*=_DEG2RAD;skewX*=_DEG2RAD;a11=Math.cos(rotation)*scaleX;a21=Math.sin(rotation)*scaleX;a12=Math.sin(rotation-skewX)*-scaleY;a22=Math.cos(rotation-skewX)*scaleY;if(skewX){skewY*=_DEG2RAD;temp=Math.tan(skewX-skewY);temp=Math.sqrt(1+temp*temp);a12*=temp;a22*=temp;if(skewY){temp=Math.tan(skewY);temp=Math.sqrt(1+temp*temp);a11*=temp;a21*=temp;}}a11=_round(a11);a21=_round(a21);a12=_round(a12);a22=_round(a22);}else{a11=scaleX;a22=scaleY;a21=a12=0;}if(tx&&!~(x+"").indexOf("px")||ty&&!~(y+"").indexOf("px")){tx=_convertToUnit(target,"x",x,"px");ty=_convertToUnit(target,"y",y,"px");}if(xOrigin||yOrigin||xOffset||yOffset){tx=_round(tx+xOrigin-(xOrigin*a11+yOrigin*a12)+xOffset);ty=_round(ty+yOrigin-(xOrigin*a21+yOrigin*a22)+yOffset);}if(xPercent||yPercent){temp=target.getBBox();tx=_round(tx+xPercent/100*temp.width);ty=_round(ty+yPercent/100*temp.height);}temp="matrix("+a11+","+a21+","+a12+","+a22+","+tx+","+ty+")";target.setAttribute("transform",temp);forceCSS&&(target.style[_transformProp]=temp);},_addRotationalPropTween=function _addRotationalPropTween(plugin,target,property,startNum,endValue){var cap=360,isString=_isString(endValue),endNum=parseFloat(endValue)*(isString&&~endValue.indexOf("rad")?_RAD2DEG:1),change=endNum-startNum,finalValue=startNum+change+"deg",direction,pt;if(isString){direction=endValue.split("_")[1];if(direction==="short"){change%=cap;if(change!==change%(cap/2)){change+=change<0?cap:-cap;}}if(direction==="cw"&&change<0){change=(change+cap*_bigNum$1)%cap-~~(change/cap)*cap;}else if(direction==="ccw"&&change>0){change=(change-cap*_bigNum$1)%cap-~~(change/cap)*cap;}}plugin._pt=pt=new PropTween(plugin._pt,target,property,startNum,change,_renderPropWithEnd);pt.e=finalValue;pt.u="deg";plugin._props.push(property);return pt;},_assign=function _assign(target,source){for(var p in source){target[p]=source[p];}return target;},_addRawTransformPTs=function _addRawTransformPTs(plugin,transforms,target){var startCache=_assign({},target._gsap),exclude="perspective,force3D,transformOrigin,svgOrigin",style=target.style,endCache,p,startValue,endValue,startNum,endNum,startUnit,endUnit;if(startCache.svg){startValue=target.getAttribute("transform");target.setAttribute("transform","");style[_transformProp]=transforms;endCache=_parseTransform(target,1);_removeProperty(target,_transformProp);target.setAttribute("transform",startValue);}else{startValue=getComputedStyle(target)[_transformProp];style[_transformProp]=transforms;endCache=_parseTransform(target,1);style[_transformProp]=startValue;}for(p in _transformProps){startValue=startCache[p];endValue=endCache[p];if(startValue!==endValue&&exclude.indexOf(p)<0){startUnit=getUnit(startValue);endUnit=getUnit(endValue);startNum=startUnit!==endUnit?_convertToUnit(target,p,startValue,endUnit):parseFloat(startValue);endNum=parseFloat(endValue);plugin._pt=new PropTween(plugin._pt,endCache,p,startNum,endNum-startNum,_renderCSSProp);plugin._pt.u=endUnit||0;plugin._props.push(p);}}_assign(endCache,startCache);};_forEachName("padding,margin,Width,Radius",function(name,index){var t="Top",r="Right",b="Bottom",l="Left",props=(index<3?[t,r,b,l]:[t+l,t+r,b+r,b+l]).map(function(side){return index<2?name+side:"border"+side+name;});_specialProps[index>1?"border"+name:name]=function(plugin,target,property,endValue,tween){var a,vars;if(arguments.length<4){a=props.map(function(prop){return _get(plugin,prop,property);});vars=a.join(" ");return vars.split(a[0]).length===5?a[0]:vars;}a=(endValue+"").split(" ");vars={};props.forEach(function(prop,i){return vars[prop]=a[i]=a[i]||a[(i-1)/2|0];});plugin.init(target,vars,tween);};});var CSSPlugin={name:"css",register:_initCore,targetTest:function targetTest(target){return target.style&&target.nodeType;},init:function init(target,vars,tween,index,targets){var props=this._props,style=target.style,startAt=tween.vars.startAt,startValue,endValue,endNum,startNum,type,specialProp,p,startUnit,endUnit,relative,isTransformRelated,transformPropTween,cache,smooth,hasPriority,inlineProps;_pluginInitted||_initCore();this.styles=this.styles||_getStyleSaver(target);inlineProps=this.styles.props;this.tween=tween;for(p in vars){if(p==="autoRound"){continue;}endValue=vars[p];if(_plugins[p]&&_checkPlugin(p,vars,tween,index,target,targets)){continue;}type=_typeof(endValue);specialProp=_specialProps[p];if(type==="function"){endValue=endValue.call(tween,index,target,targets);type=_typeof(endValue);}if(type==="string"&&~endValue.indexOf("random(")){endValue=_replaceRandom(endValue);}if(specialProp){specialProp(this,target,p,endValue,tween)&&(hasPriority=1);}else if(p.substr(0,2)==="--"){startValue=(getComputedStyle(target).getPropertyValue(p)+"").trim();endValue+="";_colorExp.lastIndex=0;if(!_colorExp.test(startValue)){startUnit=getUnit(startValue);endUnit=getUnit(endValue);}endUnit?startUnit!==endUnit&&(startValue=_convertToUnit(target,p,startValue,endUnit)+endUnit):startUnit&&(endValue+=startUnit);this.add(style,"setProperty",startValue,endValue,index,targets,0,0,p);props.push(p);inlineProps.push(p,0,style[p]);}else if(type!=="undefined"){if(startAt&&p in startAt){startValue=typeof startAt[p]==="function"?startAt[p].call(tween,index,target,targets):startAt[p];_isString(startValue)&&~startValue.indexOf("random(")&&(startValue=_replaceRandom(startValue));getUnit(startValue+"")||(startValue+=_config.units[p]||getUnit(_get(target,p))||"");(startValue+"").charAt(1)==="="&&(startValue=_get(target,p));}else{startValue=_get(target,p);}startNum=parseFloat(startValue);relative=type==="string"&&endValue.charAt(1)==="="&&endValue.substr(0,2);relative&&(endValue=endValue.substr(2));endNum=parseFloat(endValue);if(p in _propertyAliases){if(p==="autoAlpha"){if(startNum===1&&_get(target,"visibility")==="hidden"&&endNum){startNum=0;}inlineProps.push("visibility",0,style.visibility);_addNonTweeningPT(this,style,"visibility",startNum?"inherit":"hidden",endNum?"inherit":"hidden",!endNum);}if(p!=="scale"&&p!=="transform"){p=_propertyAliases[p];~p.indexOf(",")&&(p=p.split(",")[0]);}}isTransformRelated=p in _transformProps;if(isTransformRelated){this.styles.save(p);if(!transformPropTween){cache=target._gsap;cache.renderTransform&&!vars.parseTransform||_parseTransform(target,vars.parseTransform);smooth=vars.smoothOrigin!==false&&cache.smooth;transformPropTween=this._pt=new PropTween(this._pt,style,_transformProp,0,1,cache.renderTransform,cache,0,-1);transformPropTween.dep=1;}if(p==="scale"){this._pt=new PropTween(this._pt,cache,"scaleY",cache.scaleY,(relative?_parseRelative(cache.scaleY,relative+endNum):endNum)-cache.scaleY||0,_renderCSSProp);this._pt.u=0;props.push("scaleY",p);p+="X";}else if(p==="transformOrigin"){inlineProps.push(_transformOriginProp,0,style[_transformOriginProp]);endValue=_convertKeywordsToPercentages(endValue);if(cache.svg){_applySVGOrigin(target,endValue,0,smooth,0,this);}else{endUnit=parseFloat(endValue.split(" ")[2])||0;endUnit!==cache.zOrigin&&_addNonTweeningPT(this,cache,"zOrigin",cache.zOrigin,endUnit);_addNonTweeningPT(this,style,p,_firstTwoOnly(startValue),_firstTwoOnly(endValue));}continue;}else if(p==="svgOrigin"){_applySVGOrigin(target,endValue,1,smooth,0,this);continue;}else if(p in _rotationalProperties){_addRotationalPropTween(this,cache,p,startNum,relative?_parseRelative(startNum,relative+endValue):endValue);continue;}else if(p==="smoothOrigin"){_addNonTweeningPT(this,cache,"smooth",cache.smooth,endValue);continue;}else if(p==="force3D"){cache[p]=endValue;continue;}else if(p==="transform"){_addRawTransformPTs(this,endValue,target);continue;}}else if(!(p in style)){p=_checkPropPrefix(p)||p;}if(isTransformRelated||(endNum||endNum===0)&&(startNum||startNum===0)&&!_complexExp.test(endValue)&&p in style){startUnit=(startValue+"").substr((startNum+"").length);endNum||(endNum=0);endUnit=getUnit(endValue)||(p in _config.units?_config.units[p]:startUnit);startUnit!==endUnit&&(startNum=_convertToUnit(target,p,startValue,endUnit));this._pt=new PropTween(this._pt,isTransformRelated?cache:style,p,startNum,(relative?_parseRelative(startNum,relative+endNum):endNum)-startNum,!isTransformRelated&&(endUnit==="px"||p==="zIndex")&&vars.autoRound!==false?_renderRoundedCSSProp:_renderCSSProp);this._pt.u=endUnit||0;if(startUnit!==endUnit&&endUnit!=="%"){this._pt.b=startValue;this._pt.r=_renderCSSPropWithBeginning;}}else if(!(p in style)){if(p in target){this.add(target,p,startValue||target[p],relative?relative+endValue:endValue,index,targets);}else if(p!=="parseTransform"){_missingPlugin(p,endValue);continue;}}else{_tweenComplexCSSString.call(this,target,p,startValue,relative?relative+endValue:endValue);}isTransformRelated||(p in style?inlineProps.push(p,0,style[p]):inlineProps.push(p,1,startValue||target[p]));props.push(p);}}hasPriority&&_sortPropTweensByPriority(this);},render:function render(ratio,data){if(data.tween._time||!_reverting$1()){var pt=data._pt;while(pt){pt.r(ratio,pt.d);pt=pt._next;}}else{data.styles.revert();}},get:_get,aliases:_propertyAliases,getSetter:function getSetter(target,property,plugin){var p=_propertyAliases[property];p&&p.indexOf(",")<0&&(property=p);return property in _transformProps&&property!==_transformOriginProp&&(target._gsap.x||_get(target,"x"))?plugin&&_recentSetterPlugin===plugin?property==="scale"?_setterScale:_setterTransform:(_recentSetterPlugin=plugin||{})&&(property==="scale"?_setterScaleWithRender:_setterTransformWithRender):target.style&&!_isUndefined(target.style[property])?_setterCSSStyle:~property.indexOf("-")?_setterCSSProp:_getSetter(target,property);},core:{_removeProperty:_removeProperty,_getMatrix:_getMatrix}};gsap.utils.checkPrefix=_checkPropPrefix;gsap.core.getStyleSaver=_getStyleSaver;(function(positionAndScale,rotation,others,aliases){var all=_forEachName(positionAndScale+","+rotation+","+others,function(name){_transformProps[name]=1;});_forEachName(rotation,function(name){_config.units[name]="deg";_rotationalProperties[name]=1;});_propertyAliases[all[13]]=positionAndScale+","+rotation;_forEachName(aliases,function(name){var split=name.split(":");_propertyAliases[split[1]]=all[split[0]];});})("x,y,z,scale,scaleX,scaleY,xPercent,yPercent","rotation,rotationX,rotationY,skewX,skewY","transform,transformOrigin,svgOrigin,force3D,smoothOrigin,transformPerspective","0:translateX,1:translateY,2:translateZ,8:rotate,8:rotationZ,8:rotateZ,9:rotateX,10:rotateY");_forEachName("x,y,z,top,right,bottom,left,width,height,fontSize,padding,margin,perspective",function(name){_config.units[name]="px";});gsap.registerPlugin(CSSPlugin);var _svgPathExp=/[achlmqstvz]|(-?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/ig,_numbersExp=/(?:(-)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/ig,_scientific=/[\+\-]?\d*\.?\d+e[\+\-]?\d+/ig,_selectorExp=/(^[#\.][a-z]|[a-y][a-z])/i,_DEG2RAD$1=Math.PI/180,_RAD2DEG$1=180/Math.PI,_sin$1=Math.sin,_cos$1=Math.cos,_abs=Math.abs,_sqrt$1=Math.sqrt,_atan2$1=Math.atan2,_largeNum=1e8,_isString$1=function _isString(value){return typeof value==="string";},_isNumber$1=function _isNumber(value){return typeof value==="number";},_isUndefined$1=function _isUndefined(value){return typeof value==="undefined";},_temp={},_temp2={},_roundingNum=1e5,_wrapProgress=function _wrapProgress(progress){return Math.round((progress+_largeNum)%1*_roundingNum)/_roundingNum||(progress<0?0:1);},_round$1=function _round(value){return Math.round(value*_roundingNum)/_roundingNum||0;},_roundPrecise$1=function _roundPrecise(value){return Math.round(value*1e10)/1e10||0;},_splitSegment=function _splitSegment(rawPath,segIndex,i,t){var segment=rawPath[segIndex],shift=t===1?6:subdivideSegment(segment,i,t);if(shift&&shift+i+2<segment.length){rawPath.splice(segIndex,0,segment.slice(0,i+shift+2));segment.splice(0,i+shift);return 1;}},_getSampleIndex=function _getSampleIndex(samples,length,progress){var l=samples.length,i=~~(progress*l);if(samples[i]>length){while(--i&&samples[i]>length){}i<0&&(i=0);}else{while(samples[++i]<length&&i<l){}}return i<l?i:l-1;},_reverseRawPath=function _reverseRawPath(rawPath,skipOuter){var i=rawPath.length;skipOuter||rawPath.reverse();while(i--){rawPath[i].reversed||reverseSegment(rawPath[i]);}},_copyMetaData=function _copyMetaData(source,copy){copy.totalLength=source.totalLength;if(source.samples){copy.samples=source.samples.slice(0);copy.lookup=source.lookup.slice(0);copy.minLength=source.minLength;copy.resolution=source.resolution;}else if(source.totalPoints){copy.totalPoints=source.totalPoints;}return copy;},_appendOrMerge=function _appendOrMerge(rawPath,segment){var index=rawPath.length,prevSeg=rawPath[index-1]||[],l=prevSeg.length;if(index&&segment[0]===prevSeg[l-2]&&segment[1]===prevSeg[l-1]){segment=prevSeg.concat(segment.slice(2));index--;}rawPath[index]=segment;};function getRawPath(value){value=_isString$1(value)&&_selectorExp.test(value)?document.querySelector(value)||value:value;var e=value.getAttribute?value:0,rawPath;if(e&&(value=value.getAttribute("d"))){if(!e._gsPath){e._gsPath={};}rawPath=e._gsPath[value];return rawPath&&!rawPath._dirty?rawPath:e._gsPath[value]=stringToRawPath(value);}return!value?console.warn("Expecting a <path> element or an SVG path data string"):_isString$1(value)?stringToRawPath(value):_isNumber$1(value[0])?[value]:value;}function copyRawPath(rawPath){var a=[],i=0;for(;i<rawPath.length;i++){a[i]=_copyMetaData(rawPath[i],rawPath[i].slice(0));}return _copyMetaData(rawPath,a);}function reverseSegment(segment){var i=0,y;segment.reverse();for(;i<segment.length;i+=2){y=segment[i];segment[i]=segment[i+1];segment[i+1]=y;}segment.reversed=!segment.reversed;}var _createPath=function _createPath(e,ignore){var path=document.createElementNS("http://www.w3.org/2000/svg","path"),attr=[].slice.call(e.attributes),i=attr.length,name;ignore=","+ignore+",";while(--i>-1){name=attr[i].nodeName.toLowerCase();if(ignore.indexOf(","+name+",")<0){path.setAttributeNS(null,name,attr[i].nodeValue);}}return path;},_typeAttrs={rect:"rx,ry,x,y,width,height",circle:"r,cx,cy",ellipse:"rx,ry,cx,cy",line:"x1,x2,y1,y2"},_attrToObj=function _attrToObj(e,attrs){var props=attrs?attrs.split(","):[],obj={},i=props.length;while(--i>-1){obj[props[i]]=+e.getAttribute(props[i])||0;}return obj;};function convertToPath(element,swap){var type=element.tagName.toLowerCase(),circ=0.552284749831,data,x,y,r,ry,path,rcirc,rycirc,points,w,h,x2,x3,x4,x5,x6,y2,y3,y4,y5,y6,attr;if(type==="path"||!element.getBBox){return element;}path=_createPath(element,"x,y,width,height,cx,cy,rx,ry,r,x1,x2,y1,y2,points");attr=_attrToObj(element,_typeAttrs[type]);if(type==="rect"){r=attr.rx;ry=attr.ry||r;x=attr.x;y=attr.y;w=attr.width-r*2;h=attr.height-ry*2;if(r||ry){x2=x+r*(1-circ);x3=x+r;x4=x3+w;x5=x4+r*circ;x6=x4+r;y2=y+ry*(1-circ);y3=y+ry;y4=y3+h;y5=y4+ry*circ;y6=y4+ry;data="M"+x6+","+y3+" V"+y4+" C"+[x6,y5,x5,y6,x4,y6,x4-(x4-x3)/3,y6,x3+(x4-x3)/3,y6,x3,y6,x2,y6,x,y5,x,y4,x,y4-(y4-y3)/3,x,y3+(y4-y3)/3,x,y3,x,y2,x2,y,x3,y,x3+(x4-x3)/3,y,x4-(x4-x3)/3,y,x4,y,x5,y,x6,y2,x6,y3].join(",")+"z";}else{data="M"+(x+w)+","+y+" v"+h+" h"+-w+" v"+-h+" h"+w+"z";}}else if(type==="circle"||type==="ellipse"){if(type==="circle"){r=ry=attr.r;rycirc=r*circ;}else{r=attr.rx;ry=attr.ry;rycirc=ry*circ;}x=attr.cx;y=attr.cy;rcirc=r*circ;data="M"+(x+r)+","+y+" C"+[x+r,y+rycirc,x+rcirc,y+ry,x,y+ry,x-rcirc,y+ry,x-r,y+rycirc,x-r,y,x-r,y-rycirc,x-rcirc,y-ry,x,y-ry,x+rcirc,y-ry,x+r,y-rycirc,x+r,y].join(",")+"z";}else if(type==="line"){data="M"+attr.x1+","+attr.y1+" L"+attr.x2+","+attr.y2;}else if(type==="polyline"||type==="polygon"){points=(element.getAttribute("points")+"").match(_numbersExp)||[];x=points.shift();y=points.shift();data="M"+x+","+y+" L"+points.join(",");if(type==="polygon"){data+=","+x+","+y+"z";}}path.setAttribute("d",rawPathToString(path._gsRawPath=stringToRawPath(data)));if(swap&&element.parentNode){element.parentNode.insertBefore(path,element);element.parentNode.removeChild(element);}return path;}function getRotationAtBezierT(segment,i,t){var a=segment[i],b=segment[i+2],c=segment[i+4],x;a+=(b-a)*t;b+=(c-b)*t;a+=(b-a)*t;x=b+(c+(segment[i+6]-c)*t-b)*t-a;a=segment[i+1];b=segment[i+3];c=segment[i+5];a+=(b-a)*t;b+=(c-b)*t;a+=(b-a)*t;return _round$1(_atan2$1(b+(c+(segment[i+7]-c)*t-b)*t-a,x)*_RAD2DEG$1);}function sliceRawPath(rawPath,start,end){end=_isUndefined$1(end)?1:_roundPrecise$1(end)||0;start=_roundPrecise$1(start)||0;var loops=Math.max(0,~~(_abs(end-start)-1e-8)),path=copyRawPath(rawPath);if(start>end){start=1-start;end=1-end;_reverseRawPath(path);path.totalLength=0;}if(start<0||end<0){var offset=Math.abs(~~Math.min(start,end))+1;start+=offset;end+=offset;}path.totalLength||cacheRawPathMeasurements(path);var wrap=end>1,s=getProgressData(path,start,_temp,true),e=getProgressData(path,end,_temp2),eSeg=e.segment,sSeg=s.segment,eSegIndex=e.segIndex,sSegIndex=s.segIndex,ei=e.i,si=s.i,sameSegment=sSegIndex===eSegIndex,sameBezier=ei===si&&sameSegment,wrapsBehind,sShift,eShift,i,copy,totalSegments,l,j;if(wrap||loops){wrapsBehind=eSegIndex<sSegIndex||sameSegment&&ei<si||sameBezier&&e.t<s.t;if(_splitSegment(path,sSegIndex,si,s.t)){sSegIndex++;if(!wrapsBehind){eSegIndex++;if(sameBezier){e.t=(e.t-s.t)/(1-s.t);ei=0;}else if(sameSegment){ei-=si;}}}if(Math.abs(1-(end-start))<1e-5){eSegIndex=sSegIndex-1;}else if(!e.t&&eSegIndex){eSegIndex--;}else if(_splitSegment(path,eSegIndex,ei,e.t)&&wrapsBehind){sSegIndex++;}if(s.t===1){sSegIndex=(sSegIndex+1)%path.length;}copy=[];totalSegments=path.length;l=1+totalSegments*loops;j=sSegIndex;l+=(totalSegments-sSegIndex+eSegIndex)%totalSegments;for(i=0;i<l;i++){_appendOrMerge(copy,path[j++%totalSegments]);}path=copy;}else{eShift=e.t===1?6:subdivideSegment(eSeg,ei,e.t);if(start!==end){sShift=subdivideSegment(sSeg,si,sameBezier?s.t/e.t:s.t);sameSegment&&(eShift+=sShift);eSeg.splice(ei+eShift+2);(sShift||si)&&sSeg.splice(0,si+sShift);i=path.length;while(i--){(i<sSegIndex||i>eSegIndex)&&path.splice(i,1);}}else{eSeg.angle=getRotationAtBezierT(eSeg,ei+eShift,0);ei+=eShift;s=eSeg[ei];e=eSeg[ei+1];eSeg.length=eSeg.totalLength=0;eSeg.totalPoints=path.totalPoints=8;eSeg.push(s,e,s,e,s,e,s,e);}}path.totalLength=0;return path;}function measureSegment(segment,startIndex,bezierQty){startIndex=startIndex||0;if(!segment.samples){segment.samples=[];segment.lookup=[];}var resolution=~~segment.resolution||12,inc=1/resolution,endIndex=bezierQty?startIndex+bezierQty*6+1:segment.length,x1=segment[startIndex],y1=segment[startIndex+1],samplesIndex=startIndex?startIndex/6*resolution:0,samples=segment.samples,lookup=segment.lookup,min=(startIndex?segment.minLength:_largeNum)||_largeNum,prevLength=samples[samplesIndex+bezierQty*resolution-1],length=startIndex?samples[samplesIndex-1]:0,i,j,x4,x3,x2,xd,xd1,y4,y3,y2,yd,yd1,inv,t,lengthIndex,l,segLength;samples.length=lookup.length=0;for(j=startIndex+2;j<endIndex;j+=6){x4=segment[j+4]-x1;x3=segment[j+2]-x1;x2=segment[j]-x1;y4=segment[j+5]-y1;y3=segment[j+3]-y1;y2=segment[j+1]-y1;xd=xd1=yd=yd1=0;if(_abs(x4)<.01&&_abs(y4)<.01&&_abs(x2)+_abs(y2)<.01){if(segment.length>8){segment.splice(j,6);j-=6;endIndex-=6;}}else{for(i=1;i<=resolution;i++){t=inc*i;inv=1-t;xd=xd1-(xd1=(t*t*x4+3*inv*(t*x3+inv*x2))*t);yd=yd1-(yd1=(t*t*y4+3*inv*(t*y3+inv*y2))*t);l=_sqrt$1(yd*yd+xd*xd);if(l<min){min=l;}length+=l;samples[samplesIndex++]=length;}}x1+=x4;y1+=y4;}if(prevLength){prevLength-=length;for(;samplesIndex<samples.length;samplesIndex++){samples[samplesIndex]+=prevLength;}}if(samples.length&&min){segment.totalLength=segLength=samples[samples.length-1]||0;segment.minLength=min;if(segLength/min<9999){l=lengthIndex=0;for(i=0;i<segLength;i+=min){lookup[l++]=samples[lengthIndex]<i?++lengthIndex:lengthIndex;}}}else{segment.totalLength=samples[0]=0;}return startIndex?length-samples[startIndex/2-1]:length;}function cacheRawPathMeasurements(rawPath,resolution){var pathLength,points,i;for(i=pathLength=points=0;i<rawPath.length;i++){rawPath[i].resolution=~~resolution||12;points+=rawPath[i].length;pathLength+=measureSegment(rawPath[i]);}rawPath.totalPoints=points;rawPath.totalLength=pathLength;return rawPath;}function subdivideSegment(segment,i,t){if(t<=0||t>=1){return 0;}var ax=segment[i],ay=segment[i+1],cp1x=segment[i+2],cp1y=segment[i+3],cp2x=segment[i+4],cp2y=segment[i+5],bx=segment[i+6],by=segment[i+7],x1a=ax+(cp1x-ax)*t,x2=cp1x+(cp2x-cp1x)*t,y1a=ay+(cp1y-ay)*t,y2=cp1y+(cp2y-cp1y)*t,x1=x1a+(x2-x1a)*t,y1=y1a+(y2-y1a)*t,x2a=cp2x+(bx-cp2x)*t,y2a=cp2y+(by-cp2y)*t;x2+=(x2a-x2)*t;y2+=(y2a-y2)*t;segment.splice(i+2,4,_round$1(x1a),_round$1(y1a),_round$1(x1),_round$1(y1),_round$1(x1+(x2-x1)*t),_round$1(y1+(y2-y1)*t),_round$1(x2),_round$1(y2),_round$1(x2a),_round$1(y2a));segment.samples&&segment.samples.splice(i/6*segment.resolution|0,0,0,0,0,0,0,0);return 6;}function getProgressData(rawPath,progress,decoratee,pushToNextIfAtEnd){decoratee=decoratee||{};rawPath.totalLength||cacheRawPathMeasurements(rawPath);if(progress<0||progress>1){progress=_wrapProgress(progress);}var segIndex=0,segment=rawPath[0],samples,resolution,length,min,max,i,t;if(!progress){t=i=segIndex=0;segment=rawPath[0];}else if(progress===1){t=1;segIndex=rawPath.length-1;segment=rawPath[segIndex];i=segment.length-8;}else{if(rawPath.length>1){length=rawPath.totalLength*progress;max=i=0;while((max+=rawPath[i++].totalLength)<length){segIndex=i;}segment=rawPath[segIndex];min=max-segment.totalLength;progress=(length-min)/(max-min)||0;}samples=segment.samples;resolution=segment.resolution;length=segment.totalLength*progress;i=segment.lookup.length?segment.lookup[~~(length/segment.minLength)]||0:_getSampleIndex(samples,length,progress);min=i?samples[i-1]:0;max=samples[i];if(max<length){min=max;max=samples[++i];}t=1/resolution*((length-min)/(max-min)+i%resolution);i=~~(i/resolution)*6;if(pushToNextIfAtEnd&&t===1){if(i+6<segment.length){i+=6;t=0;}else if(segIndex+1<rawPath.length){i=t=0;segment=rawPath[++segIndex];}}}decoratee.t=t;decoratee.i=i;decoratee.path=rawPath;decoratee.segment=segment;decoratee.segIndex=segIndex;return decoratee;}function getPositionOnPath(rawPath,progress,includeAngle,point){var segment=rawPath[0],result=point||{},samples,resolution,length,min,max,i,t,a,inv;if(progress<0||progress>1){progress=_wrapProgress(progress);}segment.lookup||cacheRawPathMeasurements(rawPath);if(rawPath.length>1){length=rawPath.totalLength*progress;max=i=0;while((max+=rawPath[i++].totalLength)<length){segment=rawPath[i];}min=max-segment.totalLength;progress=(length-min)/(max-min)||0;}samples=segment.samples;resolution=segment.resolution;length=segment.totalLength*progress;i=segment.lookup.length?segment.lookup[progress<1?~~(length/segment.minLength):segment.lookup.length-1]||0:_getSampleIndex(samples,length,progress);min=i?samples[i-1]:0;max=samples[i];if(max<length){min=max;max=samples[++i];}t=1/resolution*((length-min)/(max-min)+i%resolution)||0;inv=1-t;i=~~(i/resolution)*6;a=segment[i];result.x=_round$1((t*t*(segment[i+6]-a)+3*inv*(t*(segment[i+4]-a)+inv*(segment[i+2]-a)))*t+a);result.y=_round$1((t*t*(segment[i+7]-(a=segment[i+1]))+3*inv*(t*(segment[i+5]-a)+inv*(segment[i+3]-a)))*t+a);if(includeAngle){result.angle=segment.totalLength?getRotationAtBezierT(segment,i,t>=1?1-1e-9:t?t:1e-9):segment.angle||0;}return result;}function transformRawPath(rawPath,a,b,c,d,tx,ty){var j=rawPath.length,segment,l,i,x,y;while(--j>-1){segment=rawPath[j];l=segment.length;for(i=0;i<l;i+=2){x=segment[i];y=segment[i+1];segment[i]=x*a+y*c+tx;segment[i+1]=x*b+y*d+ty;}}rawPath._dirty=1;return rawPath;}function arcToSegment(lastX,lastY,rx,ry,angle,largeArcFlag,sweepFlag,x,y){if(lastX===x&&lastY===y){return;}rx=_abs(rx);ry=_abs(ry);var angleRad=angle%360*_DEG2RAD$1,cosAngle=_cos$1(angleRad),sinAngle=_sin$1(angleRad),PI=Math.PI,TWOPI=PI*2,dx2=(lastX-x)/2,dy2=(lastY-y)/2,x1=cosAngle*dx2+sinAngle*dy2,y1=-sinAngle*dx2+cosAngle*dy2,x1_sq=x1*x1,y1_sq=y1*y1,radiiCheck=x1_sq/(rx*rx)+y1_sq/(ry*ry);if(radiiCheck>1){rx=_sqrt$1(radiiCheck)*rx;ry=_sqrt$1(radiiCheck)*ry;}var rx_sq=rx*rx,ry_sq=ry*ry,sq=(rx_sq*ry_sq-rx_sq*y1_sq-ry_sq*x1_sq)/(rx_sq*y1_sq+ry_sq*x1_sq);if(sq<0){sq=0;}var coef=(largeArcFlag===sweepFlag?-1:1)*_sqrt$1(sq),cx1=coef*(rx*y1/ry),cy1=coef*-(ry*x1/rx),sx2=(lastX+x)/2,sy2=(lastY+y)/2,cx=sx2+(cosAngle*cx1-sinAngle*cy1),cy=sy2+(sinAngle*cx1+cosAngle*cy1),ux=(x1-cx1)/rx,uy=(y1-cy1)/ry,vx=(-x1-cx1)/rx,vy=(-y1-cy1)/ry,temp=ux*ux+uy*uy,angleStart=(uy<0?-1:1)*Math.acos(ux/_sqrt$1(temp)),angleExtent=(ux*vy-uy*vx<0?-1:1)*Math.acos((ux*vx+uy*vy)/_sqrt$1(temp*(vx*vx+vy*vy)));isNaN(angleExtent)&&(angleExtent=PI);if(!sweepFlag&&angleExtent>0){angleExtent-=TWOPI;}else if(sweepFlag&&angleExtent<0){angleExtent+=TWOPI;}angleStart%=TWOPI;angleExtent%=TWOPI;var segments=Math.ceil(_abs(angleExtent)/(TWOPI/4)),rawPath=[],angleIncrement=angleExtent/segments,controlLength=4/3*_sin$1(angleIncrement/2)/(1+_cos$1(angleIncrement/2)),ma=cosAngle*rx,mb=sinAngle*rx,mc=sinAngle*-ry,md=cosAngle*ry,i;for(i=0;i<segments;i++){angle=angleStart+i*angleIncrement;x1=_cos$1(angle);y1=_sin$1(angle);ux=_cos$1(angle+=angleIncrement);uy=_sin$1(angle);rawPath.push(x1-controlLength*y1,y1+controlLength*x1,ux+controlLength*uy,uy-controlLength*ux,ux,uy);}for(i=0;i<rawPath.length;i+=2){x1=rawPath[i];y1=rawPath[i+1];rawPath[i]=x1*ma+y1*mc+cx;rawPath[i+1]=x1*mb+y1*md+cy;}rawPath[i-2]=x;rawPath[i-1]=y;return rawPath;}function stringToRawPath(d){var a=(d+"").replace(_scientific,function(m){var n=+m;return n<0.0001&&n>-0.0001?0:n;}).match(_svgPathExp)||[],path=[],relativeX=0,relativeY=0,twoThirds=2/3,elements=a.length,points=0,errorMessage="ERROR: malformed path: "+d,i,j,x,y,command,isRelative,segment,startX,startY,difX,difY,beziers,prevCommand,flag1,flag2,line=function line(sx,sy,ex,ey){difX=(ex-sx)/3;difY=(ey-sy)/3;segment.push(sx+difX,sy+difY,ex-difX,ey-difY,ex,ey);};if(!d||!isNaN(a[0])||isNaN(a[1])){console.log(errorMessage);return path;}for(i=0;i<elements;i++){prevCommand=command;if(isNaN(a[i])){command=a[i].toUpperCase();isRelative=command!==a[i];}else{i--;}x=+a[i+1];y=+a[i+2];if(isRelative){x+=relativeX;y+=relativeY;}if(!i){startX=x;startY=y;}if(command==="M"){if(segment){if(segment.length<8){path.length-=1;}else{points+=segment.length;}}relativeX=startX=x;relativeY=startY=y;segment=[x,y];path.push(segment);i+=2;command="L";}else if(command==="C"){if(!segment){segment=[0,0];}if(!isRelative){relativeX=relativeY=0;}segment.push(x,y,relativeX+a[i+3]*1,relativeY+a[i+4]*1,relativeX+=a[i+5]*1,relativeY+=a[i+6]*1);i+=6;}else if(command==="S"){difX=relativeX;difY=relativeY;if(prevCommand==="C"||prevCommand==="S"){difX+=relativeX-segment[segment.length-4];difY+=relativeY-segment[segment.length-3];}if(!isRelative){relativeX=relativeY=0;}segment.push(difX,difY,x,y,relativeX+=a[i+3]*1,relativeY+=a[i+4]*1);i+=4;}else if(command==="Q"){difX=relativeX+(x-relativeX)*twoThirds;difY=relativeY+(y-relativeY)*twoThirds;if(!isRelative){relativeX=relativeY=0;}relativeX+=a[i+3]*1;relativeY+=a[i+4]*1;segment.push(difX,difY,relativeX+(x-relativeX)*twoThirds,relativeY+(y-relativeY)*twoThirds,relativeX,relativeY);i+=4;}else if(command==="T"){difX=relativeX-segment[segment.length-4];difY=relativeY-segment[segment.length-3];segment.push(relativeX+difX,relativeY+difY,x+(relativeX+difX*1.5-x)*twoThirds,y+(relativeY+difY*1.5-y)*twoThirds,relativeX=x,relativeY=y);i+=2;}else if(command==="H"){line(relativeX,relativeY,relativeX=x,relativeY);i+=1;}else if(command==="V"){line(relativeX,relativeY,relativeX,relativeY=x+(isRelative?relativeY-relativeX:0));i+=1;}else if(command==="L"||command==="Z"){if(command==="Z"){x=startX;y=startY;segment.closed=true;}if(command==="L"||_abs(relativeX-x)>0.5||_abs(relativeY-y)>0.5){line(relativeX,relativeY,x,y);if(command==="L"){i+=2;}}relativeX=x;relativeY=y;}else if(command==="A"){flag1=a[i+4];flag2=a[i+5];difX=a[i+6];difY=a[i+7];j=7;if(flag1.length>1){if(flag1.length<3){difY=difX;difX=flag2;j--;}else{difY=flag2;difX=flag1.substr(2);j-=2;}flag2=flag1.charAt(1);flag1=flag1.charAt(0);}beziers=arcToSegment(relativeX,relativeY,+a[i+1],+a[i+2],+a[i+3],+flag1,+flag2,(isRelative?relativeX:0)+difX*1,(isRelative?relativeY:0)+difY*1);i+=j;if(beziers){for(j=0;j<beziers.length;j++){segment.push(beziers[j]);}}relativeX=segment[segment.length-2];relativeY=segment[segment.length-1];}else{console.log(errorMessage);}}i=segment.length;if(i<6){path.pop();i=0;}else if(segment[0]===segment[i-2]&&segment[1]===segment[i-1]){segment.closed=true;}path.totalPoints=points+i;return path;}function flatPointsToSegment(points,curviness){if(curviness===void 0){curviness=1;}var x=points[0],y=0,segment=[x,y],i=2;for(;i<points.length;i+=2){segment.push(x,y,points[i],y=(points[i]-x)*curviness/2,x=points[i],-y);}return segment;}function pointsToSegment(points,curviness){_abs(points[0]-points[2])<1e-4&&_abs(points[1]-points[3])<1e-4&&(points=points.slice(2));var l=points.length-2,x=+points[0],y=+points[1],nextX=+points[2],nextY=+points[3],segment=[x,y,x,y],dx2=nextX-x,dy2=nextY-y,closed=Math.abs(points[l]-x)<0.001&&Math.abs(points[l+1]-y)<0.001,prevX,prevY,i,dx1,dy1,r1,r2,r3,tl,mx1,mx2,mxm,my1,my2,mym;if(closed){points.push(nextX,nextY);nextX=x;nextY=y;x=points[l-2];y=points[l-1];points.unshift(x,y);l+=4;}curviness=curviness||curviness===0?+curviness:1;for(i=2;i<l;i+=2){prevX=x;prevY=y;x=nextX;y=nextY;nextX=+points[i+2];nextY=+points[i+3];if(x===nextX&&y===nextY){continue;}dx1=dx2;dy1=dy2;dx2=nextX-x;dy2=nextY-y;r1=_sqrt$1(dx1*dx1+dy1*dy1);r2=_sqrt$1(dx2*dx2+dy2*dy2);r3=_sqrt$1(Math.pow(dx2/r2+dx1/r1,2)+Math.pow(dy2/r2+dy1/r1,2));tl=(r1+r2)*curviness*0.25/r3;mx1=x-(x-prevX)*(r1?tl/r1:0);mx2=x+(nextX-x)*(r2?tl/r2:0);mxm=x-(mx1+((mx2-mx1)*(r1*3/(r1+r2)+0.5)/4||0));my1=y-(y-prevY)*(r1?tl/r1:0);my2=y+(nextY-y)*(r2?tl/r2:0);mym=y-(my1+((my2-my1)*(r1*3/(r1+r2)+0.5)/4||0));if(x!==prevX||y!==prevY){segment.push(_round$1(mx1+mxm),_round$1(my1+mym),_round$1(x),_round$1(y),_round$1(mx2+mxm),_round$1(my2+mym));}}x!==nextX||y!==nextY||segment.length<4?segment.push(_round$1(nextX),_round$1(nextY),_round$1(nextX),_round$1(nextY)):segment.length-=2;if(segment.length===2){segment.push(x,y,x,y,x,y);}else if(closed){segment.splice(0,6);segment.length=segment.length-6;}return segment;}function rawPathToString(rawPath){if(_isNumber$1(rawPath[0])){rawPath=[rawPath];}var result="",l=rawPath.length,sl,s,i,segment;for(s=0;s<l;s++){segment=rawPath[s];result+="M"+_round$1(segment[0])+","+_round$1(segment[1])+" C";sl=segment.length;for(i=2;i<sl;i++){result+=_round$1(segment[i++])+","+_round$1(segment[i++])+" "+_round$1(segment[i++])+","+_round$1(segment[i++])+" "+_round$1(segment[i++])+","+_round$1(segment[i])+" ";}if(segment.closed){result+="z";}}return result;}/*!
   * CustomEase 3.11.5
   * https://greensock.com
   *
   * @license Copyright 2008-2023, GreenSock. All rights reserved.
   * Subject to the terms at https://greensock.com/standard-license or for
   * Club GreenSock members, the agreement issued with that membership.
   * @author: Jack Doyle, jack@greensock.com
  */var gsap$1,_coreInitted$1,_getGSAP=function _getGSAP(){return gsap$1||typeof window!=="undefined"&&(gsap$1=window.gsap)&&gsap$1.registerPlugin&&gsap$1;},_initCore$1=function _initCore(){gsap$1=_getGSAP();if(gsap$1){gsap$1.registerEase("_CE",CustomEase.create);_coreInitted$1=1;}else{console.warn("Please gsap.registerPlugin(CustomEase)");}},_bigNum$2=1e20,_round$2=function _round(value){return~~(value*1000+(value<0?-.5:.5))/1000;},_numExp$1=/[-+=\.]*\d+[\.e\-\+]*\d*[e\-\+]*\d*/gi,_needsParsingExp=/[cLlsSaAhHvVtTqQ]/g,_findMinimum=function _findMinimum(values){var l=values.length,min=_bigNum$2,i;for(i=1;i<l;i+=6){+values[i]<min&&(min=+values[i]);}return min;},_normalize=function _normalize(values,height,originY){if(!originY&&originY!==0){originY=Math.max(+values[values.length-1],+values[1]);}var tx=+values[0]*-1,ty=-originY,l=values.length,sx=1/(+values[l-2]+tx),sy=-height||(Math.abs(+values[l-1]-+values[1])<0.01*(+values[l-2]-+values[0])?_findMinimum(values)+ty:+values[l-1]+ty),i;if(sy){sy=1/sy;}else{sy=-sx;}for(i=0;i<l;i+=2){values[i]=(+values[i]+tx)*sx;values[i+1]=(+values[i+1]+ty)*sy;}},_bezierToPoints=function _bezierToPoints(x1,y1,x2,y2,x3,y3,x4,y4,threshold,points,index){var x12=(x1+x2)/2,y12=(y1+y2)/2,x23=(x2+x3)/2,y23=(y2+y3)/2,x34=(x3+x4)/2,y34=(y3+y4)/2,x123=(x12+x23)/2,y123=(y12+y23)/2,x234=(x23+x34)/2,y234=(y23+y34)/2,x1234=(x123+x234)/2,y1234=(y123+y234)/2,dx=x4-x1,dy=y4-y1,d2=Math.abs((x2-x4)*dy-(y2-y4)*dx),d3=Math.abs((x3-x4)*dy-(y3-y4)*dx),length;if(!points){points=[{x:x1,y:y1},{x:x4,y:y4}];index=1;}points.splice(index||points.length-1,0,{x:x1234,y:y1234});if((d2+d3)*(d2+d3)>threshold*(dx*dx+dy*dy)){length=points.length;_bezierToPoints(x1,y1,x12,y12,x123,y123,x1234,y1234,threshold,points,index);_bezierToPoints(x1234,y1234,x234,y234,x34,y34,x4,y4,threshold,points,index+1+(points.length-length));}return points;};var CustomEase=function(){function CustomEase(id,data,config){_coreInitted$1||_initCore$1();this.id=id;this.setData(data,config);}var _proto=CustomEase.prototype;_proto.setData=function setData(data,config){config=config||{};data=data||"0,0,1,1";var values=data.match(_numExp$1),closest=1,points=[],lookup=[],precision=config.precision||1,fast=precision<=1,l,a1,a2,i,inc,j,point,prevPoint,p;this.data=data;if(_needsParsingExp.test(data)||~data.indexOf("M")&&data.indexOf("C")<0){values=stringToRawPath(data)[0];}l=values.length;if(l===4){values.unshift(0,0);values.push(1,1);l=8;}else if((l-2)%6){throw"Invalid CustomEase";}if(+values[0]!==0||+values[l-2]!==1){_normalize(values,config.height,config.originY);}this.segment=values;for(i=2;i<l;i+=6){a1={x:+values[i-2],y:+values[i-1]};a2={x:+values[i+4],y:+values[i+5]};points.push(a1,a2);_bezierToPoints(a1.x,a1.y,+values[i],+values[i+1],+values[i+2],+values[i+3],a2.x,a2.y,1/(precision*200000),points,points.length-1);}l=points.length;for(i=0;i<l;i++){point=points[i];prevPoint=points[i-1]||point;if((point.x>prevPoint.x||prevPoint.y!==point.y&&prevPoint.x===point.x||point===prevPoint)&&point.x<=1){prevPoint.cx=point.x-prevPoint.x;prevPoint.cy=point.y-prevPoint.y;prevPoint.n=point;prevPoint.nx=point.x;if(fast&&i>1&&Math.abs(prevPoint.cy/prevPoint.cx-points[i-2].cy/points[i-2].cx)>2){fast=0;}if(prevPoint.cx<closest){if(!prevPoint.cx){prevPoint.cx=0.001;if(i===l-1){prevPoint.x-=0.001;closest=Math.min(closest,0.001);fast=0;}}else{closest=prevPoint.cx;}}}else{points.splice(i--,1);l--;}}l=1/closest+1|0;inc=1/l;j=0;point=points[0];if(fast){for(i=0;i<l;i++){p=i*inc;if(point.nx<p){point=points[++j];}a1=point.y+(p-point.x)/point.cx*point.cy;lookup[i]={x:p,cx:inc,y:a1,cy:0,nx:9};if(i){lookup[i-1].cy=a1-lookup[i-1].y;}}lookup[l-1].cy=points[points.length-1].y-a1;}else{for(i=0;i<l;i++){if(point.nx<i*inc){point=points[++j];}lookup[i]=point;}if(j<points.length-1){lookup[i-1]=points[points.length-2];}}this.ease=function(p){var point=lookup[p*l|0]||lookup[l-1];if(point.nx<p){point=point.n;}return point.y+(p-point.x)/point.cx*point.cy;};this.ease.custom=this;this.id&&gsap$1&&gsap$1.registerEase(this.id,this.ease);return this;};_proto.getSVGData=function getSVGData(config){return CustomEase.getSVGData(this,config);};CustomEase.create=function create(id,data,config){return new CustomEase(id,data,config).ease;};CustomEase.register=function register(core){gsap$1=core;_initCore$1();};CustomEase.get=function get(id){return gsap$1.parseEase(id);};CustomEase.getSVGData=function getSVGData(ease,config){config=config||{};var width=config.width||100,height=config.height||100,x=config.x||0,y=(config.y||0)+height,e=gsap$1.utils.toArray(config.path)[0],a,slope,i,inc,tx,ty,precision,threshold,prevX,prevY;if(config.invert){height=-height;y=0;}if(typeof ease==="string"){ease=gsap$1.parseEase(ease);}if(ease.custom){ease=ease.custom;}if(ease instanceof CustomEase){a=rawPathToString(transformRawPath([ease.segment],width,0,0,-height,x,y));}else{a=[x,y];precision=Math.max(5,(config.precision||1)*200);inc=1/precision;precision+=2;threshold=5/precision;prevX=_round$2(x+inc*width);prevY=_round$2(y+ease(inc)*-height);slope=(prevY-y)/(prevX-x);for(i=2;i<precision;i++){tx=_round$2(x+i*inc*width);ty=_round$2(y+ease(i*inc)*-height);if(Math.abs((ty-prevY)/(tx-prevX)-slope)>threshold||i===precision-1){a.push(prevX,prevY);slope=(ty-prevY)/(tx-prevX);}prevX=tx;prevY=ty;}a="M"+a.join(",");}e&&e.setAttribute("d",a);return a;};return CustomEase;}();_getGSAP()&&gsap$1.registerPlugin(CustomEase);CustomEase.version="3.11.5";var _doc$2,_win$2,_docElement$1,_body,_divContainer,_svgContainer,_identityMatrix,_gEl,_transformProp$1="transform",_transformOriginProp$1=_transformProp$1+"Origin",_hasOffsetBug,_setDoc=function _setDoc(element){var doc=element.ownerDocument||element;if(!(_transformProp$1 in element.style)&&"msTransform"in element.style){_transformProp$1="msTransform";_transformOriginProp$1=_transformProp$1+"Origin";}while(doc.parentNode&&(doc=doc.parentNode)){}_win$2=window;_identityMatrix=new Matrix2D();if(doc){_doc$2=doc;_docElement$1=doc.documentElement;_body=doc.body;_gEl=_doc$2.createElementNS("http://www.w3.org/2000/svg","g");_gEl.style.transform="none";var d1=doc.createElement("div"),d2=doc.createElement("div");_body.appendChild(d1);d1.appendChild(d2);d1.style.position="static";d1.style[_transformProp$1]="translate3d(0,0,1px)";_hasOffsetBug=d2.offsetParent!==d1;_body.removeChild(d1);}return doc;},_forceNonZeroScale=function _forceNonZeroScale(e){var a,cache;while(e&&e!==_body){cache=e._gsap;cache&&cache.uncache&&cache.get(e,"x");if(cache&&!cache.scaleX&&!cache.scaleY&&cache.renderTransform){cache.scaleX=cache.scaleY=1e-4;cache.renderTransform(1,cache);a?a.push(cache):a=[cache];}e=e.parentNode;}return a;},_svgTemps=[],_divTemps=[],_getDocScrollTop=function _getDocScrollTop(){return _win$2.pageYOffset||_doc$2.scrollTop||_docElement$1.scrollTop||_body.scrollTop||0;},_getDocScrollLeft=function _getDocScrollLeft(){return _win$2.pageXOffset||_doc$2.scrollLeft||_docElement$1.scrollLeft||_body.scrollLeft||0;},_svgOwner=function _svgOwner(element){return element.ownerSVGElement||((element.tagName+"").toLowerCase()==="svg"?element:null);},_isFixed=function _isFixed(element){if(_win$2.getComputedStyle(element).position==="fixed"){return true;}element=element.parentNode;if(element&&element.nodeType===1){return _isFixed(element);}},_createSibling=function _createSibling(element,i){if(element.parentNode&&(_doc$2||_setDoc(element))){var svg=_svgOwner(element),ns=svg?svg.getAttribute("xmlns")||"http://www.w3.org/2000/svg":"http://www.w3.org/1999/xhtml",type=svg?i?"rect":"g":"div",x=i!==2?0:100,y=i===3?100:0,css="position:absolute;display:block;pointer-events:none;margin:0;padding:0;",e=_doc$2.createElementNS?_doc$2.createElementNS(ns.replace(/^https/,"http"),type):_doc$2.createElement(type);if(i){if(!svg){if(!_divContainer){_divContainer=_createSibling(element);_divContainer.style.cssText=css;}e.style.cssText=css+"width:0.1px;height:0.1px;top:"+y+"px;left:"+x+"px";_divContainer.appendChild(e);}else{_svgContainer||(_svgContainer=_createSibling(element));e.setAttribute("width",0.01);e.setAttribute("height",0.01);e.setAttribute("transform","translate("+x+","+y+")");_svgContainer.appendChild(e);}}return e;}throw"Need document and parent.";},_consolidate=function _consolidate(m){var c=new Matrix2D(),i=0;for(;i<m.numberOfItems;i++){c.multiply(m.getItem(i).matrix);}return c;},_getCTM=function _getCTM(svg){var m=svg.getCTM(),transform;if(!m){transform=svg.style[_transformProp$1];svg.style[_transformProp$1]="none";svg.appendChild(_gEl);m=_gEl.getCTM();svg.removeChild(_gEl);transform?svg.style[_transformProp$1]=transform:svg.style.removeProperty(_transformProp$1.replace(/([A-Z])/g,"-$1").toLowerCase());}return m||_identityMatrix.clone();},_placeSiblings=function _placeSiblings(element,adjustGOffset){var svg=_svgOwner(element),isRootSVG=element===svg,siblings=svg?_svgTemps:_divTemps,parent=element.parentNode,container,m,b,x,y,cs;if(element===_win$2){return element;}siblings.length||siblings.push(_createSibling(element,1),_createSibling(element,2),_createSibling(element,3));container=svg?_svgContainer:_divContainer;if(svg){if(isRootSVG){b=_getCTM(element);x=-b.e/b.a;y=-b.f/b.d;m=_identityMatrix;}else if(element.getBBox){b=element.getBBox();m=element.transform?element.transform.baseVal:{};m=!m.numberOfItems?_identityMatrix:m.numberOfItems>1?_consolidate(m):m.getItem(0).matrix;x=m.a*b.x+m.c*b.y;y=m.b*b.x+m.d*b.y;}else{m=new Matrix2D();x=y=0;}if(adjustGOffset&&element.tagName.toLowerCase()==="g"){x=y=0;}(isRootSVG?svg:parent).appendChild(container);container.setAttribute("transform","matrix("+m.a+","+m.b+","+m.c+","+m.d+","+(m.e+x)+","+(m.f+y)+")");}else{x=y=0;if(_hasOffsetBug){m=element.offsetParent;b=element;while(b&&(b=b.parentNode)&&b!==m&&b.parentNode){if((_win$2.getComputedStyle(b)[_transformProp$1]+"").length>4){x=b.offsetLeft;y=b.offsetTop;b=0;}}}cs=_win$2.getComputedStyle(element);if(cs.position!=="absolute"&&cs.position!=="fixed"){m=element.offsetParent;while(parent&&parent!==m){x+=parent.scrollLeft||0;y+=parent.scrollTop||0;parent=parent.parentNode;}}b=container.style;b.top=element.offsetTop-y+"px";b.left=element.offsetLeft-x+"px";b[_transformProp$1]=cs[_transformProp$1];b[_transformOriginProp$1]=cs[_transformOriginProp$1];b.position=cs.position==="fixed"?"fixed":"absolute";element.parentNode.appendChild(container);}return container;},_setMatrix=function _setMatrix(m,a,b,c,d,e,f){m.a=a;m.b=b;m.c=c;m.d=d;m.e=e;m.f=f;return m;};var Matrix2D=function(){function Matrix2D(a,b,c,d,e,f){if(a===void 0){a=1;}if(b===void 0){b=0;}if(c===void 0){c=0;}if(d===void 0){d=1;}if(e===void 0){e=0;}if(f===void 0){f=0;}_setMatrix(this,a,b,c,d,e,f);}var _proto=Matrix2D.prototype;_proto.inverse=function inverse(){var a=this.a,b=this.b,c=this.c,d=this.d,e=this.e,f=this.f,determinant=a*d-b*c||1e-10;return _setMatrix(this,d/determinant,-b/determinant,-c/determinant,a/determinant,(c*f-d*e)/determinant,-(a*f-b*e)/determinant);};_proto.multiply=function multiply(matrix){var a=this.a,b=this.b,c=this.c,d=this.d,e=this.e,f=this.f,a2=matrix.a,b2=matrix.c,c2=matrix.b,d2=matrix.d,e2=matrix.e,f2=matrix.f;return _setMatrix(this,a2*a+c2*c,a2*b+c2*d,b2*a+d2*c,b2*b+d2*d,e+e2*a+f2*c,f+e2*b+f2*d);};_proto.clone=function clone(){return new Matrix2D(this.a,this.b,this.c,this.d,this.e,this.f);};_proto.equals=function equals(matrix){var a=this.a,b=this.b,c=this.c,d=this.d,e=this.e,f=this.f;return a===matrix.a&&b===matrix.b&&c===matrix.c&&d===matrix.d&&e===matrix.e&&f===matrix.f;};_proto.apply=function apply(point,decoratee){if(decoratee===void 0){decoratee={};}var x=point.x,y=point.y,a=this.a,b=this.b,c=this.c,d=this.d,e=this.e,f=this.f;decoratee.x=x*a+y*c+e||0;decoratee.y=x*b+y*d+f||0;return decoratee;};return Matrix2D;}();function getGlobalMatrix(element,inverse,adjustGOffset,includeScrollInFixed){if(!element||!element.parentNode||(_doc$2||_setDoc(element)).documentElement===element){return new Matrix2D();}var zeroScales=_forceNonZeroScale(element),svg=_svgOwner(element),temps=svg?_svgTemps:_divTemps,container=_placeSiblings(element,adjustGOffset),b1=temps[0].getBoundingClientRect(),b2=temps[1].getBoundingClientRect(),b3=temps[2].getBoundingClientRect(),parent=container.parentNode,isFixed=!includeScrollInFixed&&_isFixed(element),m=new Matrix2D((b2.left-b1.left)/100,(b2.top-b1.top)/100,(b3.left-b1.left)/100,(b3.top-b1.top)/100,b1.left+(isFixed?0:_getDocScrollLeft()),b1.top+(isFixed?0:_getDocScrollTop()));parent.removeChild(container);if(zeroScales){b1=zeroScales.length;while(b1--){b2=zeroScales[b1];b2.scaleX=b2.scaleY=0;b2.renderTransform(1,b2);}}return inverse?m.inverse():m;}var gsap$2,_win$3,_doc$3,_docElement$2,_body$1,_tempDiv$1,_placeholderDiv,_coreInitted$2,_checkPrefix,_toArray,_supportsPassive,_isTouchDevice,_touchEventLookup,_isMultiTouching,_isAndroid,InertiaPlugin,_defaultCursor,_supportsPointer,_context$1,_getStyleSaver$1,_dragCount=0,_windowExists$2=function _windowExists(){return typeof window!=="undefined";},_getGSAP$1=function _getGSAP(){return gsap$2||_windowExists$2()&&(gsap$2=window.gsap)&&gsap$2.registerPlugin&&gsap$2;},_isFunction$1=function _isFunction(value){return typeof value==="function";},_isObject$1=function _isObject(value){return _typeof(value)==="object";},_isUndefined$2=function _isUndefined(value){return typeof value==="undefined";},_emptyFunc$1=function _emptyFunc(){return false;},_transformProp$2="transform",_transformOriginProp$2="transformOrigin",_round$3=function _round(value){return Math.round(value*10000)/10000;},_isArray$1=Array.isArray,_createElement$1=function _createElement(type,ns){var e=_doc$3.createElementNS?_doc$3.createElementNS((ns||"http://www.w3.org/1999/xhtml").replace(/^https/,"http"),type):_doc$3.createElement(type);return e.style?e:_doc$3.createElement(type);},_RAD2DEG$2=180/Math.PI,_bigNum$3=1e20,_identityMatrix$1=new Matrix2D(),_getTime=Date.now||function(){return new Date().getTime();},_renderQueue=[],_lookup={},_lookupCount=0,_clickableTagExp=/^(?:a|input|textarea|button|select)$/i,_lastDragTime=0,_temp1={},_windowProxy={},_copy=function _copy(obj,factor){var copy={},p;for(p in obj){copy[p]=factor?obj[p]*factor:obj[p];}return copy;},_extend=function _extend(obj,defaults){for(var p in defaults){if(!(p in obj)){obj[p]=defaults[p];}}return obj;},_setTouchActionForAllDescendants=function _setTouchActionForAllDescendants(elements,value){var i=elements.length,children;while(i--){value?elements[i].style.touchAction=value:elements[i].style.removeProperty("touch-action");children=elements[i].children;children&&children.length&&_setTouchActionForAllDescendants(children,value);}},_renderQueueTick=function _renderQueueTick(){return _renderQueue.forEach(function(func){return func();});},_addToRenderQueue=function _addToRenderQueue(func){_renderQueue.push(func);if(_renderQueue.length===1){gsap$2.ticker.add(_renderQueueTick);}},_renderQueueTimeout=function _renderQueueTimeout(){return!_renderQueue.length&&gsap$2.ticker.remove(_renderQueueTick);},_removeFromRenderQueue=function _removeFromRenderQueue(func){var i=_renderQueue.length;while(i--){if(_renderQueue[i]===func){_renderQueue.splice(i,1);}}gsap$2.to(_renderQueueTimeout,{overwrite:true,delay:15,duration:0,onComplete:_renderQueueTimeout,data:"_draggable"});},_setDefaults$1=function _setDefaults(obj,defaults){for(var p in defaults){if(!(p in obj)){obj[p]=defaults[p];}}return obj;},_addListener=function _addListener(element,type,func,capture){if(element.addEventListener){var touchType=_touchEventLookup[type];capture=capture||(_supportsPassive?{passive:false}:null);element.addEventListener(touchType||type,func,capture);touchType&&type!==touchType&&element.addEventListener(type,func,capture);}},_removeListener=function _removeListener(element,type,func,capture){if(element.removeEventListener){var touchType=_touchEventLookup[type];element.removeEventListener(touchType||type,func,capture);touchType&&type!==touchType&&element.removeEventListener(type,func,capture);}},_preventDefault=function _preventDefault(event){event.preventDefault&&event.preventDefault();event.preventManipulation&&event.preventManipulation();},_hasTouchID=function _hasTouchID(list,ID){var i=list.length;while(i--){if(list[i].identifier===ID){return true;}}},_onMultiTouchDocumentEnd=function _onMultiTouchDocumentEnd(event){_isMultiTouching=event.touches&&_dragCount<event.touches.length;_removeListener(event.target,"touchend",_onMultiTouchDocumentEnd);},_onMultiTouchDocument=function _onMultiTouchDocument(event){_isMultiTouching=event.touches&&_dragCount<event.touches.length;_addListener(event.target,"touchend",_onMultiTouchDocumentEnd);},_getDocScrollTop$1=function _getDocScrollTop(doc){return _win$3.pageYOffset||doc.scrollTop||doc.documentElement.scrollTop||doc.body.scrollTop||0;},_getDocScrollLeft$1=function _getDocScrollLeft(doc){return _win$3.pageXOffset||doc.scrollLeft||doc.documentElement.scrollLeft||doc.body.scrollLeft||0;},_addScrollListener=function _addScrollListener(e,callback){_addListener(e,"scroll",callback);if(!_isRoot(e.parentNode)){_addScrollListener(e.parentNode,callback);}},_removeScrollListener=function _removeScrollListener(e,callback){_removeListener(e,"scroll",callback);if(!_isRoot(e.parentNode)){_removeScrollListener(e.parentNode,callback);}},_isRoot=function _isRoot(e){return!!(!e||e===_docElement$2||e.nodeType===9||e===_doc$3.body||e===_win$3||!e.nodeType||!e.parentNode);},_getMaxScroll=function _getMaxScroll(element,axis){var dim=axis==="x"?"Width":"Height",scroll="scroll"+dim,client="client"+dim;return Math.max(0,_isRoot(element)?Math.max(_docElement$2[scroll],_body$1[scroll])-(_win$3["inner"+dim]||_docElement$2[client]||_body$1[client]):element[scroll]-element[client]);},_recordMaxScrolls=function _recordMaxScrolls(e,skipCurrent){var x=_getMaxScroll(e,"x"),y=_getMaxScroll(e,"y");if(_isRoot(e)){e=_windowProxy;}else{_recordMaxScrolls(e.parentNode,skipCurrent);}e._gsMaxScrollX=x;e._gsMaxScrollY=y;if(!skipCurrent){e._gsScrollX=e.scrollLeft||0;e._gsScrollY=e.scrollTop||0;}},_setStyle=function _setStyle(element,property,value){var style=element.style;if(!style){return;}if(_isUndefined$2(style[property])){property=_checkPrefix(property,element)||property;}if(value==null){style.removeProperty&&style.removeProperty(property.replace(/([A-Z])/g,"-$1").toLowerCase());}else{style[property]=value;}},_getComputedStyle=function _getComputedStyle(element){return _win$3.getComputedStyle(element instanceof Element?element:element.host||(element.parentNode||{}).host||element);},_tempRect={},_parseRect=function _parseRect(e){if(e===_win$3){_tempRect.left=_tempRect.top=0;_tempRect.width=_tempRect.right=_docElement$2.clientWidth||e.innerWidth||_body$1.clientWidth||0;_tempRect.height=_tempRect.bottom=(e.innerHeight||0)-20<_docElement$2.clientHeight?_docElement$2.clientHeight:e.innerHeight||_body$1.clientHeight||0;return _tempRect;}var doc=e.ownerDocument||_doc$3,r=!_isUndefined$2(e.pageX)?{left:e.pageX-_getDocScrollLeft$1(doc),top:e.pageY-_getDocScrollTop$1(doc),right:e.pageX-_getDocScrollLeft$1(doc)+1,bottom:e.pageY-_getDocScrollTop$1(doc)+1}:!e.nodeType&&!_isUndefined$2(e.left)&&!_isUndefined$2(e.top)?e:_toArray(e)[0].getBoundingClientRect();if(_isUndefined$2(r.right)&&!_isUndefined$2(r.width)){r.right=r.left+r.width;r.bottom=r.top+r.height;}else if(_isUndefined$2(r.width)){r={width:r.right-r.left,height:r.bottom-r.top,right:r.right,left:r.left,bottom:r.bottom,top:r.top};}return r;},_dispatchEvent=function _dispatchEvent(target,type,callbackName){var vars=target.vars,callback=vars[callbackName],listeners=target._listeners[type],result;if(_isFunction$1(callback)){result=callback.apply(vars.callbackScope||target,vars[callbackName+"Params"]||[target.pointerEvent]);}if(listeners&&target.dispatchEvent(type)===false){result=false;}return result;},_getBounds=function _getBounds(target,context){var e=_toArray(target)[0],top,left,offset;if(!e.nodeType&&e!==_win$3){if(!_isUndefined$2(target.left)){offset={x:0,y:0};return{left:target.left-offset.x,top:target.top-offset.y,width:target.width,height:target.height};}left=target.min||target.minX||target.minRotation||0;top=target.min||target.minY||0;return{left:left,top:top,width:(target.max||target.maxX||target.maxRotation||0)-left,height:(target.max||target.maxY||0)-top};}return _getElementBounds(e,context);},_point1={},_getElementBounds=function _getElementBounds(element,context){context=_toArray(context)[0];var isSVG=element.getBBox&&element.ownerSVGElement,doc=element.ownerDocument||_doc$3,left,right,top,bottom,matrix,p1,p2,p3,p4,bbox,width,height,cs;if(element===_win$3){top=_getDocScrollTop$1(doc);left=_getDocScrollLeft$1(doc);right=left+(doc.documentElement.clientWidth||element.innerWidth||doc.body.clientWidth||0);bottom=top+((element.innerHeight||0)-20<doc.documentElement.clientHeight?doc.documentElement.clientHeight:element.innerHeight||doc.body.clientHeight||0);}else if(context===_win$3||_isUndefined$2(context)){return element.getBoundingClientRect();}else{left=top=0;if(isSVG){bbox=element.getBBox();width=bbox.width;height=bbox.height;}else{if(element.viewBox&&(bbox=element.viewBox.baseVal)){left=bbox.x||0;top=bbox.y||0;width=bbox.width;height=bbox.height;}if(!width){cs=_getComputedStyle(element);bbox=cs.boxSizing==="border-box";width=(parseFloat(cs.width)||element.clientWidth||0)+(bbox?0:parseFloat(cs.borderLeftWidth)+parseFloat(cs.borderRightWidth));height=(parseFloat(cs.height)||element.clientHeight||0)+(bbox?0:parseFloat(cs.borderTopWidth)+parseFloat(cs.borderBottomWidth));}}right=width;bottom=height;}if(element===context){return{left:left,top:top,width:right-left,height:bottom-top};}matrix=getGlobalMatrix(context,true).multiply(getGlobalMatrix(element));p1=matrix.apply({x:left,y:top});p2=matrix.apply({x:right,y:top});p3=matrix.apply({x:right,y:bottom});p4=matrix.apply({x:left,y:bottom});left=Math.min(p1.x,p2.x,p3.x,p4.x);top=Math.min(p1.y,p2.y,p3.y,p4.y);return{left:left,top:top,width:Math.max(p1.x,p2.x,p3.x,p4.x)-left,height:Math.max(p1.y,p2.y,p3.y,p4.y)-top};},_parseInertia=function _parseInertia(draggable,snap,max,min,factor,forceZeroVelocity){var vars={},a,i,l;if(snap){if(factor!==1&&snap instanceof Array){vars.end=a=[];l=snap.length;if(_isObject$1(snap[0])){for(i=0;i<l;i++){a[i]=_copy(snap[i],factor);}}else{for(i=0;i<l;i++){a[i]=snap[i]*factor;}}max+=1.1;min-=1.1;}else if(_isFunction$1(snap)){vars.end=function(value){var result=snap.call(draggable,value),copy,p;if(factor!==1){if(_isObject$1(result)){copy={};for(p in result){copy[p]=result[p]*factor;}result=copy;}else{result*=factor;}}return result;};}else{vars.end=snap;}}if(max||max===0){vars.max=max;}if(min||min===0){vars.min=min;}if(forceZeroVelocity){vars.velocity=0;}return vars;},_isClickable=function _isClickable(element){var data;return!element||!element.getAttribute||element===_body$1?false:(data=element.getAttribute("data-clickable"))==="true"||data!=="false"&&(element.onclick||_clickableTagExp.test(element.nodeName+"")||element.getAttribute("contentEditable")==="true")?true:_isClickable(element.parentNode);},_setSelectable=function _setSelectable(elements,selectable){var i=elements.length,e;while(i--){e=elements[i];e.ondragstart=e.onselectstart=selectable?null:_emptyFunc$1;gsap$2.set(e,{lazy:true,userSelect:selectable?"text":"none"});}},_isFixed$1=function _isFixed(element){if(_getComputedStyle(element).position==="fixed"){return true;}element=element.parentNode;if(element&&element.nodeType===1){return _isFixed(element);}},_supports3D$1,_addPaddingBR,ScrollProxy=function ScrollProxy(element,vars){element=gsap$2.utils.toArray(element)[0];vars=vars||{};var content=document.createElement("div"),style=content.style,node=element.firstChild,offsetTop=0,offsetLeft=0,prevTop=element.scrollTop,prevLeft=element.scrollLeft,scrollWidth=element.scrollWidth,scrollHeight=element.scrollHeight,extraPadRight=0,maxLeft=0,maxTop=0,elementWidth,elementHeight,contentHeight,nextNode,transformStart,transformEnd;if(_supports3D$1&&vars.force3D!==false){transformStart="translate3d(";transformEnd="px,0px)";}else if(_transformProp$2){transformStart="translate(";transformEnd="px)";}this.scrollTop=function(value,force){if(!arguments.length){return-this.top();}this.top(-value,force);};this.scrollLeft=function(value,force){if(!arguments.length){return-this.left();}this.left(-value,force);};this.left=function(value,force){if(!arguments.length){return-(element.scrollLeft+offsetLeft);}var dif=element.scrollLeft-prevLeft,oldOffset=offsetLeft;if((dif>2||dif<-2)&&!force){prevLeft=element.scrollLeft;gsap$2.killTweensOf(this,{left:1,scrollLeft:1});this.left(-prevLeft);if(vars.onKill){vars.onKill();}return;}value=-value;if(value<0){offsetLeft=value-0.5|0;value=0;}else if(value>maxLeft){offsetLeft=value-maxLeft|0;value=maxLeft;}else{offsetLeft=0;}if(offsetLeft||oldOffset){if(!this._skip){style[_transformProp$2]=transformStart+-offsetLeft+"px,"+-offsetTop+transformEnd;}if(offsetLeft+extraPadRight>=0){style.paddingRight=offsetLeft+extraPadRight+"px";}}element.scrollLeft=value|0;prevLeft=element.scrollLeft;};this.top=function(value,force){if(!arguments.length){return-(element.scrollTop+offsetTop);}var dif=element.scrollTop-prevTop,oldOffset=offsetTop;if((dif>2||dif<-2)&&!force){prevTop=element.scrollTop;gsap$2.killTweensOf(this,{top:1,scrollTop:1});this.top(-prevTop);if(vars.onKill){vars.onKill();}return;}value=-value;if(value<0){offsetTop=value-0.5|0;value=0;}else if(value>maxTop){offsetTop=value-maxTop|0;value=maxTop;}else{offsetTop=0;}if(offsetTop||oldOffset){if(!this._skip){style[_transformProp$2]=transformStart+-offsetLeft+"px,"+-offsetTop+transformEnd;}}element.scrollTop=value|0;prevTop=element.scrollTop;};this.maxScrollTop=function(){return maxTop;};this.maxScrollLeft=function(){return maxLeft;};this.disable=function(){node=content.firstChild;while(node){nextNode=node.nextSibling;element.appendChild(node);node=nextNode;}if(element===content.parentNode){element.removeChild(content);}};this.enable=function(){node=element.firstChild;if(node===content){return;}while(node){nextNode=node.nextSibling;content.appendChild(node);node=nextNode;}element.appendChild(content);this.calibrate();};this.calibrate=function(force){var widthMatches=element.clientWidth===elementWidth,cs,x,y;prevTop=element.scrollTop;prevLeft=element.scrollLeft;if(widthMatches&&element.clientHeight===elementHeight&&content.offsetHeight===contentHeight&&scrollWidth===element.scrollWidth&&scrollHeight===element.scrollHeight&&!force){return;}if(offsetTop||offsetLeft){x=this.left();y=this.top();this.left(-element.scrollLeft);this.top(-element.scrollTop);}cs=_getComputedStyle(element);if(!widthMatches||force){style.display="block";style.width="auto";style.paddingRight="0px";extraPadRight=Math.max(0,element.scrollWidth-element.clientWidth);if(extraPadRight){extraPadRight+=parseFloat(cs.paddingLeft)+(_addPaddingBR?parseFloat(cs.paddingRight):0);}}style.display="inline-block";style.position="relative";style.overflow="visible";style.verticalAlign="top";style.boxSizing="content-box";style.width="100%";style.paddingRight=extraPadRight+"px";if(_addPaddingBR){style.paddingBottom=cs.paddingBottom;}elementWidth=element.clientWidth;elementHeight=element.clientHeight;scrollWidth=element.scrollWidth;scrollHeight=element.scrollHeight;maxLeft=element.scrollWidth-elementWidth;maxTop=element.scrollHeight-elementHeight;contentHeight=content.offsetHeight;style.display="block";if(x||y){this.left(x);this.top(y);}};this.content=content;this.element=element;this._skip=false;this.enable();},_initCore$2=function _initCore(required){if(_windowExists$2()&&document.body){var nav=window&&window.navigator;_win$3=window;_doc$3=document;_docElement$2=_doc$3.documentElement;_body$1=_doc$3.body;_tempDiv$1=_createElement$1("div");_supportsPointer=!!window.PointerEvent;_placeholderDiv=_createElement$1("div");_placeholderDiv.style.cssText="visibility:hidden;height:1px;top:-1px;pointer-events:none;position:relative;clear:both;cursor:grab";_defaultCursor=_placeholderDiv.style.cursor==="grab"?"grab":"move";_isAndroid=nav&&nav.userAgent.toLowerCase().indexOf("android")!==-1;_isTouchDevice="ontouchstart"in _docElement$2&&"orientation"in _win$3||nav&&(nav.MaxTouchPoints>0||nav.msMaxTouchPoints>0);_addPaddingBR=function(){var div=_createElement$1("div"),child=_createElement$1("div"),childStyle=child.style,parent=_body$1,val;childStyle.display="inline-block";childStyle.position="relative";div.style.cssText="width:90px;height:40px;padding:10px;overflow:auto;visibility:hidden";div.appendChild(child);parent.appendChild(div);val=child.offsetHeight+18>div.scrollHeight;parent.removeChild(div);return val;}();_touchEventLookup=function(types){var standard=types.split(","),converted=("onpointerdown"in _tempDiv$1?"pointerdown,pointermove,pointerup,pointercancel":"onmspointerdown"in _tempDiv$1?"MSPointerDown,MSPointerMove,MSPointerUp,MSPointerCancel":types).split(","),obj={},i=4;while(--i>-1){obj[standard[i]]=converted[i];obj[converted[i]]=standard[i];}try{_docElement$2.addEventListener("test",null,Object.defineProperty({},"passive",{get:function get(){_supportsPassive=1;}}));}catch(e){}return obj;}("touchstart,touchmove,touchend,touchcancel");_addListener(_doc$3,"touchcancel",_emptyFunc$1);_addListener(_win$3,"touchmove",_emptyFunc$1);_body$1&&_body$1.addEventListener("touchstart",_emptyFunc$1);_addListener(_doc$3,"contextmenu",function(){for(var p in _lookup){if(_lookup[p].isPressed){_lookup[p].endDrag();}}});gsap$2=_coreInitted$2=_getGSAP$1();}if(gsap$2){InertiaPlugin=gsap$2.plugins.inertia;_context$1=gsap$2.core.context||function(){};_checkPrefix=gsap$2.utils.checkPrefix;_transformProp$2=_checkPrefix(_transformProp$2);_transformOriginProp$2=_checkPrefix(_transformOriginProp$2);_toArray=gsap$2.utils.toArray;_getStyleSaver$1=gsap$2.core.getStyleSaver;_supports3D$1=!!_checkPrefix("perspective");}else if(required){console.warn("Please gsap.registerPlugin(Draggable)");}};var EventDispatcher=function(){function EventDispatcher(target){this._listeners={};this.target=target||this;}var _proto=EventDispatcher.prototype;_proto.addEventListener=function addEventListener(type,callback){var list=this._listeners[type]||(this._listeners[type]=[]);if(!~list.indexOf(callback)){list.push(callback);}};_proto.removeEventListener=function removeEventListener(type,callback){var list=this._listeners[type],i=list&&list.indexOf(callback);i>=0&&list.splice(i,1);};_proto.dispatchEvent=function dispatchEvent(type){var _this=this;var result;(this._listeners[type]||[]).forEach(function(callback){return callback.call(_this,{type:type,target:_this.target})===false&&(result=false);});return result;};return EventDispatcher;}();var Draggable=function(_EventDispatcher){_inheritsLoose(Draggable,_EventDispatcher);function Draggable(target,vars){var _this2;_this2=_EventDispatcher.call(this)||this;_coreInitted$2||_initCore$2(1);target=_toArray(target)[0];_this2.styles=_getStyleSaver$1&&_getStyleSaver$1(target,"transform,left,top");if(!InertiaPlugin){InertiaPlugin=gsap$2.plugins.inertia;}_this2.vars=vars=_copy(vars||{});_this2.target=target;_this2.x=_this2.y=_this2.rotation=0;_this2.dragResistance=parseFloat(vars.dragResistance)||0;_this2.edgeResistance=isNaN(vars.edgeResistance)?1:parseFloat(vars.edgeResistance)||0;_this2.lockAxis=vars.lockAxis;_this2.autoScroll=vars.autoScroll||0;_this2.lockedAxis=null;_this2.allowEventDefault=!!vars.allowEventDefault;gsap$2.getProperty(target,"x");var type=(vars.type||"x,y").toLowerCase(),xyMode=~type.indexOf("x")||~type.indexOf("y"),rotationMode=type.indexOf("rotation")!==-1,xProp=rotationMode?"rotation":xyMode?"x":"left",yProp=xyMode?"y":"top",allowX=!!(~type.indexOf("x")||~type.indexOf("left")||type==="scroll"),allowY=!!(~type.indexOf("y")||~type.indexOf("top")||type==="scroll"),minimumMovement=vars.minimumMovement||2,self=_assertThisInitialized(_this2),triggers=_toArray(vars.trigger||vars.handle||target),killProps={},dragEndTime=0,checkAutoScrollBounds=false,autoScrollMarginTop=vars.autoScrollMarginTop||40,autoScrollMarginRight=vars.autoScrollMarginRight||40,autoScrollMarginBottom=vars.autoScrollMarginBottom||40,autoScrollMarginLeft=vars.autoScrollMarginLeft||40,isClickable=vars.clickableTest||_isClickable,clickTime=0,gsCache=target._gsap||gsap$2.core.getCache(target),isFixed=_isFixed$1(target),getPropAsNum=function getPropAsNum(property,unit){return parseFloat(gsCache.get(target,property,unit));},ownerDoc=target.ownerDocument||_doc$3,enabled,scrollProxy,startPointerX,startPointerY,startElementX,startElementY,hasBounds,hasDragCallback,hasMoveCallback,maxX,minX,maxY,minY,touch,touchID,rotationOrigin,dirty,old,snapX,snapY,snapXY,isClicking,touchEventTarget,matrix,interrupted,allowNativeTouchScrolling,touchDragAxis,isDispatching,clickDispatch,trustedClickDispatch,isPreventingDefault,innerMatrix,dragged,onContextMenu=function onContextMenu(e){_preventDefault(e);e.stopImmediatePropagation&&e.stopImmediatePropagation();return false;},render=function render(suppressEvents){if(self.autoScroll&&self.isDragging&&(checkAutoScrollBounds||dirty)){var e=target,autoScrollFactor=self.autoScroll*15,parent,isRoot,rect,pointerX,pointerY,changeX,changeY,gap;checkAutoScrollBounds=false;_windowProxy.scrollTop=_win$3.pageYOffset!=null?_win$3.pageYOffset:ownerDoc.documentElement.scrollTop!=null?ownerDoc.documentElement.scrollTop:ownerDoc.body.scrollTop;_windowProxy.scrollLeft=_win$3.pageXOffset!=null?_win$3.pageXOffset:ownerDoc.documentElement.scrollLeft!=null?ownerDoc.documentElement.scrollLeft:ownerDoc.body.scrollLeft;pointerX=self.pointerX-_windowProxy.scrollLeft;pointerY=self.pointerY-_windowProxy.scrollTop;while(e&&!isRoot){isRoot=_isRoot(e.parentNode);parent=isRoot?_windowProxy:e.parentNode;rect=isRoot?{bottom:Math.max(_docElement$2.clientHeight,_win$3.innerHeight||0),right:Math.max(_docElement$2.clientWidth,_win$3.innerWidth||0),left:0,top:0}:parent.getBoundingClientRect();changeX=changeY=0;if(allowY){gap=parent._gsMaxScrollY-parent.scrollTop;if(gap<0){changeY=gap;}else if(pointerY>rect.bottom-autoScrollMarginBottom&&gap){checkAutoScrollBounds=true;changeY=Math.min(gap,autoScrollFactor*(1-Math.max(0,rect.bottom-pointerY)/autoScrollMarginBottom)|0);}else if(pointerY<rect.top+autoScrollMarginTop&&parent.scrollTop){checkAutoScrollBounds=true;changeY=-Math.min(parent.scrollTop,autoScrollFactor*(1-Math.max(0,pointerY-rect.top)/autoScrollMarginTop)|0);}if(changeY){parent.scrollTop+=changeY;}}if(allowX){gap=parent._gsMaxScrollX-parent.scrollLeft;if(gap<0){changeX=gap;}else if(pointerX>rect.right-autoScrollMarginRight&&gap){checkAutoScrollBounds=true;changeX=Math.min(gap,autoScrollFactor*(1-Math.max(0,rect.right-pointerX)/autoScrollMarginRight)|0);}else if(pointerX<rect.left+autoScrollMarginLeft&&parent.scrollLeft){checkAutoScrollBounds=true;changeX=-Math.min(parent.scrollLeft,autoScrollFactor*(1-Math.max(0,pointerX-rect.left)/autoScrollMarginLeft)|0);}if(changeX){parent.scrollLeft+=changeX;}}if(isRoot&&(changeX||changeY)){_win$3.scrollTo(parent.scrollLeft,parent.scrollTop);setPointerPosition(self.pointerX+changeX,self.pointerY+changeY);}e=parent;}}if(dirty){var x=self.x,y=self.y;if(rotationMode){self.deltaX=x-parseFloat(gsCache.rotation);self.rotation=x;gsCache.rotation=x+"deg";gsCache.renderTransform(1,gsCache);}else{if(scrollProxy){if(allowY){self.deltaY=y-scrollProxy.top();scrollProxy.top(y);}if(allowX){self.deltaX=x-scrollProxy.left();scrollProxy.left(x);}}else if(xyMode){if(allowY){self.deltaY=y-parseFloat(gsCache.y);gsCache.y=y+"px";}if(allowX){self.deltaX=x-parseFloat(gsCache.x);gsCache.x=x+"px";}gsCache.renderTransform(1,gsCache);}else{if(allowY){self.deltaY=y-parseFloat(target.style.top||0);target.style.top=y+"px";}if(allowX){self.deltaX=x-parseFloat(target.style.left||0);target.style.left=x+"px";}}}if(hasDragCallback&&!suppressEvents&&!isDispatching){isDispatching=true;if(_dispatchEvent(self,"drag","onDrag")===false){if(allowX){self.x-=self.deltaX;}if(allowY){self.y-=self.deltaY;}render(true);}isDispatching=false;}}dirty=false;},syncXY=function syncXY(skipOnUpdate,skipSnap){var x=self.x,y=self.y,snappedValue,cs;if(!target._gsap){gsCache=gsap$2.core.getCache(target);}gsCache.uncache&&gsap$2.getProperty(target,"x");if(xyMode){self.x=parseFloat(gsCache.x);self.y=parseFloat(gsCache.y);}else if(rotationMode){self.x=self.rotation=parseFloat(gsCache.rotation);}else if(scrollProxy){self.y=scrollProxy.top();self.x=scrollProxy.left();}else{self.y=parseFloat(target.style.top||(cs=_getComputedStyle(target))&&cs.top)||0;self.x=parseFloat(target.style.left||(cs||{}).left)||0;}if((snapX||snapY||snapXY)&&!skipSnap&&(self.isDragging||self.isThrowing)){if(snapXY){_temp1.x=self.x;_temp1.y=self.y;snappedValue=snapXY(_temp1);if(snappedValue.x!==self.x){self.x=snappedValue.x;dirty=true;}if(snappedValue.y!==self.y){self.y=snappedValue.y;dirty=true;}}if(snapX){snappedValue=snapX(self.x);if(snappedValue!==self.x){self.x=snappedValue;if(rotationMode){self.rotation=snappedValue;}dirty=true;}}if(snapY){snappedValue=snapY(self.y);if(snappedValue!==self.y){self.y=snappedValue;}dirty=true;}}dirty&&render(true);if(!skipOnUpdate){self.deltaX=self.x-x;self.deltaY=self.y-y;_dispatchEvent(self,"throwupdate","onThrowUpdate");}},buildSnapFunc=function buildSnapFunc(snap,min,max,factor){if(min==null){min=-_bigNum$3;}if(max==null){max=_bigNum$3;}if(_isFunction$1(snap)){return function(n){var edgeTolerance=!self.isPressed?1:1-self.edgeResistance;return snap.call(self,(n>max?max+(n-max)*edgeTolerance:n<min?min+(n-min)*edgeTolerance:n)*factor)*factor;};}if(_isArray$1(snap)){return function(n){var i=snap.length,closest=0,absDif=_bigNum$3,val,dif;while(--i>-1){val=snap[i];dif=val-n;if(dif<0){dif=-dif;}if(dif<absDif&&val>=min&&val<=max){closest=i;absDif=dif;}}return snap[closest];};}return isNaN(snap)?function(n){return n;}:function(){return snap*factor;};},buildPointSnapFunc=function buildPointSnapFunc(snap,minX,maxX,minY,maxY,radius,factor){radius=radius&&radius<_bigNum$3?radius*radius:_bigNum$3;if(_isFunction$1(snap)){return function(point){var edgeTolerance=!self.isPressed?1:1-self.edgeResistance,x=point.x,y=point.y,result,dx,dy;point.x=x=x>maxX?maxX+(x-maxX)*edgeTolerance:x<minX?minX+(x-minX)*edgeTolerance:x;point.y=y=y>maxY?maxY+(y-maxY)*edgeTolerance:y<minY?minY+(y-minY)*edgeTolerance:y;result=snap.call(self,point);if(result!==point){point.x=result.x;point.y=result.y;}if(factor!==1){point.x*=factor;point.y*=factor;}if(radius<_bigNum$3){dx=point.x-x;dy=point.y-y;if(dx*dx+dy*dy>radius){point.x=x;point.y=y;}}return point;};}if(_isArray$1(snap)){return function(p){var i=snap.length,closest=0,minDist=_bigNum$3,x,y,point,dist;while(--i>-1){point=snap[i];x=point.x-p.x;y=point.y-p.y;dist=x*x+y*y;if(dist<minDist){closest=i;minDist=dist;}}return minDist<=radius?snap[closest]:p;};}return function(n){return n;};},calculateBounds=function calculateBounds(){var bounds,targetBounds,snap,snapIsRaw;hasBounds=false;if(scrollProxy){scrollProxy.calibrate();self.minX=minX=-scrollProxy.maxScrollLeft();self.minY=minY=-scrollProxy.maxScrollTop();self.maxX=maxX=self.maxY=maxY=0;hasBounds=true;}else if(!!vars.bounds){bounds=_getBounds(vars.bounds,target.parentNode);if(rotationMode){self.minX=minX=bounds.left;self.maxX=maxX=bounds.left+bounds.width;self.minY=minY=self.maxY=maxY=0;}else if(!_isUndefined$2(vars.bounds.maxX)||!_isUndefined$2(vars.bounds.maxY)){bounds=vars.bounds;self.minX=minX=bounds.minX;self.minY=minY=bounds.minY;self.maxX=maxX=bounds.maxX;self.maxY=maxY=bounds.maxY;}else{targetBounds=_getBounds(target,target.parentNode);self.minX=minX=Math.round(getPropAsNum(xProp,"px")+bounds.left-targetBounds.left);self.minY=minY=Math.round(getPropAsNum(yProp,"px")+bounds.top-targetBounds.top);self.maxX=maxX=Math.round(minX+(bounds.width-targetBounds.width));self.maxY=maxY=Math.round(minY+(bounds.height-targetBounds.height));}if(minX>maxX){self.minX=maxX;self.maxX=maxX=minX;minX=self.minX;}if(minY>maxY){self.minY=maxY;self.maxY=maxY=minY;minY=self.minY;}if(rotationMode){self.minRotation=minX;self.maxRotation=maxX;}hasBounds=true;}if(vars.liveSnap){snap=vars.liveSnap===true?vars.snap||{}:vars.liveSnap;snapIsRaw=_isArray$1(snap)||_isFunction$1(snap);if(rotationMode){snapX=buildSnapFunc(snapIsRaw?snap:snap.rotation,minX,maxX,1);snapY=null;}else{if(snap.points){snapXY=buildPointSnapFunc(snapIsRaw?snap:snap.points,minX,maxX,minY,maxY,snap.radius,scrollProxy?-1:1);}else{if(allowX){snapX=buildSnapFunc(snapIsRaw?snap:snap.x||snap.left||snap.scrollLeft,minX,maxX,scrollProxy?-1:1);}if(allowY){snapY=buildSnapFunc(snapIsRaw?snap:snap.y||snap.top||snap.scrollTop,minY,maxY,scrollProxy?-1:1);}}}}},onThrowComplete=function onThrowComplete(){self.isThrowing=false;_dispatchEvent(self,"throwcomplete","onThrowComplete");},onThrowInterrupt=function onThrowInterrupt(){self.isThrowing=false;},animate=function animate(inertia,forceZeroVelocity){var snap,snapIsRaw,tween,overshootTolerance;if(inertia&&InertiaPlugin){if(inertia===true){snap=vars.snap||vars.liveSnap||{};snapIsRaw=_isArray$1(snap)||_isFunction$1(snap);inertia={resistance:(vars.throwResistance||vars.resistance||1000)/(rotationMode?10:1)};if(rotationMode){inertia.rotation=_parseInertia(self,snapIsRaw?snap:snap.rotation,maxX,minX,1,forceZeroVelocity);}else{if(allowX){inertia[xProp]=_parseInertia(self,snapIsRaw?snap:snap.points||snap.x||snap.left,maxX,minX,scrollProxy?-1:1,forceZeroVelocity||self.lockedAxis==="x");}if(allowY){inertia[yProp]=_parseInertia(self,snapIsRaw?snap:snap.points||snap.y||snap.top,maxY,minY,scrollProxy?-1:1,forceZeroVelocity||self.lockedAxis==="y");}if(snap.points||_isArray$1(snap)&&_isObject$1(snap[0])){inertia.linkedProps=xProp+","+yProp;inertia.radius=snap.radius;}}}self.isThrowing=true;overshootTolerance=!isNaN(vars.overshootTolerance)?vars.overshootTolerance:vars.edgeResistance===1?0:1-self.edgeResistance+0.2;if(!inertia.duration){inertia.duration={max:Math.max(vars.minDuration||0,"maxDuration"in vars?vars.maxDuration:2),min:!isNaN(vars.minDuration)?vars.minDuration:overshootTolerance===0||_isObject$1(inertia)&&inertia.resistance>1000?0:0.5,overshoot:overshootTolerance};}self.tween=tween=gsap$2.to(scrollProxy||target,{inertia:inertia,data:"_draggable",onComplete:onThrowComplete,onInterrupt:onThrowInterrupt,onUpdate:vars.fastMode?_dispatchEvent:syncXY,onUpdateParams:vars.fastMode?[self,"onthrowupdate","onThrowUpdate"]:snap&&snap.radius?[false,true]:[]});if(!vars.fastMode){if(scrollProxy){scrollProxy._skip=true;}tween.render(1e9,true,true);syncXY(true,true);self.endX=self.x;self.endY=self.y;if(rotationMode){self.endRotation=self.x;}tween.play(0);syncXY(true,true);if(scrollProxy){scrollProxy._skip=false;}}}else if(hasBounds){self.applyBounds();}},updateMatrix=function updateMatrix(shiftStart){var start=matrix,p;matrix=getGlobalMatrix(target.parentNode,true);if(shiftStart&&self.isPressed&&!matrix.equals(start||new Matrix2D())){p=start.inverse().apply({x:startPointerX,y:startPointerY});matrix.apply(p,p);startPointerX=p.x;startPointerY=p.y;}if(matrix.equals(_identityMatrix$1)){matrix=null;}},recordStartPositions=function recordStartPositions(){var edgeTolerance=1-self.edgeResistance,offsetX=isFixed?_getDocScrollLeft$1(ownerDoc):0,offsetY=isFixed?_getDocScrollTop$1(ownerDoc):0,parsedOrigin,x,y;if(xyMode){gsCache.x=getPropAsNum(xProp,"px")+"px";gsCache.y=getPropAsNum(yProp,"px")+"px";gsCache.renderTransform();}updateMatrix(false);_point1.x=self.pointerX-offsetX;_point1.y=self.pointerY-offsetY;matrix&&matrix.apply(_point1,_point1);startPointerX=_point1.x;startPointerY=_point1.y;if(dirty){setPointerPosition(self.pointerX,self.pointerY);render(true);}innerMatrix=getGlobalMatrix(target);if(scrollProxy){calculateBounds();startElementY=scrollProxy.top();startElementX=scrollProxy.left();}else{if(isTweening()){syncXY(true,true);calculateBounds();}else{self.applyBounds();}if(rotationMode){parsedOrigin=target.ownerSVGElement?[gsCache.xOrigin-target.getBBox().x,gsCache.yOrigin-target.getBBox().y]:(_getComputedStyle(target)[_transformOriginProp$2]||"0 0").split(" ");rotationOrigin=self.rotationOrigin=getGlobalMatrix(target).apply({x:parseFloat(parsedOrigin[0])||0,y:parseFloat(parsedOrigin[1])||0});syncXY(true,true);x=self.pointerX-rotationOrigin.x-offsetX;y=rotationOrigin.y-self.pointerY+offsetY;startElementX=self.x;startElementY=self.y=Math.atan2(y,x)*_RAD2DEG$2;}else{startElementY=getPropAsNum(yProp,"px");startElementX=getPropAsNum(xProp,"px");}}if(hasBounds&&edgeTolerance){if(startElementX>maxX){startElementX=maxX+(startElementX-maxX)/edgeTolerance;}else if(startElementX<minX){startElementX=minX-(minX-startElementX)/edgeTolerance;}if(!rotationMode){if(startElementY>maxY){startElementY=maxY+(startElementY-maxY)/edgeTolerance;}else if(startElementY<minY){startElementY=minY-(minY-startElementY)/edgeTolerance;}}}self.startX=startElementX=_round$3(startElementX);self.startY=startElementY=_round$3(startElementY);},isTweening=function isTweening(){return self.tween&&self.tween.isActive();},removePlaceholder=function removePlaceholder(){if(_placeholderDiv.parentNode&&!isTweening()&&!self.isDragging){_placeholderDiv.parentNode.removeChild(_placeholderDiv);}},onPress=function onPress(e,force){var i;if(!enabled||self.isPressed||!e||(e.type==="mousedown"||e.type==="pointerdown")&&!force&&_getTime()-clickTime<30&&_touchEventLookup[self.pointerEvent.type]){isPreventingDefault&&e&&enabled&&_preventDefault(e);return;}interrupted=isTweening();dragged=false;self.pointerEvent=e;if(_touchEventLookup[e.type]){touchEventTarget=~e.type.indexOf("touch")?e.currentTarget||e.target:ownerDoc;_addListener(touchEventTarget,"touchend",onRelease);_addListener(touchEventTarget,"touchmove",onMove);_addListener(touchEventTarget,"touchcancel",onRelease);_addListener(ownerDoc,"touchstart",_onMultiTouchDocument);}else{touchEventTarget=null;_addListener(ownerDoc,"mousemove",onMove);}touchDragAxis=null;if(!_supportsPointer||!touchEventTarget){_addListener(ownerDoc,"mouseup",onRelease);e&&e.target&&_addListener(e.target,"mouseup",onRelease);}isClicking=isClickable.call(self,e.target)&&vars.dragClickables===false&&!force;if(isClicking){_addListener(e.target,"change",onRelease);_dispatchEvent(self,"pressInit","onPressInit");_dispatchEvent(self,"press","onPress");_setSelectable(triggers,true);isPreventingDefault=false;return;}allowNativeTouchScrolling=!touchEventTarget||allowX===allowY||self.vars.allowNativeTouchScrolling===false||self.vars.allowContextMenu&&e&&(e.ctrlKey||e.which>2)?false:allowX?"y":"x";isPreventingDefault=!allowNativeTouchScrolling&&!self.allowEventDefault;if(isPreventingDefault){_preventDefault(e);_addListener(_win$3,"touchforcechange",_preventDefault);}if(e.changedTouches){e=touch=e.changedTouches[0];touchID=e.identifier;}else if(e.pointerId){touchID=e.pointerId;}else{touch=touchID=null;}_dragCount++;_addToRenderQueue(render);startPointerY=self.pointerY=e.pageY;startPointerX=self.pointerX=e.pageX;_dispatchEvent(self,"pressInit","onPressInit");if(allowNativeTouchScrolling||self.autoScroll){_recordMaxScrolls(target.parentNode);}if(target.parentNode&&self.autoScroll&&!scrollProxy&&!rotationMode&&target.parentNode._gsMaxScrollX&&!_placeholderDiv.parentNode&&!target.getBBox){_placeholderDiv.style.width=target.parentNode.scrollWidth+"px";target.parentNode.appendChild(_placeholderDiv);}recordStartPositions();self.tween&&self.tween.kill();self.isThrowing=false;gsap$2.killTweensOf(scrollProxy||target,killProps,true);scrollProxy&&gsap$2.killTweensOf(target,{scrollTo:1},true);self.tween=self.lockedAxis=null;if(vars.zIndexBoost||!rotationMode&&!scrollProxy&&vars.zIndexBoost!==false){target.style.zIndex=Draggable.zIndex++;}self.isPressed=true;hasDragCallback=!!(vars.onDrag||self._listeners.drag);hasMoveCallback=!!(vars.onMove||self._listeners.move);if(vars.cursor!==false||vars.activeCursor){i=triggers.length;while(--i>-1){gsap$2.set(triggers[i],{cursor:vars.activeCursor||vars.cursor||(_defaultCursor==="grab"?"grabbing":_defaultCursor)});}}_dispatchEvent(self,"press","onPress");},onMove=function onMove(e){var originalEvent=e,touches,pointerX,pointerY,i,dx,dy;if(!enabled||_isMultiTouching||!self.isPressed||!e){isPreventingDefault&&e&&enabled&&_preventDefault(e);return;}self.pointerEvent=e;touches=e.changedTouches;if(touches){e=touches[0];if(e!==touch&&e.identifier!==touchID){i=touches.length;while(--i>-1&&(e=touches[i]).identifier!==touchID&&e.target!==target){}if(i<0){return;}}}else if(e.pointerId&&touchID&&e.pointerId!==touchID){return;}if(touchEventTarget&&allowNativeTouchScrolling&&!touchDragAxis){_point1.x=e.pageX-(isFixed?_getDocScrollLeft$1(ownerDoc):0);_point1.y=e.pageY-(isFixed?_getDocScrollTop$1(ownerDoc):0);matrix&&matrix.apply(_point1,_point1);pointerX=_point1.x;pointerY=_point1.y;dx=Math.abs(pointerX-startPointerX);dy=Math.abs(pointerY-startPointerY);if(dx!==dy&&(dx>minimumMovement||dy>minimumMovement)||_isAndroid&&allowNativeTouchScrolling===touchDragAxis){touchDragAxis=dx>dy&&allowX?"x":"y";if(allowNativeTouchScrolling&&touchDragAxis!==allowNativeTouchScrolling){_addListener(_win$3,"touchforcechange",_preventDefault);}if(self.vars.lockAxisOnTouchScroll!==false&&allowX&&allowY){self.lockedAxis=touchDragAxis==="x"?"y":"x";_isFunction$1(self.vars.onLockAxis)&&self.vars.onLockAxis.call(self,originalEvent);}if(_isAndroid&&allowNativeTouchScrolling===touchDragAxis){onRelease(originalEvent);return;}}}if(!self.allowEventDefault&&(!allowNativeTouchScrolling||touchDragAxis&&allowNativeTouchScrolling!==touchDragAxis)&&originalEvent.cancelable!==false){_preventDefault(originalEvent);isPreventingDefault=true;}else if(isPreventingDefault){isPreventingDefault=false;}if(self.autoScroll){checkAutoScrollBounds=true;}setPointerPosition(e.pageX,e.pageY,hasMoveCallback);},setPointerPosition=function setPointerPosition(pointerX,pointerY,invokeOnMove){var dragTolerance=1-self.dragResistance,edgeTolerance=1-self.edgeResistance,prevPointerX=self.pointerX,prevPointerY=self.pointerY,prevStartElementY=startElementY,prevX=self.x,prevY=self.y,prevEndX=self.endX,prevEndY=self.endY,prevEndRotation=self.endRotation,prevDirty=dirty,xChange,yChange,x,y,dif,temp;self.pointerX=pointerX;self.pointerY=pointerY;if(isFixed){pointerX-=_getDocScrollLeft$1(ownerDoc);pointerY-=_getDocScrollTop$1(ownerDoc);}if(rotationMode){y=Math.atan2(rotationOrigin.y-pointerY,pointerX-rotationOrigin.x)*_RAD2DEG$2;dif=self.y-y;if(dif>180){startElementY-=360;self.y=y;}else if(dif<-180){startElementY+=360;self.y=y;}if(self.x!==startElementX||Math.abs(startElementY-y)>minimumMovement){self.y=y;x=startElementX+(startElementY-y)*dragTolerance;}else{x=startElementX;}}else{if(matrix){temp=pointerX*matrix.a+pointerY*matrix.c+matrix.e;pointerY=pointerX*matrix.b+pointerY*matrix.d+matrix.f;pointerX=temp;}yChange=pointerY-startPointerY;xChange=pointerX-startPointerX;if(yChange<minimumMovement&&yChange>-minimumMovement){yChange=0;}if(xChange<minimumMovement&&xChange>-minimumMovement){xChange=0;}if((self.lockAxis||self.lockedAxis)&&(xChange||yChange)){temp=self.lockedAxis;if(!temp){self.lockedAxis=temp=allowX&&Math.abs(xChange)>Math.abs(yChange)?"y":allowY?"x":null;if(temp&&_isFunction$1(self.vars.onLockAxis)){self.vars.onLockAxis.call(self,self.pointerEvent);}}if(temp==="y"){yChange=0;}else if(temp==="x"){xChange=0;}}x=_round$3(startElementX+xChange*dragTolerance);y=_round$3(startElementY+yChange*dragTolerance);}if((snapX||snapY||snapXY)&&(self.x!==x||self.y!==y&&!rotationMode)){if(snapXY){_temp1.x=x;_temp1.y=y;temp=snapXY(_temp1);x=_round$3(temp.x);y=_round$3(temp.y);}if(snapX){x=_round$3(snapX(x));}if(snapY){y=_round$3(snapY(y));}}if(hasBounds){if(x>maxX){x=maxX+Math.round((x-maxX)*edgeTolerance);}else if(x<minX){x=minX+Math.round((x-minX)*edgeTolerance);}if(!rotationMode){if(y>maxY){y=Math.round(maxY+(y-maxY)*edgeTolerance);}else if(y<minY){y=Math.round(minY+(y-minY)*edgeTolerance);}}}if(self.x!==x||self.y!==y&&!rotationMode){if(rotationMode){self.endRotation=self.x=self.endX=x;dirty=true;}else{if(allowY){self.y=self.endY=y;dirty=true;}if(allowX){self.x=self.endX=x;dirty=true;}}if(!invokeOnMove||_dispatchEvent(self,"move","onMove")!==false){if(!self.isDragging&&self.isPressed){self.isDragging=dragged=true;_dispatchEvent(self,"dragstart","onDragStart");}}else{self.pointerX=prevPointerX;self.pointerY=prevPointerY;startElementY=prevStartElementY;self.x=prevX;self.y=prevY;self.endX=prevEndX;self.endY=prevEndY;self.endRotation=prevEndRotation;dirty=prevDirty;}}},onRelease=function onRelease(e,force){if(!enabled||!self.isPressed||e&&touchID!=null&&!force&&(e.pointerId&&e.pointerId!==touchID&&e.target!==target||e.changedTouches&&!_hasTouchID(e.changedTouches,touchID))){isPreventingDefault&&e&&enabled&&_preventDefault(e);return;}self.isPressed=false;var originalEvent=e,wasDragging=self.isDragging,isContextMenuRelease=self.vars.allowContextMenu&&e&&(e.ctrlKey||e.which>2),placeholderDelayedCall=gsap$2.delayedCall(0.001,removePlaceholder),touches,i,syntheticEvent,eventTarget,syntheticClick;if(touchEventTarget){_removeListener(touchEventTarget,"touchend",onRelease);_removeListener(touchEventTarget,"touchmove",onMove);_removeListener(touchEventTarget,"touchcancel",onRelease);_removeListener(ownerDoc,"touchstart",_onMultiTouchDocument);}else{_removeListener(ownerDoc,"mousemove",onMove);}_removeListener(_win$3,"touchforcechange",_preventDefault);if(!_supportsPointer||!touchEventTarget){_removeListener(ownerDoc,"mouseup",onRelease);e&&e.target&&_removeListener(e.target,"mouseup",onRelease);}dirty=false;if(wasDragging){dragEndTime=_lastDragTime=_getTime();self.isDragging=false;}_removeFromRenderQueue(render);if(isClicking&&!isContextMenuRelease){if(e){_removeListener(e.target,"change",onRelease);self.pointerEvent=originalEvent;}_setSelectable(triggers,false);_dispatchEvent(self,"release","onRelease");_dispatchEvent(self,"click","onClick");isClicking=false;return;}i=triggers.length;while(--i>-1){_setStyle(triggers[i],"cursor",vars.cursor||(vars.cursor!==false?_defaultCursor:null));}_dragCount--;if(e){touches=e.changedTouches;if(touches){e=touches[0];if(e!==touch&&e.identifier!==touchID){i=touches.length;while(--i>-1&&(e=touches[i]).identifier!==touchID&&e.target!==target){}if(i<0&&!force){return;}}}self.pointerEvent=originalEvent;self.pointerX=e.pageX;self.pointerY=e.pageY;}if(isContextMenuRelease&&originalEvent){_preventDefault(originalEvent);isPreventingDefault=true;_dispatchEvent(self,"release","onRelease");}else if(originalEvent&&!wasDragging){isPreventingDefault=false;if(interrupted&&(vars.snap||vars.bounds)){animate(vars.inertia||vars.throwProps);}_dispatchEvent(self,"release","onRelease");if((!_isAndroid||originalEvent.type!=="touchmove")&&originalEvent.type.indexOf("cancel")===-1){_dispatchEvent(self,"click","onClick");if(_getTime()-clickTime<300){_dispatchEvent(self,"doubleclick","onDoubleClick");}eventTarget=originalEvent.target||target;clickTime=_getTime();syntheticClick=function syntheticClick(){if(clickTime!==clickDispatch&&self.enabled()&&!self.isPressed&&!originalEvent.defaultPrevented){if(eventTarget.click){eventTarget.click();}else if(ownerDoc.createEvent){syntheticEvent=ownerDoc.createEvent("MouseEvents");syntheticEvent.initMouseEvent("click",true,true,_win$3,1,self.pointerEvent.screenX,self.pointerEvent.screenY,self.pointerX,self.pointerY,false,false,false,false,0,null);eventTarget.dispatchEvent(syntheticEvent);}}};if(!_isAndroid&&!originalEvent.defaultPrevented){gsap$2.delayedCall(0.05,syntheticClick);}}}else{animate(vars.inertia||vars.throwProps);if(!self.allowEventDefault&&originalEvent&&(vars.dragClickables!==false||!isClickable.call(self,originalEvent.target))&&wasDragging&&(!allowNativeTouchScrolling||touchDragAxis&&allowNativeTouchScrolling===touchDragAxis)&&originalEvent.cancelable!==false){isPreventingDefault=true;_preventDefault(originalEvent);}else{isPreventingDefault=false;}_dispatchEvent(self,"release","onRelease");}isTweening()&&placeholderDelayedCall.duration(self.tween.duration());wasDragging&&_dispatchEvent(self,"dragend","onDragEnd");return true;},updateScroll=function updateScroll(e){if(e&&self.isDragging&&!scrollProxy){var parent=e.target||target.parentNode,deltaX=parent.scrollLeft-parent._gsScrollX,deltaY=parent.scrollTop-parent._gsScrollY;if(deltaX||deltaY){if(matrix){startPointerX-=deltaX*matrix.a+deltaY*matrix.c;startPointerY-=deltaY*matrix.d+deltaX*matrix.b;}else{startPointerX-=deltaX;startPointerY-=deltaY;}parent._gsScrollX+=deltaX;parent._gsScrollY+=deltaY;setPointerPosition(self.pointerX,self.pointerY);}}},onClick=function onClick(e){var time=_getTime(),recentlyClicked=time-clickTime<100,recentlyDragged=time-dragEndTime<50,alreadyDispatched=recentlyClicked&&clickDispatch===clickTime,defaultPrevented=self.pointerEvent&&self.pointerEvent.defaultPrevented,alreadyDispatchedTrusted=recentlyClicked&&trustedClickDispatch===clickTime,trusted=e.isTrusted||e.isTrusted==null&&recentlyClicked&&alreadyDispatched;if((alreadyDispatched||recentlyDragged&&self.vars.suppressClickOnDrag!==false)&&e.stopImmediatePropagation){e.stopImmediatePropagation();}if(recentlyClicked&&!(self.pointerEvent&&self.pointerEvent.defaultPrevented)&&(!alreadyDispatched||trusted&&!alreadyDispatchedTrusted)){if(trusted&&alreadyDispatched){trustedClickDispatch=clickTime;}clickDispatch=clickTime;return;}if(self.isPressed||recentlyDragged||recentlyClicked){if(!trusted||!e.detail||!recentlyClicked||defaultPrevented){_preventDefault(e);}}if(!recentlyClicked&&!recentlyDragged&&!dragged){e&&e.target&&(self.pointerEvent=e);_dispatchEvent(self,"click","onClick");}},localizePoint=function localizePoint(p){return matrix?{x:p.x*matrix.a+p.y*matrix.c+matrix.e,y:p.x*matrix.b+p.y*matrix.d+matrix.f}:{x:p.x,y:p.y};};old=Draggable.get(target);old&&old.kill();_this2.startDrag=function(event,align){var r1,r2,p1,p2;onPress(event||self.pointerEvent,true);if(align&&!self.hitTest(event||self.pointerEvent)){r1=_parseRect(event||self.pointerEvent);r2=_parseRect(target);p1=localizePoint({x:r1.left+r1.width/2,y:r1.top+r1.height/2});p2=localizePoint({x:r2.left+r2.width/2,y:r2.top+r2.height/2});startPointerX-=p1.x-p2.x;startPointerY-=p1.y-p2.y;}if(!self.isDragging){self.isDragging=dragged=true;_dispatchEvent(self,"dragstart","onDragStart");}};_this2.drag=onMove;_this2.endDrag=function(e){return onRelease(e||self.pointerEvent,true);};_this2.timeSinceDrag=function(){return self.isDragging?0:(_getTime()-dragEndTime)/1000;};_this2.timeSinceClick=function(){return(_getTime()-clickTime)/1000;};_this2.hitTest=function(target,threshold){return Draggable.hitTest(self.target,target,threshold);};_this2.getDirection=function(from,diagonalThreshold){var mode=from==="velocity"&&InertiaPlugin?from:_isObject$1(from)&&!rotationMode?"element":"start",xChange,yChange,ratio,direction,r1,r2;if(mode==="element"){r1=_parseRect(self.target);r2=_parseRect(from);}xChange=mode==="start"?self.x-startElementX:mode==="velocity"?InertiaPlugin.getVelocity(target,xProp):r1.left+r1.width/2-(r2.left+r2.width/2);if(rotationMode){return xChange<0?"counter-clockwise":"clockwise";}else{diagonalThreshold=diagonalThreshold||2;yChange=mode==="start"?self.y-startElementY:mode==="velocity"?InertiaPlugin.getVelocity(target,yProp):r1.top+r1.height/2-(r2.top+r2.height/2);ratio=Math.abs(xChange/yChange);direction=ratio<1/diagonalThreshold?"":xChange<0?"left":"right";if(ratio<diagonalThreshold){if(direction!==""){direction+="-";}direction+=yChange<0?"up":"down";}}return direction;};_this2.applyBounds=function(newBounds,sticky){var x,y,forceZeroVelocity,e,parent,isRoot;if(newBounds&&vars.bounds!==newBounds){vars.bounds=newBounds;return self.update(true,sticky);}syncXY(true);calculateBounds();if(hasBounds&&!isTweening()){x=self.x;y=self.y;if(x>maxX){x=maxX;}else if(x<minX){x=minX;}if(y>maxY){y=maxY;}else if(y<minY){y=minY;}if(self.x!==x||self.y!==y){forceZeroVelocity=true;self.x=self.endX=x;if(rotationMode){self.endRotation=x;}else{self.y=self.endY=y;}dirty=true;render(true);if(self.autoScroll&&!self.isDragging){_recordMaxScrolls(target.parentNode);e=target;_windowProxy.scrollTop=_win$3.pageYOffset!=null?_win$3.pageYOffset:ownerDoc.documentElement.scrollTop!=null?ownerDoc.documentElement.scrollTop:ownerDoc.body.scrollTop;_windowProxy.scrollLeft=_win$3.pageXOffset!=null?_win$3.pageXOffset:ownerDoc.documentElement.scrollLeft!=null?ownerDoc.documentElement.scrollLeft:ownerDoc.body.scrollLeft;while(e&&!isRoot){isRoot=_isRoot(e.parentNode);parent=isRoot?_windowProxy:e.parentNode;if(allowY&&parent.scrollTop>parent._gsMaxScrollY){parent.scrollTop=parent._gsMaxScrollY;}if(allowX&&parent.scrollLeft>parent._gsMaxScrollX){parent.scrollLeft=parent._gsMaxScrollX;}e=parent;}}}if(self.isThrowing&&(forceZeroVelocity||self.endX>maxX||self.endX<minX||self.endY>maxY||self.endY<minY)){animate(vars.inertia||vars.throwProps,forceZeroVelocity);}}return self;};_this2.update=function(applyBounds,sticky,ignoreExternalChanges){if(sticky&&self.isPressed){var m=getGlobalMatrix(target),p=innerMatrix.apply({x:self.x-startElementX,y:self.y-startElementY}),m2=getGlobalMatrix(target.parentNode,true);m2.apply({x:m.e-p.x,y:m.f-p.y},p);self.x-=p.x-m2.e;self.y-=p.y-m2.f;render(true);recordStartPositions();}var x=self.x,y=self.y;updateMatrix(!sticky);if(applyBounds){self.applyBounds();}else{dirty&&ignoreExternalChanges&&render(true);syncXY(true);}if(sticky){setPointerPosition(self.pointerX,self.pointerY);dirty&&render(true);}if(self.isPressed&&!sticky&&(allowX&&Math.abs(x-self.x)>0.01||allowY&&Math.abs(y-self.y)>0.01&&!rotationMode)){recordStartPositions();}if(self.autoScroll){_recordMaxScrolls(target.parentNode,self.isDragging);checkAutoScrollBounds=self.isDragging;render(true);_removeScrollListener(target,updateScroll);_addScrollListener(target,updateScroll);}return self;};_this2.enable=function(type){var setVars={lazy:true},id,i,trigger;if(vars.cursor!==false){setVars.cursor=vars.cursor||_defaultCursor;}if(gsap$2.utils.checkPrefix("touchCallout")){setVars.touchCallout="none";}if(type!=="soft"){_setTouchActionForAllDescendants(triggers,allowX===allowY?"none":vars.allowNativeTouchScrolling&&target.scrollHeight===target.clientHeight===(target.scrollWidth===target.clientHeight)||vars.allowEventDefault?"manipulation":allowX?"pan-y":"pan-x");i=triggers.length;while(--i>-1){trigger=triggers[i];_supportsPointer||_addListener(trigger,"mousedown",onPress);_addListener(trigger,"touchstart",onPress);_addListener(trigger,"click",onClick,true);gsap$2.set(trigger,setVars);if(trigger.getBBox&&trigger.ownerSVGElement&&allowX!==allowY){gsap$2.set(trigger.ownerSVGElement,{touchAction:vars.allowNativeTouchScrolling||vars.allowEventDefault?"manipulation":allowX?"pan-y":"pan-x"});}vars.allowContextMenu||_addListener(trigger,"contextmenu",onContextMenu);}_setSelectable(triggers,false);}_addScrollListener(target,updateScroll);enabled=true;if(InertiaPlugin&&type!=="soft"){InertiaPlugin.track(scrollProxy||target,xyMode?"x,y":rotationMode?"rotation":"top,left");}target._gsDragID=id="d"+_lookupCount++;_lookup[id]=self;if(scrollProxy){scrollProxy.enable();scrollProxy.element._gsDragID=id;}(vars.bounds||rotationMode)&&recordStartPositions();vars.bounds&&self.applyBounds();return self;};_this2.disable=function(type){var dragging=self.isDragging,i=triggers.length,trigger;while(--i>-1){_setStyle(triggers[i],"cursor",null);}if(type!=="soft"){_setTouchActionForAllDescendants(triggers,null);i=triggers.length;while(--i>-1){trigger=triggers[i];_setStyle(trigger,"touchCallout",null);_removeListener(trigger,"mousedown",onPress);_removeListener(trigger,"touchstart",onPress);_removeListener(trigger,"click",onClick,true);_removeListener(trigger,"contextmenu",onContextMenu);}_setSelectable(triggers,true);if(touchEventTarget){_removeListener(touchEventTarget,"touchcancel",onRelease);_removeListener(touchEventTarget,"touchend",onRelease);_removeListener(touchEventTarget,"touchmove",onMove);}_removeListener(ownerDoc,"mouseup",onRelease);_removeListener(ownerDoc,"mousemove",onMove);}_removeScrollListener(target,updateScroll);enabled=false;InertiaPlugin&&type!=="soft"&&InertiaPlugin.untrack(scrollProxy||target,xyMode?"x,y":rotationMode?"rotation":"top,left");scrollProxy&&scrollProxy.disable();_removeFromRenderQueue(render);self.isDragging=self.isPressed=isClicking=false;dragging&&_dispatchEvent(self,"dragend","onDragEnd");return self;};_this2.enabled=function(value,type){return arguments.length?value?self.enable(type):self.disable(type):enabled;};_this2.kill=function(){self.isThrowing=false;self.tween&&self.tween.kill();self.disable();gsap$2.set(triggers,{clearProps:"userSelect"});delete _lookup[target._gsDragID];return self;};_this2.revert=function(){this.kill();this.styles&&this.styles.revert();};if(~type.indexOf("scroll")){scrollProxy=_this2.scrollProxy=new ScrollProxy(target,_extend({onKill:function onKill(){self.isPressed&&onRelease(null);}},vars));target.style.overflowY=allowY&&!_isTouchDevice?"auto":"hidden";target.style.overflowX=allowX&&!_isTouchDevice?"auto":"hidden";target=scrollProxy.content;}if(rotationMode){killProps.rotation=1;}else{if(allowX){killProps[xProp]=1;}if(allowY){killProps[yProp]=1;}}gsCache.force3D="force3D"in vars?vars.force3D:true;_context$1(_assertThisInitialized(_this2));_this2.enable();return _this2;}Draggable.register=function register(core){gsap$2=core;_initCore$2();};Draggable.create=function create(targets,vars){_coreInitted$2||_initCore$2(true);return _toArray(targets).map(function(target){return new Draggable(target,vars);});};Draggable.get=function get(target){return _lookup[(_toArray(target)[0]||{})._gsDragID];};Draggable.timeSinceDrag=function timeSinceDrag(){return(_getTime()-_lastDragTime)/1000;};Draggable.hitTest=function hitTest(obj1,obj2,threshold){if(obj1===obj2){return false;}var r1=_parseRect(obj1),r2=_parseRect(obj2),top=r1.top,left=r1.left,right=r1.right,bottom=r1.bottom,width=r1.width,height=r1.height,isOutside=r2.left>right||r2.right<left||r2.top>bottom||r2.bottom<top,overlap,area,isRatio;if(isOutside||!threshold){return!isOutside;}isRatio=(threshold+"").indexOf("%")!==-1;threshold=parseFloat(threshold)||0;overlap={left:Math.max(left,r2.left),top:Math.max(top,r2.top)};overlap.width=Math.min(right,r2.right)-overlap.left;overlap.height=Math.min(bottom,r2.bottom)-overlap.top;if(overlap.width<0||overlap.height<0){return false;}if(isRatio){threshold*=0.01;area=overlap.width*overlap.height;return area>=width*height*threshold||area>=r2.width*r2.height*threshold;}return overlap.width>threshold&&overlap.height>threshold;};return Draggable;}(EventDispatcher);_setDefaults$1(Draggable.prototype,{pointerX:0,pointerY:0,startX:0,startY:0,deltaX:0,deltaY:0,isDragging:false,isPressed:false});Draggable.zIndex=1000;Draggable.version="3.11.5";_getGSAP$1()&&gsap$2.registerPlugin(Draggable);/*!
   * CSSRulePlugin 3.11.5
   * https://greensock.com
   *
   * @license Copyright 2008-2023, GreenSock. All rights reserved.
   * Subject to the terms at https://greensock.com/standard-license or for
   * Club GreenSock members, the agreement issued with that membership.
   * @author: Jack Doyle, jack@greensock.com
  */var gsap$3,_coreInitted$3,_doc$4,CSSPlugin$1,_windowExists$3=function _windowExists(){return typeof window!=="undefined";},_getGSAP$2=function _getGSAP(){return gsap$3||_windowExists$3()&&(gsap$3=window.gsap)&&gsap$3.registerPlugin&&gsap$3;},_checkRegister=function _checkRegister(){if(!_coreInitted$3){_initCore$3();if(!CSSPlugin$1){console.warn("Please gsap.registerPlugin(CSSPlugin, CSSRulePlugin)");}}return _coreInitted$3;},_initCore$3=function _initCore(core){gsap$3=core||_getGSAP$2();if(_windowExists$3()){_doc$4=document;}if(gsap$3){CSSPlugin$1=gsap$3.plugins.css;if(CSSPlugin$1){_coreInitted$3=1;}}};var CSSRulePlugin={version:"3.11.5",name:"cssRule",init:function init(target,value,tween,index,targets){if(!_checkRegister()||typeof target.cssText==="undefined"){return false;}var div=target._gsProxy=target._gsProxy||_doc$4.createElement("div");this.ss=target;this.style=div.style;div.style.cssText=target.cssText;CSSPlugin$1.prototype.init.call(this,div,value,tween,index,targets);},render:function render(ratio,data){var pt=data._pt,style=data.style,ss=data.ss,i;while(pt){pt.r(ratio,pt.d);pt=pt._next;}i=style.length;while(--i>-1){ss[style[i]]=style[style[i]];}},getRule:function getRule(selector){_checkRegister();var ruleProp=_doc$4.all?"rules":"cssRules",styleSheets=_doc$4.styleSheets,i=styleSheets.length,pseudo=selector.charAt(0)===":",j,curSS,cs,a;selector=(pseudo?"":",")+selector.split("::").join(":").toLowerCase()+",";if(pseudo){a=[];}while(i--){try{curSS=styleSheets[i][ruleProp];if(!curSS){continue;}j=curSS.length;}catch(e){console.warn(e);continue;}while(--j>-1){cs=curSS[j];if(cs.selectorText&&(","+cs.selectorText.split("::").join(":").toLowerCase()+",").indexOf(selector)!==-1){if(pseudo){a.push(cs.style);}else{return cs.style;}}}}return a;},register:_initCore$3};_getGSAP$2()&&gsap$3.registerPlugin(CSSRulePlugin);/*!
   * EaselPlugin 3.11.5
   * https://greensock.com
   *
   * @license Copyright 2008-2023, GreenSock. All rights reserved.
   * Subject to the terms at https://greensock.com/standard-license or for
   * Club GreenSock members, the agreement issued with that membership.
   * @author: Jack Doyle, jack@greensock.com
  */var gsap$4,_coreInitted$4,_win$4,_createJS,_ColorFilter,_ColorMatrixFilter,_colorProps="redMultiplier,greenMultiplier,blueMultiplier,alphaMultiplier,redOffset,greenOffset,blueOffset,alphaOffset".split(","),_windowExists$4=function _windowExists(){return typeof window!=="undefined";},_getGSAP$3=function _getGSAP(){return gsap$4||_windowExists$4()&&(gsap$4=window.gsap)&&gsap$4.registerPlugin&&gsap$4;},_getCreateJS=function _getCreateJS(){return _createJS||_win$4&&_win$4.createjs||_win$4||{};},_warn$1=function _warn(message){return console.warn(message);},_cache=function _cache(target){var b=target.getBounds&&target.getBounds();if(!b){b=target.nominalBounds||{x:0,y:0,width:100,height:100};target.setBounds&&target.setBounds(b.x,b.y,b.width,b.height);}target.cache&&target.cache(b.x,b.y,b.width,b.height);_warn$1("EaselPlugin: for filters to display in EaselJS, you must call the object's cache() method first. GSAP attempted to use the target's getBounds() for the cache but that may not be completely accurate. "+target);},_parseColorFilter=function _parseColorFilter(target,v,plugin){if(!_ColorFilter){_ColorFilter=_getCreateJS().ColorFilter;if(!_ColorFilter){_warn$1("EaselPlugin error: The EaselJS ColorFilter JavaScript file wasn't loaded.");}}var filters=target.filters||[],i=filters.length,c,s,e,a,p,pt;while(i--){if(filters[i]instanceof _ColorFilter){s=filters[i];break;}}if(!s){s=new _ColorFilter();filters.push(s);target.filters=filters;}e=s.clone();if(v.tint!=null){c=gsap$4.utils.splitColor(v.tint);a=v.tintAmount!=null?+v.tintAmount:1;e.redOffset=+c[0]*a;e.greenOffset=+c[1]*a;e.blueOffset=+c[2]*a;e.redMultiplier=e.greenMultiplier=e.blueMultiplier=1-a;}else{for(p in v){if(p!=="exposure")if(p!=="brightness"){e[p]=+v[p];}}}if(v.exposure!=null){e.redOffset=e.greenOffset=e.blueOffset=255*(+v.exposure-1);e.redMultiplier=e.greenMultiplier=e.blueMultiplier=1;}else if(v.brightness!=null){a=+v.brightness-1;e.redOffset=e.greenOffset=e.blueOffset=a>0?a*255:0;e.redMultiplier=e.greenMultiplier=e.blueMultiplier=1-Math.abs(a);}i=8;while(i--){p=_colorProps[i];if(s[p]!==e[p]){pt=plugin.add(s,p,s[p],e[p],0,0,0,0,0,1);if(pt){pt.op="easel_colorFilter";}}}plugin._props.push("easel_colorFilter");if(!target.cacheID){_cache(target);}},_idMatrix=[1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0],_lumR=0.212671,_lumG=0.715160,_lumB=0.072169,_applyMatrix=function _applyMatrix(m,m2){if(!(m instanceof Array)||!(m2 instanceof Array)){return m2;}var temp=[],i=0,z=0,y,x;for(y=0;y<4;y++){for(x=0;x<5;x++){z=x===4?m[i+4]:0;temp[i+x]=m[i]*m2[x]+m[i+1]*m2[x+5]+m[i+2]*m2[x+10]+m[i+3]*m2[x+15]+z;}i+=5;}return temp;},_setSaturation=function _setSaturation(m,n){if(isNaN(n)){return m;}var inv=1-n,r=inv*_lumR,g=inv*_lumG,b=inv*_lumB;return _applyMatrix([r+n,g,b,0,0,r,g+n,b,0,0,r,g,b+n,0,0,0,0,0,1,0],m);},_colorize=function _colorize(m,color,amount){if(isNaN(amount)){amount=1;}var c=gsap$4.utils.splitColor(color),r=c[0]/255,g=c[1]/255,b=c[2]/255,inv=1-amount;return _applyMatrix([inv+amount*r*_lumR,amount*r*_lumG,amount*r*_lumB,0,0,amount*g*_lumR,inv+amount*g*_lumG,amount*g*_lumB,0,0,amount*b*_lumR,amount*b*_lumG,inv+amount*b*_lumB,0,0,0,0,0,1,0],m);},_setHue=function _setHue(m,n){if(isNaN(n)){return m;}n*=Math.PI/180;var c=Math.cos(n),s=Math.sin(n);return _applyMatrix([_lumR+c*(1-_lumR)+s*-_lumR,_lumG+c*-_lumG+s*-_lumG,_lumB+c*-_lumB+s*(1-_lumB),0,0,_lumR+c*-_lumR+s*0.143,_lumG+c*(1-_lumG)+s*0.14,_lumB+c*-_lumB+s*-0.283,0,0,_lumR+c*-_lumR+s*-(1-_lumR),_lumG+c*-_lumG+s*_lumG,_lumB+c*(1-_lumB)+s*_lumB,0,0,0,0,0,1,0,0,0,0,0,1],m);},_setContrast=function _setContrast(m,n){if(isNaN(n)){return m;}n+=0.01;return _applyMatrix([n,0,0,0,128*(1-n),0,n,0,0,128*(1-n),0,0,n,0,128*(1-n),0,0,0,1,0],m);},_parseColorMatrixFilter=function _parseColorMatrixFilter(target,v,plugin){if(!_ColorMatrixFilter){_ColorMatrixFilter=_getCreateJS().ColorMatrixFilter;if(!_ColorMatrixFilter){_warn$1("EaselPlugin: The EaselJS ColorMatrixFilter JavaScript file wasn't loaded.");}}var filters=target.filters||[],i=filters.length,matrix,startMatrix,s,pg;while(--i>-1){if(filters[i]instanceof _ColorMatrixFilter){s=filters[i];break;}}if(!s){s=new _ColorMatrixFilter(_idMatrix.slice());filters.push(s);target.filters=filters;}startMatrix=s.matrix;matrix=_idMatrix.slice();if(v.colorize!=null){matrix=_colorize(matrix,v.colorize,Number(v.colorizeAmount));}if(v.contrast!=null){matrix=_setContrast(matrix,Number(v.contrast));}if(v.hue!=null){matrix=_setHue(matrix,Number(v.hue));}if(v.saturation!=null){matrix=_setSaturation(matrix,Number(v.saturation));}i=matrix.length;while(--i>-1){if(matrix[i]!==startMatrix[i]){pg=plugin.add(startMatrix,i,startMatrix[i],matrix[i],0,0,0,0,0,1);if(pg){pg.op="easel_colorMatrixFilter";}}}plugin._props.push("easel_colorMatrixFilter");if(!target.cacheID){_cache();}plugin._matrix=startMatrix;},_initCore$4=function _initCore(core){gsap$4=core||_getGSAP$3();if(_windowExists$4()){_win$4=window;}if(gsap$4){_coreInitted$4=1;}};var EaselPlugin={version:"3.11.5",name:"easel",init:function init(target,value,tween,index,targets){if(!_coreInitted$4){_initCore$4();if(!gsap$4){_warn$1("Please gsap.registerPlugin(EaselPlugin)");}}this.target=target;var p,pt,tint,colorMatrix,end,labels,i;for(p in value){end=value[p];if(p==="colorFilter"||p==="tint"||p==="tintAmount"||p==="exposure"||p==="brightness"){if(!tint){_parseColorFilter(target,value.colorFilter||value,this);tint=true;}}else if(p==="saturation"||p==="contrast"||p==="hue"||p==="colorize"||p==="colorizeAmount"){if(!colorMatrix){_parseColorMatrixFilter(target,value.colorMatrixFilter||value,this);colorMatrix=true;}}else if(p==="frame"){if(typeof end==="string"&&end.charAt(1)!=="="&&(labels=target.labels)){for(i=0;i<labels.length;i++){if(labels[i].label===end){end=labels[i].position;}}}pt=this.add(target,"gotoAndStop",target.currentFrame,end,index,targets,Math.round,0,0,1);if(pt){pt.op=p;}}else if(target[p]!=null){this.add(target,p,"get",end);}}},render:function render(ratio,data){var pt=data._pt;while(pt){pt.r(ratio,pt.d);pt=pt._next;}if(data.target.cacheID){data.target.updateCache();}},register:_initCore$4};EaselPlugin.registerCreateJS=function(createjs){_createJS=createjs;};_getGSAP$3()&&gsap$4.registerPlugin(EaselPlugin);/*!
   * EasePack 3.11.5
   * https://greensock.com
   *
   * @license Copyright 2008-2023, GreenSock. All rights reserved.
   * Subject to the terms at https://greensock.com/standard-license or for
   * Club GreenSock members, the agreement issued with that membership.
   * @author: Jack Doyle, jack@greensock.com
  */var gsap$5,_registerEase,_getGSAP$4=function _getGSAP(){return gsap$5||typeof window!=="undefined"&&(gsap$5=window.gsap)&&gsap$5.registerPlugin&&gsap$5;},_boolean=function _boolean(value,defaultValue){return!!(typeof value==="undefined"?defaultValue:value&&!~(value+"").indexOf("false"));},_initCore$5=function _initCore(core){gsap$5=core||_getGSAP$4();if(gsap$5){_registerEase=gsap$5.registerEase;var eases=gsap$5.parseEase(),createConfig=function createConfig(ease){return function(ratio){var y=0.5+ratio/2;ease.config=function(p){return ease(2*(1-p)*p*y+p*p);};};},p;for(p in eases){if(!eases[p].config){createConfig(eases[p]);}}_registerEase("slow",SlowMo);_registerEase("expoScale",ExpoScaleEase);_registerEase("rough",RoughEase);for(p in EasePack){p!=="version"&&gsap$5.core.globals(p,EasePack[p]);}}},_createSlowMo=function _createSlowMo(linearRatio,power,yoyoMode){linearRatio=Math.min(1,linearRatio||0.7);var pow=linearRatio<1?power||power===0?power:0.7:0,p1=(1-linearRatio)/2,p3=p1+linearRatio,calcEnd=_boolean(yoyoMode);return function(p){var r=p+(0.5-p)*pow;return p<p1?calcEnd?1-(p=1-p/p1)*p:r-(p=1-p/p1)*p*p*p*r:p>p3?calcEnd?p===1?0:1-(p=(p-p3)/p1)*p:r+(p-r)*(p=(p-p3)/p1)*p*p*p:calcEnd?1:r;};},_createExpoScale=function _createExpoScale(start,end,ease){var p1=Math.log(end/start),p2=end-start;ease&&(ease=gsap$5.parseEase(ease));return function(p){return(start*Math.exp(p1*(ease?ease(p):p))-start)/p2;};},EasePoint=function EasePoint(time,value,next){this.t=time;this.v=value;if(next){this.next=next;next.prev=this;this.c=next.v-value;this.gap=next.t-time;}},_createRoughEase=function _createRoughEase(vars){if(_typeof(vars)!=="object"){vars={points:+vars||20};}var taper=vars.taper||"none",a=[],cnt=0,points=(+vars.points||20)|0,i=points,randomize=_boolean(vars.randomize,true),clamp=_boolean(vars.clamp),template=gsap$5?gsap$5.parseEase(vars.template):0,strength=(+vars.strength||1)*0.4,x,y,bump,invX,obj,pnt,recent;while(--i>-1){x=randomize?Math.random():1/points*i;y=template?template(x):x;if(taper==="none"){bump=strength;}else if(taper==="out"){invX=1-x;bump=invX*invX*strength;}else if(taper==="in"){bump=x*x*strength;}else if(x<0.5){invX=x*2;bump=invX*invX*0.5*strength;}else{invX=(1-x)*2;bump=invX*invX*0.5*strength;}if(randomize){y+=Math.random()*bump-bump*0.5;}else if(i%2){y+=bump*0.5;}else{y-=bump*0.5;}if(clamp){if(y>1){y=1;}else if(y<0){y=0;}}a[cnt++]={x:x,y:y};}a.sort(function(a,b){return a.x-b.x;});pnt=new EasePoint(1,1,null);i=points;while(i--){obj=a[i];pnt=new EasePoint(obj.x,obj.y,pnt);}recent=new EasePoint(0,0,pnt.t?pnt:pnt.next);return function(p){var pnt=recent;if(p>pnt.t){while(pnt.next&&p>=pnt.t){pnt=pnt.next;}pnt=pnt.prev;}else{while(pnt.prev&&p<=pnt.t){pnt=pnt.prev;}}recent=pnt;return pnt.v+(p-pnt.t)/pnt.gap*pnt.c;};};var SlowMo=_createSlowMo(0.7);SlowMo.ease=SlowMo;SlowMo.config=_createSlowMo;var ExpoScaleEase=_createExpoScale(1,2);ExpoScaleEase.config=_createExpoScale;var RoughEase=_createRoughEase();RoughEase.ease=RoughEase;RoughEase.config=_createRoughEase;var EasePack={SlowMo:SlowMo,RoughEase:RoughEase,ExpoScaleEase:ExpoScaleEase};for(var p in EasePack){EasePack[p].register=_initCore$5;EasePack[p].version="3.11.5";}_getGSAP$4()&&gsap$5.registerPlugin(SlowMo);/*!
   * Flip 3.11.5
   * https://greensock.com
   *
   * @license Copyright 2008-2023, GreenSock. All rights reserved.
   * Subject to the terms at https://greensock.com/standard-license or for
   * Club GreenSock members, the agreement issued with that membership.
   * @author: Jack Doyle, jack@greensock.com
  */var _id=1,_toArray$1,gsap$6,_batch,_batchAction,_body$2,_closestTenth,_getStyleSaver$2,_forEachBatch=function _forEachBatch(batch,name){return batch.actions.forEach(function(a){return a.vars[name]&&a.vars[name](a);});},_batchLookup={},_RAD2DEG$3=180/Math.PI,_DEG2RAD$2=Math.PI/180,_emptyObj={},_dashedNameLookup={},_memoizedRemoveProps={},_listToArray=function _listToArray(list){return typeof list==="string"?list.split(" ").join("").split(","):list;},_callbacks=_listToArray("onStart,onUpdate,onComplete,onReverseComplete,onInterrupt"),_removeProps=_listToArray("transform,transformOrigin,width,height,position,top,left,opacity,zIndex,maxWidth,maxHeight,minWidth,minHeight"),_getEl=function _getEl(target){return _toArray$1(target)[0]||console.warn("Element not found:",target);},_round$4=function _round(value){return Math.round(value*10000)/10000||0;},_toggleClass=function _toggleClass(targets,className,action){return targets.forEach(function(el){return el.classList[action](className);});},_reserved={zIndex:1,kill:1,simple:1,spin:1,clearProps:1,targets:1,toggleClass:1,onComplete:1,onUpdate:1,onInterrupt:1,onStart:1,delay:1,repeat:1,repeatDelay:1,yoyo:1,scale:1,fade:1,absolute:1,props:1,onEnter:1,onLeave:1,custom:1,paused:1,nested:1,prune:1,absoluteOnLeave:1},_fitReserved={zIndex:1,simple:1,clearProps:1,scale:1,absolute:1,fitChild:1,getVars:1,props:1},_camelToDashed=function _camelToDashed(p){return p.replace(/([A-Z])/g,"-$1").toLowerCase();},_copy$1=function _copy(obj,exclude){var result={},p;for(p in obj){exclude[p]||(result[p]=obj[p]);}return result;},_memoizedProps={},_memoizeProps=function _memoizeProps(props){var p=_memoizedProps[props]=_listToArray(props);_memoizedRemoveProps[props]=p.concat(_removeProps);return p;},_getInverseGlobalMatrix=function _getInverseGlobalMatrix(el){var cache=el._gsap||gsap$6.core.getCache(el);if(cache.gmCache===gsap$6.ticker.frame){return cache.gMatrix;}cache.gmCache=gsap$6.ticker.frame;return cache.gMatrix=getGlobalMatrix(el,true,false,true);},_getDOMDepth=function _getDOMDepth(el,invert,level){if(level===void 0){level=0;}var parent=el.parentNode,inc=1000*Math.pow(10,level)*(invert?-1:1),l=invert?-inc*900:0;while(el){l+=inc;el=el.previousSibling;}return parent?l+_getDOMDepth(parent,invert,level+1):l;},_orderByDOMDepth=function _orderByDOMDepth(comps,invert,isElStates){comps.forEach(function(comp){return comp.d=_getDOMDepth(isElStates?comp.element:comp.t,invert);});comps.sort(function(c1,c2){return c1.d-c2.d;});return comps;},_recordInlineStyles=function _recordInlineStyles(elState,props){var style=elState.element.style,a=elState.css=elState.css||[],i=props.length,p,v;while(i--){p=props[i];v=style[p]||style.getPropertyValue(p);a.push(v?p:_dashedNameLookup[p]||(_dashedNameLookup[p]=_camelToDashed(p)),v);}return style;},_applyInlineStyles=function _applyInlineStyles(state){var css=state.css,style=state.element.style,i=0;state.cache.uncache=1;for(;i<css.length;i+=2){css[i+1]?style[css[i]]=css[i+1]:style.removeProperty(css[i]);}if(!css[css.indexOf("transform")+1]&&style.translate){style.removeProperty("translate");style.removeProperty("scale");style.removeProperty("rotate");}},_setFinalStates=function _setFinalStates(comps,onlyTransforms){comps.forEach(function(c){return c.a.cache.uncache=1;});onlyTransforms||comps.finalStates.forEach(_applyInlineStyles);},_absoluteProps="paddingTop,paddingRight,paddingBottom,paddingLeft,gridArea,transition".split(","),_makeAbsolute=function _makeAbsolute(elState,fallbackNode,ignoreBatch){var element=elState.element,width=elState.width,height=elState.height,uncache=elState.uncache,getProp=elState.getProp,style=element.style,i=4,result,displayIsNone,cs;_typeof(fallbackNode)!=="object"&&(fallbackNode=elState);if(_batch&&ignoreBatch!==1){_batch._abs.push({t:element,b:elState,a:elState,sd:0});_batch._final.push(function(){return(elState.cache.uncache=1)&&_applyInlineStyles(elState);});return element;}displayIsNone=getProp("display")==="none";if(!elState.isVisible||displayIsNone){displayIsNone&&(_recordInlineStyles(elState,["display"]).display=fallbackNode.display);elState.matrix=fallbackNode.matrix;elState.width=width=elState.width||fallbackNode.width;elState.height=height=elState.height||fallbackNode.height;}_recordInlineStyles(elState,_absoluteProps);cs=window.getComputedStyle(element);while(i--){style[_absoluteProps[i]]=cs[_absoluteProps[i]];}style.gridArea="1 / 1 / 1 / 1";style.transition="none";style.position="absolute";style.width=width+"px";style.height=height+"px";style.top||(style.top="0px");style.left||(style.left="0px");if(uncache){result=new ElementState(element);}else{result=_copy$1(elState,_emptyObj);result.position="absolute";if(elState.simple){var bounds=element.getBoundingClientRect();result.matrix=new Matrix2D(1,0,0,1,bounds.left+_getDocScrollLeft(),bounds.top+_getDocScrollTop());}else{result.matrix=getGlobalMatrix(element,false,false,true);}}result=_fit(result,elState,true);elState.x=_closestTenth(result.x,0.01);elState.y=_closestTenth(result.y,0.01);return element;},_filterComps=function _filterComps(comps,targets){if(targets!==true){targets=_toArray$1(targets);comps=comps.filter(function(c){if(targets.indexOf((c.sd<0?c.b:c.a).element)!==-1){return true;}else{c.t._gsap.renderTransform(1);if(c.b.isVisible){c.t.style.width=c.b.width+"px";c.t.style.height=c.b.height+"px";}}});}return comps;},_makeCompsAbsolute=function _makeCompsAbsolute(comps){return _orderByDOMDepth(comps,true).forEach(function(c){return(c.a.isVisible||c.b.isVisible)&&_makeAbsolute(c.sd<0?c.b:c.a,c.b,1);});},_findElStateInState=function _findElStateInState(state,other){return other&&state.idLookup[_parseElementState(other).id]||state.elementStates[0];},_parseElementState=function _parseElementState(elOrNode,props,simple,other){return elOrNode instanceof ElementState?elOrNode:elOrNode instanceof FlipState?_findElStateInState(elOrNode,other):new ElementState(typeof elOrNode==="string"?_getEl(elOrNode)||console.warn(elOrNode+" not found"):elOrNode,props,simple);},_recordProps=function _recordProps(elState,props){var getProp=gsap$6.getProperty(elState.element,null,"native"),obj=elState.props={},i=props.length;while(i--){obj[props[i]]=(getProp(props[i])+"").trim();}obj.zIndex&&(obj.zIndex=parseFloat(obj.zIndex)||0);return elState;},_applyProps=function _applyProps(element,props){var style=element.style||element,p;for(p in props){style[p]=props[p];}},_getID=function _getID(el){var id=el.getAttribute("data-flip-id");id||el.setAttribute("data-flip-id",id="auto-"+_id++);return id;},_elementsFromElementStates=function _elementsFromElementStates(elStates){return elStates.map(function(elState){return elState.element;});},_handleCallback=function _handleCallback(callback,elStates,tl){return callback&&elStates.length&&tl.add(callback(_elementsFromElementStates(elStates),tl,new FlipState(elStates,0,true)),0);},_fit=function _fit(fromState,toState,scale,applyProps,fitChild,vars){var element=fromState.element,cache=fromState.cache,parent=fromState.parent,x=fromState.x,y=fromState.y,width=toState.width,height=toState.height,scaleX=toState.scaleX,scaleY=toState.scaleY,rotation=toState.rotation,bounds=toState.bounds,styles=vars&&_getStyleSaver$2&&_getStyleSaver$2(element,"transform"),dimensionState=fromState,_toState$matrix=toState.matrix,e=_toState$matrix.e,f=_toState$matrix.f,deep=fromState.bounds.width!==bounds.width||fromState.bounds.height!==bounds.height||fromState.scaleX!==scaleX||fromState.scaleY!==scaleY||fromState.rotation!==rotation,simple=!deep&&fromState.simple&&toState.simple&&!fitChild,skewX,fromPoint,toPoint,getProp,parentMatrix,matrix,bbox;if(simple||!parent){scaleX=scaleY=1;rotation=skewX=0;}else{parentMatrix=_getInverseGlobalMatrix(parent);matrix=parentMatrix.clone().multiply(toState.ctm?toState.matrix.clone().multiply(toState.ctm):toState.matrix);rotation=_round$4(Math.atan2(matrix.b,matrix.a)*_RAD2DEG$3);skewX=_round$4(Math.atan2(matrix.c,matrix.d)*_RAD2DEG$3+rotation)%360;scaleX=Math.sqrt(Math.pow(matrix.a,2)+Math.pow(matrix.b,2));scaleY=Math.sqrt(Math.pow(matrix.c,2)+Math.pow(matrix.d,2))*Math.cos(skewX*_DEG2RAD$2);if(fitChild){fitChild=_toArray$1(fitChild)[0];getProp=gsap$6.getProperty(fitChild);bbox=fitChild.getBBox&&typeof fitChild.getBBox==="function"&&fitChild.getBBox();dimensionState={scaleX:getProp("scaleX"),scaleY:getProp("scaleY"),width:bbox?bbox.width:Math.ceil(parseFloat(getProp("width","px"))),height:bbox?bbox.height:parseFloat(getProp("height","px"))};}cache.rotation=rotation+"deg";cache.skewX=skewX+"deg";}if(scale){scaleX*=width===dimensionState.width||!dimensionState.width?1:width/dimensionState.width;scaleY*=height===dimensionState.height||!dimensionState.height?1:height/dimensionState.height;cache.scaleX=scaleX;cache.scaleY=scaleY;}else{width=_closestTenth(width*scaleX/dimensionState.scaleX,0);height=_closestTenth(height*scaleY/dimensionState.scaleY,0);element.style.width=width+"px";element.style.height=height+"px";}applyProps&&_applyProps(element,toState.props);if(simple||!parent){x+=e-fromState.matrix.e;y+=f-fromState.matrix.f;}else if(deep||parent!==toState.parent){cache.renderTransform(1,cache);matrix=getGlobalMatrix(fitChild||element,false,false,true);fromPoint=parentMatrix.apply({x:matrix.e,y:matrix.f});toPoint=parentMatrix.apply({x:e,y:f});x+=toPoint.x-fromPoint.x;y+=toPoint.y-fromPoint.y;}else{parentMatrix.e=parentMatrix.f=0;toPoint=parentMatrix.apply({x:e-fromState.matrix.e,y:f-fromState.matrix.f});x+=toPoint.x;y+=toPoint.y;}x=_closestTenth(x,0.02);y=_closestTenth(y,0.02);if(vars&&!(vars instanceof ElementState)){styles&&styles.revert();}else{cache.x=x+"px";cache.y=y+"px";cache.renderTransform(1,cache);}if(vars){vars.x=x;vars.y=y;vars.rotation=rotation;vars.skewX=skewX;if(scale){vars.scaleX=scaleX;vars.scaleY=scaleY;}else{vars.width=width;vars.height=height;}}return vars||cache;},_parseState=function _parseState(targetsOrState,vars){return targetsOrState instanceof FlipState?targetsOrState:new FlipState(targetsOrState,vars);},_getChangingElState=function _getChangingElState(toState,fromState,id){var to1=toState.idLookup[id],to2=toState.alt[id];return to2.isVisible&&(!(fromState.getElementState(to2.element)||to2).isVisible||!to1.isVisible)?to2:to1;},_bodyMetrics=[],_bodyProps="width,height,overflowX,overflowY".split(","),_bodyLocked,_lockBodyScroll=function _lockBodyScroll(lock){if(lock!==_bodyLocked){var s=_body$2.style,w=_body$2.clientWidth===window.outerWidth,h=_body$2.clientHeight===window.outerHeight,i=4;if(lock&&(w||h)){while(i--){_bodyMetrics[i]=s[_bodyProps[i]];}if(w){s.width=_body$2.clientWidth+"px";s.overflowY="hidden";}if(h){s.height=_body$2.clientHeight+"px";s.overflowX="hidden";}_bodyLocked=lock;}else if(_bodyLocked){while(i--){_bodyMetrics[i]?s[_bodyProps[i]]=_bodyMetrics[i]:s.removeProperty(_camelToDashed(_bodyProps[i]));}_bodyLocked=lock;}}},_fromTo=function _fromTo(fromState,toState,vars,relative){fromState instanceof FlipState&&toState instanceof FlipState||console.warn("Not a valid state object.");vars=vars||{};var _vars=vars,clearProps=_vars.clearProps,onEnter=_vars.onEnter,onLeave=_vars.onLeave,absolute=_vars.absolute,absoluteOnLeave=_vars.absoluteOnLeave,custom=_vars.custom,delay=_vars.delay,paused=_vars.paused,repeat=_vars.repeat,repeatDelay=_vars.repeatDelay,yoyo=_vars.yoyo,toggleClass=_vars.toggleClass,nested=_vars.nested,_zIndex=_vars.zIndex,scale=_vars.scale,fade=_vars.fade,stagger=_vars.stagger,spin=_vars.spin,prune=_vars.prune,props=("props"in vars?vars:fromState).props,tweenVars=_copy$1(vars,_reserved),animation=gsap$6.timeline({delay:delay,paused:paused,repeat:repeat,repeatDelay:repeatDelay,yoyo:yoyo,data:"isFlip"}),remainingProps=tweenVars,entering=[],leaving=[],comps=[],swapOutTargets=[],spinNum=spin===true?1:spin||0,spinFunc=typeof spin==="function"?spin:function(){return spinNum;},interrupted=fromState.interrupted||toState.interrupted,addFunc=animation[relative!==1?"to":"from"],v,p,endTime,i,el,comp,state,targets,finalStates,fromNode,toNode,run,a,b;for(p in toState.idLookup){toNode=!toState.alt[p]?toState.idLookup[p]:_getChangingElState(toState,fromState,p);el=toNode.element;fromNode=fromState.idLookup[p];fromState.alt[p]&&el===fromNode.element&&(fromState.alt[p].isVisible||!toNode.isVisible)&&(fromNode=fromState.alt[p]);if(fromNode){comp={t:el,b:fromNode,a:toNode,sd:fromNode.element===el?0:toNode.isVisible?1:-1};comps.push(comp);if(comp.sd){if(comp.sd<0){comp.b=toNode;comp.a=fromNode;}interrupted&&_recordInlineStyles(comp.b,props?_memoizedRemoveProps[props]:_removeProps);fade&&comps.push(comp.swap={t:fromNode.element,b:comp.b,a:comp.a,sd:-comp.sd,swap:comp});}el._flip=fromNode.element._flip=_batch?_batch.timeline:animation;}else if(toNode.isVisible){comps.push({t:el,b:_copy$1(toNode,{isVisible:1}),a:toNode,sd:0,entering:1});el._flip=_batch?_batch.timeline:animation;}}props&&(_memoizedProps[props]||_memoizeProps(props)).forEach(function(p){return tweenVars[p]=function(i){return comps[i].a.props[p];};});comps.finalStates=finalStates=[];run=function run(){_orderByDOMDepth(comps);_lockBodyScroll(true);for(i=0;i<comps.length;i++){comp=comps[i];a=comp.a;b=comp.b;if(prune&&!a.isDifferent(b)&&!comp.entering){comps.splice(i--,1);}else{el=comp.t;nested&&!(comp.sd<0)&&i&&(a.matrix=getGlobalMatrix(el,false,false,true));if(b.isVisible&&a.isVisible){if(comp.sd<0){state=new ElementState(el,props,fromState.simple);_fit(state,a,scale,0,0,state);state.matrix=getGlobalMatrix(el,false,false,true);state.css=comp.b.css;comp.a=a=state;fade&&(el.style.opacity=interrupted?b.opacity:a.opacity);stagger&&swapOutTargets.push(el);}else if(comp.sd>0&&fade){el.style.opacity=interrupted?a.opacity-b.opacity:"0";}_fit(a,b,scale,props);}else if(b.isVisible!==a.isVisible){if(!b.isVisible){a.isVisible&&entering.push(a);comps.splice(i--,1);}else if(!a.isVisible){b.css=a.css;leaving.push(b);comps.splice(i--,1);absolute&&nested&&_fit(a,b,scale,props);}}if(!scale){el.style.maxWidth=Math.max(a.width,b.width)+"px";el.style.maxHeight=Math.max(a.height,b.height)+"px";el.style.minWidth=Math.min(a.width,b.width)+"px";el.style.minHeight=Math.min(a.height,b.height)+"px";}nested&&toggleClass&&el.classList.add(toggleClass);}finalStates.push(a);}var classTargets;if(toggleClass){classTargets=finalStates.map(function(s){return s.element;});nested&&classTargets.forEach(function(e){return e.classList.remove(toggleClass);});}_lockBodyScroll(false);if(scale){tweenVars.scaleX=function(i){return comps[i].a.scaleX;};tweenVars.scaleY=function(i){return comps[i].a.scaleY;};}else{tweenVars.width=function(i){return comps[i].a.width+"px";};tweenVars.height=function(i){return comps[i].a.height+"px";};tweenVars.autoRound=vars.autoRound||false;}tweenVars.x=function(i){return comps[i].a.x+"px";};tweenVars.y=function(i){return comps[i].a.y+"px";};tweenVars.rotation=function(i){return comps[i].a.rotation+(spin?spinFunc(i,targets[i],targets)*360:0);};tweenVars.skewX=function(i){return comps[i].a.skewX;};targets=comps.map(function(c){return c.t;});if(_zIndex||_zIndex===0){tweenVars.modifiers={zIndex:function zIndex(){return _zIndex;}};tweenVars.zIndex=_zIndex;tweenVars.immediateRender=vars.immediateRender!==false;}fade&&(tweenVars.opacity=function(i){return comps[i].sd<0?0:comps[i].sd>0?comps[i].a.opacity:"+=0";});if(swapOutTargets.length){stagger=gsap$6.utils.distribute(stagger);var dummyArray=targets.slice(swapOutTargets.length);tweenVars.stagger=function(i,el){return stagger(~swapOutTargets.indexOf(el)?targets.indexOf(comps[i].swap.t):i,el,dummyArray);};}_callbacks.forEach(function(name){return vars[name]&&animation.eventCallback(name,vars[name],vars[name+"Params"]);});if(custom&&targets.length){remainingProps=_copy$1(tweenVars,_reserved);if("scale"in custom){custom.scaleX=custom.scaleY=custom.scale;delete custom.scale;}for(p in custom){v=_copy$1(custom[p],_fitReserved);v[p]=tweenVars[p];!("duration"in v)&&"duration"in tweenVars&&(v.duration=tweenVars.duration);v.stagger=tweenVars.stagger;addFunc.call(animation,targets,v,0);delete remainingProps[p];}}if(targets.length||leaving.length||entering.length){toggleClass&&animation.add(function(){return _toggleClass(classTargets,toggleClass,animation._zTime<0?"remove":"add");},0)&&!paused&&_toggleClass(classTargets,toggleClass,"add");targets.length&&addFunc.call(animation,targets,remainingProps,0);}_handleCallback(onEnter,entering,animation);_handleCallback(onLeave,leaving,animation);var batchTl=_batch&&_batch.timeline;if(batchTl){batchTl.add(animation,0);_batch._final.push(function(){return _setFinalStates(comps,!clearProps);});}endTime=animation.duration();animation.call(function(){var forward=animation.time()>=endTime;forward&&!batchTl&&_setFinalStates(comps,!clearProps);toggleClass&&_toggleClass(classTargets,toggleClass,forward?"remove":"add");});};absoluteOnLeave&&(absolute=comps.filter(function(comp){return!comp.sd&&!comp.a.isVisible&&comp.b.isVisible;}).map(function(comp){return comp.a.element;}));if(_batch){var _batch$_abs;absolute&&(_batch$_abs=_batch._abs).push.apply(_batch$_abs,_filterComps(comps,absolute));_batch._run.push(run);}else{absolute&&_makeCompsAbsolute(_filterComps(comps,absolute));run();}var anim=_batch?_batch.timeline:animation;anim.revert=function(){return _killFlip(anim,1);};return anim;},_interrupt$1=function _interrupt(tl){tl.vars.onInterrupt&&tl.vars.onInterrupt.apply(tl,tl.vars.onInterruptParams||[]);tl.getChildren(true,false,true).forEach(_interrupt);},_killFlip=function _killFlip(tl,action){if(tl&&tl.progress()<1&&!tl.paused()){if(action){_interrupt$1(tl);action<2&&tl.progress(1);tl.kill();}return true;}},_createLookup=function _createLookup(state){var lookup=state.idLookup={},alt=state.alt={},elStates=state.elementStates,i=elStates.length,elState;while(i--){elState=elStates[i];lookup[elState.id]?alt[elState.id]=elState:lookup[elState.id]=elState;}};var FlipState=function(){function FlipState(targets,vars,targetsAreElementStates){this.props=vars&&vars.props;this.simple=!!(vars&&vars.simple);if(targetsAreElementStates){this.targets=_elementsFromElementStates(targets);this.elementStates=targets;_createLookup(this);}else{this.targets=_toArray$1(targets);var soft=vars&&(vars.kill===false||vars.batch&&!vars.kill);_batch&&!soft&&_batch._kill.push(this);this.update(soft||!!_batch);}}var _proto=FlipState.prototype;_proto.update=function update(soft){var _this=this;this.elementStates=this.targets.map(function(el){return new ElementState(el,_this.props,_this.simple);});_createLookup(this);this.interrupt(soft);this.recordInlineStyles();return this;};_proto.clear=function clear(){this.targets.length=this.elementStates.length=0;_createLookup(this);return this;};_proto.fit=function fit(state,scale,nested){var elStatesInOrder=_orderByDOMDepth(this.elementStates.slice(0),false,true),toElStates=(state||this).idLookup,i=0,fromNode,toNode;for(;i<elStatesInOrder.length;i++){fromNode=elStatesInOrder[i];nested&&(fromNode.matrix=getGlobalMatrix(fromNode.element,false,false,true));toNode=toElStates[fromNode.id];toNode&&_fit(fromNode,toNode,scale,true,0,fromNode);fromNode.matrix=getGlobalMatrix(fromNode.element,false,false,true);}return this;};_proto.getProperty=function getProperty(element,property){var es=this.getElementState(element)||_emptyObj;return(property in es?es:es.props||_emptyObj)[property];};_proto.add=function add(state){var i=state.targets.length,lookup=this.idLookup,alt=this.alt,index,es,es2;while(i--){es=state.elementStates[i];es2=lookup[es.id];if(es2&&(es.element===es2.element||alt[es.id]&&alt[es.id].element===es.element)){index=this.elementStates.indexOf(es.element===es2.element?es2:alt[es.id]);this.targets.splice(index,1,state.targets[i]);this.elementStates.splice(index,1,es);}else{this.targets.push(state.targets[i]);this.elementStates.push(es);}}state.interrupted&&(this.interrupted=true);state.simple||(this.simple=false);_createLookup(this);return this;};_proto.compare=function compare(state){var l1=state.idLookup,l2=this.idLookup,unchanged=[],changed=[],enter=[],leave=[],targets=[],a1=state.alt,a2=this.alt,place=function place(s1,s2,el){return(s1.isVisible!==s2.isVisible?s1.isVisible?enter:leave:s1.isVisible?changed:unchanged).push(el)&&targets.push(el);},placeIfDoesNotExist=function placeIfDoesNotExist(s1,s2,el){return targets.indexOf(el)<0&&place(s1,s2,el);},s1,s2,p,el,s1Alt,s2Alt,c1,c2;for(p in l1){s1Alt=a1[p];s2Alt=a2[p];s1=!s1Alt?l1[p]:_getChangingElState(state,this,p);el=s1.element;s2=l2[p];if(s2Alt){c2=s2.isVisible||!s2Alt.isVisible&&el===s2.element?s2:s2Alt;c1=s1Alt&&!s1.isVisible&&!s1Alt.isVisible&&c2.element===s1Alt.element?s1Alt:s1;if(c1.isVisible&&c2.isVisible&&c1.element!==c2.element){(c1.isDifferent(c2)?changed:unchanged).push(c1.element,c2.element);targets.push(c1.element,c2.element);}else{place(c1,c2,c1.element);}s1Alt&&c1.element===s1Alt.element&&(s1Alt=l1[p]);placeIfDoesNotExist(c1.element!==s2.element&&s1Alt?s1Alt:c1,s2,s2.element);placeIfDoesNotExist(s1Alt&&s1Alt.element===s2Alt.element?s1Alt:c1,s2Alt,s2Alt.element);s1Alt&&placeIfDoesNotExist(s1Alt,s2Alt.element===s1Alt.element?s2Alt:s2,s1Alt.element);}else{!s2?enter.push(el):!s2.isDifferent(s1)?unchanged.push(el):place(s1,s2,el);s1Alt&&placeIfDoesNotExist(s1Alt,s2,s1Alt.element);}}for(p in l2){if(!l1[p]){leave.push(l2[p].element);a2[p]&&leave.push(a2[p].element);}}return{changed:changed,unchanged:unchanged,enter:enter,leave:leave};};_proto.recordInlineStyles=function recordInlineStyles(){var props=_memoizedRemoveProps[this.props]||_removeProps,i=this.elementStates.length;while(i--){_recordInlineStyles(this.elementStates[i],props);}};_proto.interrupt=function interrupt(soft){var _this2=this;var timelines=[];this.targets.forEach(function(t){var tl=t._flip,foundInProgress=_killFlip(tl,soft?0:1);soft&&foundInProgress&&timelines.indexOf(tl)<0&&tl.add(function(){return _this2.updateVisibility();});foundInProgress&&timelines.push(tl);});!soft&&timelines.length&&this.updateVisibility();this.interrupted||(this.interrupted=!!timelines.length);};_proto.updateVisibility=function updateVisibility(){this.elementStates.forEach(function(es){var b=es.element.getBoundingClientRect();es.isVisible=!!(b.width||b.height||b.top||b.left);es.uncache=1;});};_proto.getElementState=function getElementState(element){return this.elementStates[this.targets.indexOf(_getEl(element))];};_proto.makeAbsolute=function makeAbsolute(){return _orderByDOMDepth(this.elementStates.slice(0),true,true).map(_makeAbsolute);};return FlipState;}();var ElementState=function(){function ElementState(element,props,simple){this.element=element;this.update(props,simple);}var _proto2=ElementState.prototype;_proto2.isDifferent=function isDifferent(state){var b1=this.bounds,b2=state.bounds;return b1.top!==b2.top||b1.left!==b2.left||b1.width!==b2.width||b1.height!==b2.height||!this.matrix.equals(state.matrix)||this.opacity!==state.opacity||this.props&&state.props&&JSON.stringify(this.props)!==JSON.stringify(state.props);};_proto2.update=function update(props,simple){var self=this,element=self.element,getProp=gsap$6.getProperty(element),cache=gsap$6.core.getCache(element),bounds=element.getBoundingClientRect(),bbox=element.getBBox&&typeof element.getBBox==="function"&&element.nodeName.toLowerCase()!=="svg"&&element.getBBox(),m=simple?new Matrix2D(1,0,0,1,bounds.left+_getDocScrollLeft(),bounds.top+_getDocScrollTop()):getGlobalMatrix(element,false,false,true);self.getProp=getProp;self.element=element;self.id=_getID(element);self.matrix=m;self.cache=cache;self.bounds=bounds;self.isVisible=!!(bounds.width||bounds.height||bounds.left||bounds.top);self.display=getProp("display");self.position=getProp("position");self.parent=element.parentNode;self.x=getProp("x");self.y=getProp("y");self.scaleX=cache.scaleX;self.scaleY=cache.scaleY;self.rotation=getProp("rotation");self.skewX=getProp("skewX");self.opacity=getProp("opacity");self.width=bbox?bbox.width:_closestTenth(getProp("width","px"),0.04);self.height=bbox?bbox.height:_closestTenth(getProp("height","px"),0.04);props&&_recordProps(self,_memoizedProps[props]||_memoizeProps(props));self.ctm=element.getCTM&&element.nodeName.toLowerCase()==="svg"&&_getCTM(element).inverse();self.simple=simple||_round$4(m.a)===1&&!_round$4(m.b)&&!_round$4(m.c)&&_round$4(m.d)===1;self.uncache=0;};return ElementState;}();var FlipAction=function(){function FlipAction(vars,batch){this.vars=vars;this.batch=batch;this.states=[];this.timeline=batch.timeline;}var _proto3=FlipAction.prototype;_proto3.getStateById=function getStateById(id){var i=this.states.length;while(i--){if(this.states[i].idLookup[id]){return this.states[i];}}};_proto3.kill=function kill(){this.batch.remove(this);};return FlipAction;}();var FlipBatch=function(){function FlipBatch(id){this.id=id;this.actions=[];this._kill=[];this._final=[];this._abs=[];this._run=[];this.data={};this.state=new FlipState();this.timeline=gsap$6.timeline();}var _proto4=FlipBatch.prototype;_proto4.add=function add(config){var result=this.actions.filter(function(action){return action.vars===config;});if(result.length){return result[0];}result=new FlipAction(typeof config==="function"?{animate:config}:config,this);this.actions.push(result);return result;};_proto4.remove=function remove(action){var i=this.actions.indexOf(action);i>=0&&this.actions.splice(i,1);return this;};_proto4.getState=function getState(merge){var _this3=this;var prevBatch=_batch,prevAction=_batchAction;_batch=this;this.state.clear();this._kill.length=0;this.actions.forEach(function(action){if(action.vars.getState){action.states.length=0;_batchAction=action;action.state=action.vars.getState(action);}merge&&action.states.forEach(function(s){return _this3.state.add(s);});});_batchAction=prevAction;_batch=prevBatch;this.killConflicts();return this;};_proto4.animate=function animate(){var _this4=this;var prevBatch=_batch,tl=this.timeline,i=this.actions.length,finalStates,endTime;_batch=this;tl.clear();this._abs.length=this._final.length=this._run.length=0;this.actions.forEach(function(a){a.vars.animate&&a.vars.animate(a);var onEnter=a.vars.onEnter,onLeave=a.vars.onLeave,targets=a.targets,s,result;if(targets&&targets.length&&(onEnter||onLeave)){s=new FlipState();a.states.forEach(function(state){return s.add(state);});result=s.compare(Flip.getState(targets));result.enter.length&&onEnter&&onEnter(result.enter);result.leave.length&&onLeave&&onLeave(result.leave);}});_makeCompsAbsolute(this._abs);this._run.forEach(function(f){return f();});endTime=tl.duration();finalStates=this._final.slice(0);tl.add(function(){if(endTime<=tl.time()){finalStates.forEach(function(f){return f();});_forEachBatch(_this4,"onComplete");}});_batch=prevBatch;while(i--){this.actions[i].vars.once&&this.actions[i].kill();}_forEachBatch(this,"onStart");tl.restart();return this;};_proto4.loadState=function loadState(done){done||(done=function done(){return 0;});var queue=[];this.actions.forEach(function(c){if(c.vars.loadState){var i,f=function f(targets){targets&&(c.targets=targets);i=queue.indexOf(f);if(~i){queue.splice(i,1);queue.length||done();}};queue.push(f);c.vars.loadState(f);}});queue.length||done();return this;};_proto4.setState=function setState(){this.actions.forEach(function(c){return c.targets=c.vars.setState&&c.vars.setState(c);});return this;};_proto4.killConflicts=function killConflicts(soft){this.state.interrupt(soft);this._kill.forEach(function(state){return state.interrupt(soft);});return this;};_proto4.run=function run(skipGetState,merge){var _this5=this;if(this!==_batch){skipGetState||this.getState(merge);this.loadState(function(){if(!_this5._killed){_this5.setState();_this5.animate();}});}return this;};_proto4.clear=function clear(stateOnly){this.state.clear();stateOnly||(this.actions.length=0);};_proto4.getStateById=function getStateById(id){var i=this.actions.length,s;while(i--){s=this.actions[i].getStateById(id);if(s){return s;}}return this.state.idLookup[id]&&this.state;};_proto4.kill=function kill(){this._killed=1;this.clear();delete _batchLookup[this.id];};return FlipBatch;}();var Flip=function(){function Flip(){}Flip.getState=function getState(targets,vars){var state=_parseState(targets,vars);_batchAction&&_batchAction.states.push(state);vars&&vars.batch&&Flip.batch(vars.batch).state.add(state);return state;};Flip.from=function from(state,vars){vars=vars||{};"clearProps"in vars||(vars.clearProps=true);return _fromTo(state,_parseState(vars.targets||state.targets,{props:vars.props||state.props,simple:vars.simple,kill:!!vars.kill}),vars,-1);};Flip.to=function to(state,vars){return _fromTo(state,_parseState(vars.targets||state.targets,{props:vars.props||state.props,simple:vars.simple,kill:!!vars.kill}),vars,1);};Flip.fromTo=function fromTo(fromState,toState,vars){return _fromTo(fromState,toState,vars);};Flip.fit=function fit(fromEl,toEl,vars){var v=vars?_copy$1(vars,_fitReserved):{},_ref=vars||v,absolute=_ref.absolute,scale=_ref.scale,getVars=_ref.getVars,props=_ref.props,runBackwards=_ref.runBackwards,onComplete=_ref.onComplete,simple=_ref.simple,fitChild=vars&&vars.fitChild&&_getEl(vars.fitChild),before=_parseElementState(toEl,props,simple,fromEl),after=_parseElementState(fromEl,0,simple,before),inlineProps=props?_memoizedRemoveProps[props]:_removeProps;props&&_applyProps(v,before.props);if(runBackwards){_recordInlineStyles(after,inlineProps);"immediateRender"in v||(v.immediateRender=true);v.onComplete=function(){_applyInlineStyles(after);onComplete&&onComplete.apply(this,arguments);};}absolute&&_makeAbsolute(after,before);v=_fit(after,before,scale||fitChild,props,fitChild,v.duration||getVars?v:0);return getVars?v:v.duration?gsap$6.to(after.element,v):null;};Flip.makeAbsolute=function makeAbsolute(targetsOrStates,vars){return(targetsOrStates instanceof FlipState?targetsOrStates:new FlipState(targetsOrStates,vars)).makeAbsolute();};Flip.batch=function batch(id){id||(id="default");return _batchLookup[id]||(_batchLookup[id]=new FlipBatch(id));};Flip.killFlipsOf=function killFlipsOf(targets,complete){(targets instanceof FlipState?targets.targets:_toArray$1(targets)).forEach(function(t){return t&&_killFlip(t._flip,complete!==false?1:2);});};Flip.isFlipping=function isFlipping(target){var f=Flip.getByTarget(target);return!!f&&f.isActive();};Flip.getByTarget=function getByTarget(target){return(_getEl(target)||_emptyObj)._flip;};Flip.getElementState=function getElementState(target,props){return new ElementState(_getEl(target),props);};Flip.convertCoordinates=function convertCoordinates(fromElement,toElement,point){var m=getGlobalMatrix(toElement,true,true).multiply(getGlobalMatrix(fromElement));return point?m.apply(point):m;};Flip.register=function register(core){_body$2=typeof document!=="undefined"&&document.body;if(_body$2){gsap$6=core;_setDoc(_body$2);_toArray$1=gsap$6.utils.toArray;_getStyleSaver$2=gsap$6.core.getStyleSaver;var snap=gsap$6.utils.snap(0.1);_closestTenth=function _closestTenth(value,add){return snap(parseFloat(value)+add);};}};return Flip;}();Flip.version="3.11.5";typeof window!=="undefined"&&window.gsap&&window.gsap.registerPlugin(Flip);/*!
   * MotionPathPlugin 3.11.5
   * https://greensock.com
   *
   * @license Copyright 2008-2023, GreenSock. All rights reserved.
   * Subject to the terms at https://greensock.com/standard-license or for
   * Club GreenSock members, the agreement issued with that membership.
   * @author: Jack Doyle, jack@greensock.com
  */var _xProps="x,translateX,left,marginLeft,xPercent".split(","),_yProps="y,translateY,top,marginTop,yPercent".split(","),_DEG2RAD$3=Math.PI/180,gsap$7,PropTween$1,_getUnit,_toArray$2,_getStyleSaver$3,_reverting$2,_getGSAP$5=function _getGSAP(){return gsap$7||typeof window!=="undefined"&&(gsap$7=window.gsap)&&gsap$7.registerPlugin&&gsap$7;},_populateSegmentFromArray=function _populateSegmentFromArray(segment,values,property,mode){var l=values.length,si=mode===2?0:mode,i=0,v;for(;i<l;i++){segment[si]=v=parseFloat(values[i][property]);mode===2&&(segment[si+1]=0);si+=2;}return segment;},_getPropNum=function _getPropNum(target,prop,unit){return parseFloat(target._gsap.get(target,prop,unit||"px"))||0;},_relativize=function _relativize(segment){var x=segment[0],y=segment[1],i;for(i=2;i<segment.length;i+=2){x=segment[i]+=x;y=segment[i+1]+=y;}},_segmentToRawPath=function _segmentToRawPath(plugin,segment,target,x,y,slicer,vars,unitX,unitY){if(vars.type==="cubic"){segment=[segment];}else{vars.fromCurrent!==false&&segment.unshift(_getPropNum(target,x,unitX),y?_getPropNum(target,y,unitY):0);vars.relative&&_relativize(segment);var pointFunc=y?pointsToSegment:flatPointsToSegment;segment=[pointFunc(segment,vars.curviness)];}segment=slicer(_align(segment,target,vars));_addDimensionalPropTween(plugin,target,x,segment,"x",unitX);y&&_addDimensionalPropTween(plugin,target,y,segment,"y",unitY);return cacheRawPathMeasurements(segment,vars.resolution||(vars.curviness===0?20:12));},_emptyFunc$2=function _emptyFunc(v){return v;},_numExp$2=/[-+\.]*\d+\.?(?:e-|e\+)?\d*/g,_originToPoint=function _originToPoint(element,origin,parentMatrix){var m=getGlobalMatrix(element),x=0,y=0,svg;if((element.tagName+"").toLowerCase()==="svg"){svg=element.viewBox.baseVal;svg.width||(svg={width:+element.getAttribute("width"),height:+element.getAttribute("height")});}else{svg=origin&&element.getBBox&&element.getBBox();}if(origin&&origin!=="auto"){x=origin.push?origin[0]*(svg?svg.width:element.offsetWidth||0):origin.x;y=origin.push?origin[1]*(svg?svg.height:element.offsetHeight||0):origin.y;}return parentMatrix.apply(x||y?m.apply({x:x,y:y}):{x:m.e,y:m.f});},_getAlignMatrix=function _getAlignMatrix(fromElement,toElement,fromOrigin,toOrigin){var parentMatrix=getGlobalMatrix(fromElement.parentNode,true,true),m=parentMatrix.clone().multiply(getGlobalMatrix(toElement)),fromPoint=_originToPoint(fromElement,fromOrigin,parentMatrix),_originToPoint2=_originToPoint(toElement,toOrigin,parentMatrix),x=_originToPoint2.x,y=_originToPoint2.y,p;m.e=m.f=0;if(toOrigin==="auto"&&toElement.getTotalLength&&toElement.tagName.toLowerCase()==="path"){p=toElement.getAttribute("d").match(_numExp$2)||[];p=m.apply({x:+p[0],y:+p[1]});x+=p.x;y+=p.y;}if(p){p=m.apply(toElement.getBBox());x-=p.x;y-=p.y;}m.e=x-fromPoint.x;m.f=y-fromPoint.y;return m;},_align=function _align(rawPath,target,_ref){var align=_ref.align,matrix=_ref.matrix,offsetX=_ref.offsetX,offsetY=_ref.offsetY,alignOrigin=_ref.alignOrigin;var x=rawPath[0][0],y=rawPath[0][1],curX=_getPropNum(target,"x"),curY=_getPropNum(target,"y"),alignTarget,m,p;if(!rawPath||!rawPath.length){return getRawPath("M0,0L0,0");}if(align){if(align==="self"||(alignTarget=_toArray$2(align)[0]||target)===target){transformRawPath(rawPath,1,0,0,1,curX-x,curY-y);}else{if(alignOrigin&&alignOrigin[2]!==false){gsap$7.set(target,{transformOrigin:alignOrigin[0]*100+"% "+alignOrigin[1]*100+"%"});}else{alignOrigin=[_getPropNum(target,"xPercent")/-100,_getPropNum(target,"yPercent")/-100];}m=_getAlignMatrix(target,alignTarget,alignOrigin,"auto");p=m.apply({x:x,y:y});transformRawPath(rawPath,m.a,m.b,m.c,m.d,curX+m.e-(p.x-m.e),curY+m.f-(p.y-m.f));}}if(matrix){transformRawPath(rawPath,matrix.a,matrix.b,matrix.c,matrix.d,matrix.e,matrix.f);}else if(offsetX||offsetY){transformRawPath(rawPath,1,0,0,1,offsetX||0,offsetY||0);}return rawPath;},_addDimensionalPropTween=function _addDimensionalPropTween(plugin,target,property,rawPath,pathProperty,forceUnit){var cache=target._gsap,harness=cache.harness,alias=harness&&harness.aliases&&harness.aliases[property],prop=alias&&alias.indexOf(",")<0?alias:property,pt=plugin._pt=new PropTween$1(plugin._pt,target,prop,0,0,_emptyFunc$2,0,cache.set(target,prop,plugin));pt.u=_getUnit(cache.get(target,prop,forceUnit))||0;pt.path=rawPath;pt.pp=pathProperty;plugin._props.push(prop);},_sliceModifier=function _sliceModifier(start,end){return function(rawPath){return start||end!==1?sliceRawPath(rawPath,start,end):rawPath;};};var MotionPathPlugin={version:"3.11.5",name:"motionPath",register:function register(core,Plugin,propTween){gsap$7=core;_getUnit=gsap$7.utils.getUnit;_toArray$2=gsap$7.utils.toArray;_getStyleSaver$3=gsap$7.core.getStyleSaver;_reverting$2=gsap$7.core.reverting||function(){};PropTween$1=propTween;},init:function init(target,vars,tween){if(!gsap$7){console.warn("Please gsap.registerPlugin(MotionPathPlugin)");return false;}if(!(_typeof(vars)==="object"&&!vars.style)||!vars.path){vars={path:vars};}var rawPaths=[],_vars=vars,path=_vars.path,autoRotate=_vars.autoRotate,unitX=_vars.unitX,unitY=_vars.unitY,x=_vars.x,y=_vars.y,firstObj=path[0],slicer=_sliceModifier(vars.start,"end"in vars?vars.end:1),rawPath,p;this.rawPaths=rawPaths;this.target=target;this.tween=tween;this.styles=_getStyleSaver$3&&_getStyleSaver$3(target,"transform");if(this.rotate=autoRotate||autoRotate===0){this.rOffset=parseFloat(autoRotate)||0;this.radians=!!vars.useRadians;this.rProp=vars.rotation||"rotation";this.rSet=target._gsap.set(target,this.rProp,this);this.ru=_getUnit(target._gsap.get(target,this.rProp))||0;}if(Array.isArray(path)&&!("closed"in path)&&typeof firstObj!=="number"){for(p in firstObj){if(!x&&~_xProps.indexOf(p)){x=p;}else if(!y&&~_yProps.indexOf(p)){y=p;}}if(x&&y){rawPaths.push(_segmentToRawPath(this,_populateSegmentFromArray(_populateSegmentFromArray([],path,x,0),path,y,1),target,x,y,slicer,vars,unitX||_getUnit(path[0][x]),unitY||_getUnit(path[0][y])));}else{x=y=0;}for(p in firstObj){p!==x&&p!==y&&rawPaths.push(_segmentToRawPath(this,_populateSegmentFromArray([],path,p,2),target,p,0,slicer,vars,_getUnit(path[0][p])));}}else{rawPath=slicer(_align(getRawPath(vars.path),target,vars));cacheRawPathMeasurements(rawPath,vars.resolution);rawPaths.push(rawPath);_addDimensionalPropTween(this,target,vars.x||"x",rawPath,"x",vars.unitX||"px");_addDimensionalPropTween(this,target,vars.y||"y",rawPath,"y",vars.unitY||"px");}},render:function render(ratio,data){var rawPaths=data.rawPaths,i=rawPaths.length,pt=data._pt;if(data.tween._time||!_reverting$2()){if(ratio>1){ratio=1;}else if(ratio<0){ratio=0;}while(i--){getPositionOnPath(rawPaths[i],ratio,!i&&data.rotate,rawPaths[i]);}while(pt){pt.set(pt.t,pt.p,pt.path[pt.pp]+pt.u,pt.d,ratio);pt=pt._next;}data.rotate&&data.rSet(data.target,data.rProp,rawPaths[0].angle*(data.radians?_DEG2RAD$3:1)+data.rOffset+data.ru,data,ratio);}else{data.styles.revert();}},getLength:function getLength(path){return cacheRawPathMeasurements(getRawPath(path)).totalLength;},sliceRawPath:sliceRawPath,getRawPath:getRawPath,pointsToSegment:pointsToSegment,stringToRawPath:stringToRawPath,rawPathToString:rawPathToString,transformRawPath:transformRawPath,getGlobalMatrix:getGlobalMatrix,getPositionOnPath:getPositionOnPath,cacheRawPathMeasurements:cacheRawPathMeasurements,convertToPath:function convertToPath$1(targets,swap){return _toArray$2(targets).map(function(target){return convertToPath(target,swap!==false);});},convertCoordinates:function convertCoordinates(fromElement,toElement,point){var m=getGlobalMatrix(toElement,true,true).multiply(getGlobalMatrix(fromElement));return point?m.apply(point):m;},getAlignMatrix:_getAlignMatrix,getRelativePosition:function getRelativePosition(fromElement,toElement,fromOrigin,toOrigin){var m=_getAlignMatrix(fromElement,toElement,fromOrigin,toOrigin);return{x:m.e,y:m.f};},arrayToRawPath:function arrayToRawPath(value,vars){vars=vars||{};var segment=_populateSegmentFromArray(_populateSegmentFromArray([],value,vars.x||"x",0),value,vars.y||"y",1);vars.relative&&_relativize(segment);return[vars.type==="cubic"?segment:pointsToSegment(segment,vars.curviness)];}};_getGSAP$5()&&gsap$7.registerPlugin(MotionPathPlugin);/*!
   * Observer 3.11.5
   * https://greensock.com
   *
   * @license Copyright 2008-2023, GreenSock. All rights reserved.
   * Subject to the terms at https://greensock.com/standard-license or for
   * Club GreenSock members, the agreement issued with that membership.
   * @author: Jack Doyle, jack@greensock.com
  */var gsap$8,_coreInitted$5,_clamp$1,_win$5,_doc$5,_docEl,_body$3,_isTouch,_pointerType,ScrollTrigger,_root,_normalizer,_eventTypes,_context$2,_getGSAP$6=function _getGSAP(){return gsap$8||typeof window!=="undefined"&&(gsap$8=window.gsap)&&gsap$8.registerPlugin&&gsap$8;},_startup=1,_observers=[];exports._scrollers=[];exports._proxies=[];var _getTime$1=Date.now,_bridge=function _bridge(name,value){return value;},_integrate=function _integrate(){var core=ScrollTrigger.core,data=core.bridge||{},scrollers=core._scrollers,proxies=core._proxies;scrollers.push.apply(scrollers,exports._scrollers);proxies.push.apply(proxies,exports._proxies);exports._scrollers=scrollers;exports._proxies=proxies;_bridge=function _bridge(name,value){return data[name](value);};},_getProxyProp=function _getProxyProp(element,property){return~exports._proxies.indexOf(element)&&exports._proxies[exports._proxies.indexOf(element)+1][property];},_isViewport=function _isViewport(el){return!!~_root.indexOf(el);},_addListener$1=function _addListener(element,type,func,nonPassive,capture){return element.addEventListener(type,func,{passive:!nonPassive,capture:!!capture});},_removeListener$1=function _removeListener(element,type,func,capture){return element.removeEventListener(type,func,!!capture);},_scrollLeft="scrollLeft",_scrollTop="scrollTop",_onScroll=function _onScroll(){return _normalizer&&_normalizer.isPressed||exports._scrollers.cache++;},_scrollCacheFunc=function _scrollCacheFunc(f,doNotCache){var cachingFunc=function cachingFunc(value){if(value||value===0){_startup&&(_win$5.history.scrollRestoration="manual");var isNormalizing=_normalizer&&_normalizer.isPressed;value=cachingFunc.v=Math.round(value)||(_normalizer&&_normalizer.iOS?1:0);f(value);cachingFunc.cacheID=exports._scrollers.cache;isNormalizing&&_bridge("ss",value);}else if(doNotCache||exports._scrollers.cache!==cachingFunc.cacheID||_bridge("ref")){cachingFunc.cacheID=exports._scrollers.cache;cachingFunc.v=f();}return cachingFunc.v+cachingFunc.offset;};cachingFunc.offset=0;return f&&cachingFunc;},_horizontal={s:_scrollLeft,p:"left",p2:"Left",os:"right",os2:"Right",d:"width",d2:"Width",a:"x",sc:_scrollCacheFunc(function(value){return arguments.length?_win$5.scrollTo(value,_vertical.sc()):_win$5.pageXOffset||_doc$5[_scrollLeft]||_docEl[_scrollLeft]||_body$3[_scrollLeft]||0;})},_vertical={s:_scrollTop,p:"top",p2:"Top",os:"bottom",os2:"Bottom",d:"height",d2:"Height",a:"y",op:_horizontal,sc:_scrollCacheFunc(function(value){return arguments.length?_win$5.scrollTo(_horizontal.sc(),value):_win$5.pageYOffset||_doc$5[_scrollTop]||_docEl[_scrollTop]||_body$3[_scrollTop]||0;})},_getTarget=function _getTarget(t){return gsap$8.utils.toArray(t)[0]||(typeof t==="string"&&gsap$8.config().nullTargetWarn!==false?console.warn("Element not found:",t):null);},_getScrollFunc=function _getScrollFunc(element,_ref){var s=_ref.s,sc=_ref.sc;_isViewport(element)&&(element=_doc$5.scrollingElement||_docEl);var i=exports._scrollers.indexOf(element),offset=sc===_vertical.sc?1:2;!~i&&(i=exports._scrollers.push(element)-1);exports._scrollers[i+offset]||element.addEventListener("scroll",_onScroll);var prev=exports._scrollers[i+offset],func=prev||(exports._scrollers[i+offset]=_scrollCacheFunc(_getProxyProp(element,s),true)||(_isViewport(element)?sc:_scrollCacheFunc(function(value){return arguments.length?element[s]=value:element[s];})));func.target=element;prev||(func.smooth=gsap$8.getProperty(element,"scrollBehavior")==="smooth");return func;},_getVelocityProp=function _getVelocityProp(value,minTimeRefresh,useDelta){var v1=value,v2=value,t1=_getTime$1(),t2=t1,min=minTimeRefresh||50,dropToZeroTime=Math.max(500,min*3),update=function update(value,force){var t=_getTime$1();if(force||t-t1>min){v2=v1;v1=value;t2=t1;t1=t;}else if(useDelta){v1+=value;}else{v1=v2+(value-v2)/(t-t2)*(t1-t2);}},reset=function reset(){v2=v1=useDelta?0:v1;t2=t1=0;},getVelocity=function getVelocity(latestValue){var tOld=t2,vOld=v2,t=_getTime$1();(latestValue||latestValue===0)&&latestValue!==v1&&update(latestValue);return t1===t2||t-t2>dropToZeroTime?0:(v1+(useDelta?vOld:-vOld))/((useDelta?t:t1)-tOld)*1000;};return{update:update,reset:reset,getVelocity:getVelocity};},_getEvent=function _getEvent(e,preventDefault){preventDefault&&!e._gsapAllow&&e.preventDefault();return e.changedTouches?e.changedTouches[0]:e;},_getAbsoluteMax=function _getAbsoluteMax(a){var max=Math.max.apply(Math,a),min=Math.min.apply(Math,a);return Math.abs(max)>=Math.abs(min)?max:min;},_setScrollTrigger=function _setScrollTrigger(){ScrollTrigger=gsap$8.core.globals().ScrollTrigger;ScrollTrigger&&ScrollTrigger.core&&_integrate();},_initCore$6=function _initCore(core){gsap$8=core||_getGSAP$6();if(gsap$8&&typeof document!=="undefined"&&document.body){_win$5=window;_doc$5=document;_docEl=_doc$5.documentElement;_body$3=_doc$5.body;_root=[_win$5,_doc$5,_docEl,_body$3];_clamp$1=gsap$8.utils.clamp;_context$2=gsap$8.core.context||function(){};_pointerType="onpointerenter"in _body$3?"pointer":"mouse";_isTouch=Observer.isTouch=_win$5.matchMedia&&_win$5.matchMedia("(hover: none), (pointer: coarse)").matches?1:"ontouchstart"in _win$5||navigator.maxTouchPoints>0||navigator.msMaxTouchPoints>0?2:0;_eventTypes=Observer.eventTypes=("ontouchstart"in _docEl?"touchstart,touchmove,touchcancel,touchend":!("onpointerdown"in _docEl)?"mousedown,mousemove,mouseup,mouseup":"pointerdown,pointermove,pointercancel,pointerup").split(",");setTimeout(function(){return _startup=0;},500);_setScrollTrigger();_coreInitted$5=1;}return _coreInitted$5;};_horizontal.op=_vertical;exports._scrollers.cache=0;var Observer=function(){function Observer(vars){this.init(vars);}var _proto=Observer.prototype;_proto.init=function init(vars){_coreInitted$5||_initCore$6(gsap$8)||console.warn("Please gsap.registerPlugin(Observer)");ScrollTrigger||_setScrollTrigger();var tolerance=vars.tolerance,dragMinimum=vars.dragMinimum,type=vars.type,target=vars.target,lineHeight=vars.lineHeight,debounce=vars.debounce,preventDefault=vars.preventDefault,onStop=vars.onStop,onStopDelay=vars.onStopDelay,ignore=vars.ignore,wheelSpeed=vars.wheelSpeed,event=vars.event,onDragStart=vars.onDragStart,onDragEnd=vars.onDragEnd,onDrag=vars.onDrag,onPress=vars.onPress,onRelease=vars.onRelease,onRight=vars.onRight,onLeft=vars.onLeft,onUp=vars.onUp,onDown=vars.onDown,onChangeX=vars.onChangeX,onChangeY=vars.onChangeY,onChange=vars.onChange,onToggleX=vars.onToggleX,onToggleY=vars.onToggleY,onHover=vars.onHover,onHoverEnd=vars.onHoverEnd,onMove=vars.onMove,ignoreCheck=vars.ignoreCheck,isNormalizer=vars.isNormalizer,onGestureStart=vars.onGestureStart,onGestureEnd=vars.onGestureEnd,onWheel=vars.onWheel,onEnable=vars.onEnable,onDisable=vars.onDisable,onClick=vars.onClick,scrollSpeed=vars.scrollSpeed,capture=vars.capture,allowClicks=vars.allowClicks,lockAxis=vars.lockAxis,onLockAxis=vars.onLockAxis;this.target=target=_getTarget(target)||_docEl;this.vars=vars;ignore&&(ignore=gsap$8.utils.toArray(ignore));tolerance=tolerance||1e-9;dragMinimum=dragMinimum||0;wheelSpeed=wheelSpeed||1;scrollSpeed=scrollSpeed||1;type=type||"wheel,touch,pointer";debounce=debounce!==false;lineHeight||(lineHeight=parseFloat(_win$5.getComputedStyle(_body$3).lineHeight)||22);var id,onStopDelayedCall,dragged,moved,wheeled,locked,axis,self=this,prevDeltaX=0,prevDeltaY=0,scrollFuncX=_getScrollFunc(target,_horizontal),scrollFuncY=_getScrollFunc(target,_vertical),scrollX=scrollFuncX(),scrollY=scrollFuncY(),limitToTouch=~type.indexOf("touch")&&!~type.indexOf("pointer")&&_eventTypes[0]==="pointerdown",isViewport=_isViewport(target),ownerDoc=target.ownerDocument||_doc$5,deltaX=[0,0,0],deltaY=[0,0,0],onClickTime=0,clickCapture=function clickCapture(){return onClickTime=_getTime$1();},_ignoreCheck=function _ignoreCheck(e,isPointerOrTouch){return(self.event=e)&&ignore&&~ignore.indexOf(e.target)||isPointerOrTouch&&limitToTouch&&e.pointerType!=="touch"||ignoreCheck&&ignoreCheck(e,isPointerOrTouch);},onStopFunc=function onStopFunc(){self._vx.reset();self._vy.reset();onStopDelayedCall.pause();onStop&&onStop(self);},update=function update(){var dx=self.deltaX=_getAbsoluteMax(deltaX),dy=self.deltaY=_getAbsoluteMax(deltaY),changedX=Math.abs(dx)>=tolerance,changedY=Math.abs(dy)>=tolerance;onChange&&(changedX||changedY)&&onChange(self,dx,dy,deltaX,deltaY);if(changedX){onRight&&self.deltaX>0&&onRight(self);onLeft&&self.deltaX<0&&onLeft(self);onChangeX&&onChangeX(self);onToggleX&&self.deltaX<0!==prevDeltaX<0&&onToggleX(self);prevDeltaX=self.deltaX;deltaX[0]=deltaX[1]=deltaX[2]=0;}if(changedY){onDown&&self.deltaY>0&&onDown(self);onUp&&self.deltaY<0&&onUp(self);onChangeY&&onChangeY(self);onToggleY&&self.deltaY<0!==prevDeltaY<0&&onToggleY(self);prevDeltaY=self.deltaY;deltaY[0]=deltaY[1]=deltaY[2]=0;}if(moved||dragged){onMove&&onMove(self);if(dragged){onDrag(self);dragged=false;}moved=false;}locked&&!(locked=false)&&onLockAxis&&onLockAxis(self);if(wheeled){onWheel(self);wheeled=false;}id=0;},onDelta=function onDelta(x,y,index){deltaX[index]+=x;deltaY[index]+=y;self._vx.update(x);self._vy.update(y);debounce?id||(id=requestAnimationFrame(update)):update();},onTouchOrPointerDelta=function onTouchOrPointerDelta(x,y){if(lockAxis&&!axis){self.axis=axis=Math.abs(x)>Math.abs(y)?"x":"y";locked=true;}if(axis!=="y"){deltaX[2]+=x;self._vx.update(x,true);}if(axis!=="x"){deltaY[2]+=y;self._vy.update(y,true);}debounce?id||(id=requestAnimationFrame(update)):update();},_onDrag=function _onDrag(e){if(_ignoreCheck(e,1)){return;}e=_getEvent(e,preventDefault);var x=e.clientX,y=e.clientY,dx=x-self.x,dy=y-self.y,isDragging=self.isDragging;self.x=x;self.y=y;if(isDragging||Math.abs(self.startX-x)>=dragMinimum||Math.abs(self.startY-y)>=dragMinimum){onDrag&&(dragged=true);isDragging||(self.isDragging=true);onTouchOrPointerDelta(dx,dy);isDragging||onDragStart&&onDragStart(self);}},_onPress=self.onPress=function(e){if(_ignoreCheck(e,1)||e&&e.button){return;}self.axis=axis=null;onStopDelayedCall.pause();self.isPressed=true;e=_getEvent(e);prevDeltaX=prevDeltaY=0;self.startX=self.x=e.clientX;self.startY=self.y=e.clientY;self._vx.reset();self._vy.reset();_addListener$1(isNormalizer?target:ownerDoc,_eventTypes[1],_onDrag,preventDefault,true);self.deltaX=self.deltaY=0;onPress&&onPress(self);},_onRelease=self.onRelease=function(e){if(_ignoreCheck(e,1)){return;}_removeListener$1(isNormalizer?target:ownerDoc,_eventTypes[1],_onDrag,true);var isTrackingDrag=!isNaN(self.y-self.startY),wasDragging=self.isDragging&&(Math.abs(self.x-self.startX)>3||Math.abs(self.y-self.startY)>3),eventData=_getEvent(e);if(!wasDragging&&isTrackingDrag){self._vx.reset();self._vy.reset();if(preventDefault&&allowClicks){gsap$8.delayedCall(0.08,function(){if(_getTime$1()-onClickTime>300&&!e.defaultPrevented){if(e.target.click){e.target.click();}else if(ownerDoc.createEvent){var syntheticEvent=ownerDoc.createEvent("MouseEvents");syntheticEvent.initMouseEvent("click",true,true,_win$5,1,eventData.screenX,eventData.screenY,eventData.clientX,eventData.clientY,false,false,false,false,0,null);e.target.dispatchEvent(syntheticEvent);}}});}}self.isDragging=self.isGesturing=self.isPressed=false;onStop&&!isNormalizer&&onStopDelayedCall.restart(true);onDragEnd&&wasDragging&&onDragEnd(self);onRelease&&onRelease(self,wasDragging);},_onGestureStart=function _onGestureStart(e){return e.touches&&e.touches.length>1&&(self.isGesturing=true)&&onGestureStart(e,self.isDragging);},_onGestureEnd=function _onGestureEnd(){return(self.isGesturing=false)||onGestureEnd(self);},onScroll=function onScroll(e){if(_ignoreCheck(e)){return;}var x=scrollFuncX(),y=scrollFuncY();onDelta((x-scrollX)*scrollSpeed,(y-scrollY)*scrollSpeed,1);scrollX=x;scrollY=y;onStop&&onStopDelayedCall.restart(true);},_onWheel=function _onWheel(e){if(_ignoreCheck(e)){return;}e=_getEvent(e,preventDefault);onWheel&&(wheeled=true);var multiplier=(e.deltaMode===1?lineHeight:e.deltaMode===2?_win$5.innerHeight:1)*wheelSpeed;onDelta(e.deltaX*multiplier,e.deltaY*multiplier,0);onStop&&!isNormalizer&&onStopDelayedCall.restart(true);},_onMove=function _onMove(e){if(_ignoreCheck(e)){return;}var x=e.clientX,y=e.clientY,dx=x-self.x,dy=y-self.y;self.x=x;self.y=y;moved=true;(dx||dy)&&onTouchOrPointerDelta(dx,dy);},_onHover=function _onHover(e){self.event=e;onHover(self);},_onHoverEnd=function _onHoverEnd(e){self.event=e;onHoverEnd(self);},_onClick=function _onClick(e){return _ignoreCheck(e)||_getEvent(e,preventDefault)&&onClick(self);};onStopDelayedCall=self._dc=gsap$8.delayedCall(onStopDelay||0.25,onStopFunc).pause();self.deltaX=self.deltaY=0;self._vx=_getVelocityProp(0,50,true);self._vy=_getVelocityProp(0,50,true);self.scrollX=scrollFuncX;self.scrollY=scrollFuncY;self.isDragging=self.isGesturing=self.isPressed=false;_context$2(this);self.enable=function(e){if(!self.isEnabled){_addListener$1(isViewport?ownerDoc:target,"scroll",_onScroll);type.indexOf("scroll")>=0&&_addListener$1(isViewport?ownerDoc:target,"scroll",onScroll,preventDefault,capture);type.indexOf("wheel")>=0&&_addListener$1(target,"wheel",_onWheel,preventDefault,capture);if(type.indexOf("touch")>=0&&_isTouch||type.indexOf("pointer")>=0){_addListener$1(target,_eventTypes[0],_onPress,preventDefault,capture);_addListener$1(ownerDoc,_eventTypes[2],_onRelease);_addListener$1(ownerDoc,_eventTypes[3],_onRelease);allowClicks&&_addListener$1(target,"click",clickCapture,false,true);onClick&&_addListener$1(target,"click",_onClick);onGestureStart&&_addListener$1(ownerDoc,"gesturestart",_onGestureStart);onGestureEnd&&_addListener$1(ownerDoc,"gestureend",_onGestureEnd);onHover&&_addListener$1(target,_pointerType+"enter",_onHover);onHoverEnd&&_addListener$1(target,_pointerType+"leave",_onHoverEnd);onMove&&_addListener$1(target,_pointerType+"move",_onMove);}self.isEnabled=true;e&&e.type&&_onPress(e);onEnable&&onEnable(self);}return self;};self.disable=function(){if(self.isEnabled){_observers.filter(function(o){return o!==self&&_isViewport(o.target);}).length||_removeListener$1(isViewport?ownerDoc:target,"scroll",_onScroll);if(self.isPressed){self._vx.reset();self._vy.reset();_removeListener$1(isNormalizer?target:ownerDoc,_eventTypes[1],_onDrag,true);}_removeListener$1(isViewport?ownerDoc:target,"scroll",onScroll,capture);_removeListener$1(target,"wheel",_onWheel,capture);_removeListener$1(target,_eventTypes[0],_onPress,capture);_removeListener$1(ownerDoc,_eventTypes[2],_onRelease);_removeListener$1(ownerDoc,_eventTypes[3],_onRelease);_removeListener$1(target,"click",clickCapture,true);_removeListener$1(target,"click",_onClick);_removeListener$1(ownerDoc,"gesturestart",_onGestureStart);_removeListener$1(ownerDoc,"gestureend",_onGestureEnd);_removeListener$1(target,_pointerType+"enter",_onHover);_removeListener$1(target,_pointerType+"leave",_onHoverEnd);_removeListener$1(target,_pointerType+"move",_onMove);self.isEnabled=self.isPressed=self.isDragging=false;onDisable&&onDisable(self);}};self.kill=self.revert=function(){self.disable();var i=_observers.indexOf(self);i>=0&&_observers.splice(i,1);_normalizer===self&&(_normalizer=0);};_observers.push(self);isNormalizer&&_isViewport(target)&&(_normalizer=self);self.enable(event);};_createClass(Observer,[{key:"velocityX",get:function get(){return this._vx.getVelocity();}},{key:"velocityY",get:function get(){return this._vy.getVelocity();}}]);return Observer;}();Observer.version="3.11.5";Observer.create=function(vars){return new Observer(vars);};Observer.register=_initCore$6;Observer.getAll=function(){return _observers.slice();};Observer.getById=function(id){return _observers.filter(function(o){return o.vars.id===id;})[0];};_getGSAP$6()&&gsap$8.registerPlugin(Observer);/*!
   * PixiPlugin 3.11.5
   * https://greensock.com
   *
   * @license Copyright 2008-2023, GreenSock. All rights reserved.
   * Subject to the terms at https://greensock.com/standard-license or for
   * Club GreenSock members, the agreement issued with that membership.
   * @author: Jack Doyle, jack@greensock.com
  */var gsap$9,_win$6,_splitColor,_coreInitted$6,_PIXI,PropTween$2,_getSetter$1,_isV4,_windowExists$5=function _windowExists(){return typeof window!=="undefined";},_getGSAP$7=function _getGSAP(){return gsap$9||_windowExists$5()&&(gsap$9=window.gsap)&&gsap$9.registerPlugin&&gsap$9;},_isFunction$2=function _isFunction(value){return typeof value==="function";},_warn$2=function _warn(message){return console.warn(message);},_idMatrix$1=[1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0],_lumR$1=0.212671,_lumG$1=0.715160,_lumB$1=0.072169,_applyMatrix$1=function _applyMatrix(m,m2){var temp=[],i=0,z=0,y,x;for(y=0;y<4;y++){for(x=0;x<5;x++){z=x===4?m[i+4]:0;temp[i+x]=m[i]*m2[x]+m[i+1]*m2[x+5]+m[i+2]*m2[x+10]+m[i+3]*m2[x+15]+z;}i+=5;}return temp;},_setSaturation$1=function _setSaturation(m,n){var inv=1-n,r=inv*_lumR$1,g=inv*_lumG$1,b=inv*_lumB$1;return _applyMatrix$1([r+n,g,b,0,0,r,g+n,b,0,0,r,g,b+n,0,0,0,0,0,1,0],m);},_colorize$1=function _colorize(m,color,amount){var c=_splitColor(color),r=c[0]/255,g=c[1]/255,b=c[2]/255,inv=1-amount;return _applyMatrix$1([inv+amount*r*_lumR$1,amount*r*_lumG$1,amount*r*_lumB$1,0,0,amount*g*_lumR$1,inv+amount*g*_lumG$1,amount*g*_lumB$1,0,0,amount*b*_lumR$1,amount*b*_lumG$1,inv+amount*b*_lumB$1,0,0,0,0,0,1,0],m);},_setHue$1=function _setHue(m,n){n*=Math.PI/180;var c=Math.cos(n),s=Math.sin(n);return _applyMatrix$1([_lumR$1+c*(1-_lumR$1)+s*-_lumR$1,_lumG$1+c*-_lumG$1+s*-_lumG$1,_lumB$1+c*-_lumB$1+s*(1-_lumB$1),0,0,_lumR$1+c*-_lumR$1+s*0.143,_lumG$1+c*(1-_lumG$1)+s*0.14,_lumB$1+c*-_lumB$1+s*-0.283,0,0,_lumR$1+c*-_lumR$1+s*-(1-_lumR$1),_lumG$1+c*-_lumG$1+s*_lumG$1,_lumB$1+c*(1-_lumB$1)+s*_lumB$1,0,0,0,0,0,1,0,0,0,0,0,1],m);},_setContrast$1=function _setContrast(m,n){return _applyMatrix$1([n,0,0,0,0.5*(1-n),0,n,0,0,0.5*(1-n),0,0,n,0,0.5*(1-n),0,0,0,1,0],m);},_getFilter=function _getFilter(target,type){var filterClass=_PIXI.filters[type],filters=target.filters||[],i=filters.length,filter;filterClass||_warn$2(type+" not found. PixiPlugin.registerPIXI(PIXI)");while(--i>-1){if(filters[i]instanceof filterClass){return filters[i];}}filter=new filterClass();if(type==="BlurFilter"){filter.blur=0;}filters.push(filter);target.filters=filters;return filter;},_addColorMatrixFilterCacheTween=function _addColorMatrixFilterCacheTween(p,plugin,cache,vars){plugin.add(cache,p,cache[p],vars[p]);plugin._props.push(p);},_applyBrightnessToMatrix=function _applyBrightnessToMatrix(brightness,matrix){var temp=new _PIXI.filters.ColorMatrixFilter();temp.matrix=matrix;temp.brightness(brightness,true);return temp.matrix;},_copy$2=function _copy(obj){var copy={},p;for(p in obj){copy[p]=obj[p];}return copy;},_CMFdefaults={contrast:1,saturation:1,colorizeAmount:0,colorize:"rgb(255,255,255)",hue:0,brightness:1},_parseColorMatrixFilter$1=function _parseColorMatrixFilter(target,v,pg){var filter=_getFilter(target,"ColorMatrixFilter"),cache=target._gsColorMatrixFilter=target._gsColorMatrixFilter||_copy$2(_CMFdefaults),combine=v.combineCMF&&!("colorMatrixFilter"in v&&!v.colorMatrixFilter),i,matrix,startMatrix;startMatrix=filter.matrix;if(v.resolution){filter.resolution=v.resolution;}if(v.matrix&&v.matrix.length===startMatrix.length){matrix=v.matrix;if(cache.contrast!==1){_addColorMatrixFilterCacheTween("contrast",pg,cache,_CMFdefaults);}if(cache.hue){_addColorMatrixFilterCacheTween("hue",pg,cache,_CMFdefaults);}if(cache.brightness!==1){_addColorMatrixFilterCacheTween("brightness",pg,cache,_CMFdefaults);}if(cache.colorizeAmount){_addColorMatrixFilterCacheTween("colorize",pg,cache,_CMFdefaults);_addColorMatrixFilterCacheTween("colorizeAmount",pg,cache,_CMFdefaults);}if(cache.saturation!==1){_addColorMatrixFilterCacheTween("saturation",pg,cache,_CMFdefaults);}}else{matrix=_idMatrix$1.slice();if(v.contrast!=null){matrix=_setContrast$1(matrix,+v.contrast);_addColorMatrixFilterCacheTween("contrast",pg,cache,v);}else if(cache.contrast!==1){if(combine){matrix=_setContrast$1(matrix,cache.contrast);}else{_addColorMatrixFilterCacheTween("contrast",pg,cache,_CMFdefaults);}}if(v.hue!=null){matrix=_setHue$1(matrix,+v.hue);_addColorMatrixFilterCacheTween("hue",pg,cache,v);}else if(cache.hue){if(combine){matrix=_setHue$1(matrix,cache.hue);}else{_addColorMatrixFilterCacheTween("hue",pg,cache,_CMFdefaults);}}if(v.brightness!=null){matrix=_applyBrightnessToMatrix(+v.brightness,matrix);_addColorMatrixFilterCacheTween("brightness",pg,cache,v);}else if(cache.brightness!==1){if(combine){matrix=_applyBrightnessToMatrix(cache.brightness,matrix);}else{_addColorMatrixFilterCacheTween("brightness",pg,cache,_CMFdefaults);}}if(v.colorize!=null){v.colorizeAmount="colorizeAmount"in v?+v.colorizeAmount:1;matrix=_colorize$1(matrix,v.colorize,v.colorizeAmount);_addColorMatrixFilterCacheTween("colorize",pg,cache,v);_addColorMatrixFilterCacheTween("colorizeAmount",pg,cache,v);}else if(cache.colorizeAmount){if(combine){matrix=_colorize$1(matrix,cache.colorize,cache.colorizeAmount);}else{_addColorMatrixFilterCacheTween("colorize",pg,cache,_CMFdefaults);_addColorMatrixFilterCacheTween("colorizeAmount",pg,cache,_CMFdefaults);}}if(v.saturation!=null){matrix=_setSaturation$1(matrix,+v.saturation);_addColorMatrixFilterCacheTween("saturation",pg,cache,v);}else if(cache.saturation!==1){if(combine){matrix=_setSaturation$1(matrix,cache.saturation);}else{_addColorMatrixFilterCacheTween("saturation",pg,cache,_CMFdefaults);}}}i=matrix.length;while(--i>-1){if(matrix[i]!==startMatrix[i]){pg.add(startMatrix,i,startMatrix[i],matrix[i],"colorMatrixFilter");}}pg._props.push("colorMatrixFilter");},_renderColor=function _renderColor(ratio,_ref){var t=_ref.t,p=_ref.p,color=_ref.color,set=_ref.set;set(t,p,color[0]<<16|color[1]<<8|color[2]);},_renderDirtyCache=function _renderDirtyCache(ratio,_ref2){var g=_ref2.g;if(g){g.dirty++;g.clearDirty++;}},_renderAutoAlpha=function _renderAutoAlpha(ratio,data){data.t.visible=!!data.t.alpha;},_addColorTween=function _addColorTween(target,p,value,plugin){var currentValue=target[p],startColor=_splitColor(_isFunction$2(currentValue)?target[p.indexOf("set")||!_isFunction$2(target["get"+p.substr(3)])?p:"get"+p.substr(3)]():currentValue),endColor=_splitColor(value);plugin._pt=new PropTween$2(plugin._pt,target,p,0,0,_renderColor,{t:target,p:p,color:startColor,set:_getSetter$1(target,p)});plugin.add(startColor,0,startColor[0],endColor[0]);plugin.add(startColor,1,startColor[1],endColor[1]);plugin.add(startColor,2,startColor[2],endColor[2]);},_colorProps$1={tint:1,lineColor:1,fillColor:1},_xyContexts="position,scale,skew,pivot,anchor,tilePosition,tileScale".split(","),_contexts={x:"position",y:"position",tileX:"tilePosition",tileY:"tilePosition"},_colorMatrixFilterProps={colorMatrixFilter:1,saturation:1,contrast:1,hue:1,colorize:1,colorizeAmount:1,brightness:1,combineCMF:1},_DEG2RAD$4=Math.PI/180,_isString$2=function _isString(value){return typeof value==="string";},_degreesToRadians=function _degreesToRadians(value){return _isString$2(value)&&value.charAt(1)==="="?value.substr(0,2)+parseFloat(value.substr(2))*_DEG2RAD$4:value*_DEG2RAD$4;},_renderPropWithEnd$1=function _renderPropWithEnd(ratio,data){return data.set(data.t,data.p,ratio===1?data.e:Math.round((data.s+data.c*ratio)*100000)/100000,data);},_addRotationalPropTween$1=function _addRotationalPropTween(plugin,target,property,startNum,endValue,radians){var cap=360*(radians?_DEG2RAD$4:1),isString=_isString$2(endValue),relative=isString&&endValue.charAt(1)==="="?+(endValue.charAt(0)+"1"):0,endNum=parseFloat(relative?endValue.substr(2):endValue)*(radians?_DEG2RAD$4:1),change=relative?endNum*relative:endNum-startNum,finalValue=startNum+change,direction,pt;if(isString){direction=endValue.split("_")[1];if(direction==="short"){change%=cap;if(change!==change%(cap/2)){change+=change<0?cap:-cap;}}if(direction==="cw"&&change<0){change=(change+cap*1e10)%cap-~~(change/cap)*cap;}else if(direction==="ccw"&&change>0){change=(change-cap*1e10)%cap-~~(change/cap)*cap;}}plugin._pt=pt=new PropTween$2(plugin._pt,target,property,startNum,change,_renderPropWithEnd$1);pt.e=finalValue;return pt;},_initCore$7=function _initCore(){if(_windowExists$5()){_win$6=window;gsap$9=_getGSAP$7();_PIXI=_coreInitted$6=_PIXI||_win$6.PIXI;_isV4=_PIXI&&_PIXI.VERSION&&_PIXI.VERSION.charAt(0)==="4";_splitColor=function _splitColor(color){return gsap$9.utils.splitColor((color+"").substr(0,2)==="0x"?"#"+color.substr(2):color);};}},i,p$1;for(i=0;i<_xyContexts.length;i++){p$1=_xyContexts[i];_contexts[p$1+"X"]=p$1;_contexts[p$1+"Y"]=p$1;}var PixiPlugin={version:"3.11.5",name:"pixi",register:function register(core,Plugin,propTween){gsap$9=core;PropTween$2=propTween;_getSetter$1=Plugin.getSetter;_initCore$7();},registerPIXI:function registerPIXI(pixi){_PIXI=pixi;},init:function init(target,values,tween,index,targets){_PIXI||_initCore$7();if(!_PIXI||!(target instanceof _PIXI.DisplayObject)){console.warn(target,"is not a DisplayObject or PIXI was not found. PixiPlugin.registerPIXI(PIXI);");return false;}var context,axis,value,colorMatrix,filter,p,padding,i,data;for(p in values){context=_contexts[p];value=values[p];if(context){axis=~p.charAt(p.length-1).toLowerCase().indexOf("x")?"x":"y";this.add(target[context],axis,target[context][axis],context==="skew"?_degreesToRadians(value):value,0,0,0,0,0,1);}else if(p==="scale"||p==="anchor"||p==="pivot"||p==="tileScale"){this.add(target[p],"x",target[p].x,value);this.add(target[p],"y",target[p].y,value);}else if(p==="rotation"||p==="angle"){_addRotationalPropTween$1(this,target,p,target[p],value,p==="rotation");}else if(_colorMatrixFilterProps[p]){if(!colorMatrix){_parseColorMatrixFilter$1(target,values.colorMatrixFilter||values,this);colorMatrix=true;}}else if(p==="blur"||p==="blurX"||p==="blurY"||p==="blurPadding"){filter=_getFilter(target,"BlurFilter");this.add(filter,p,filter[p],value);if(values.blurPadding!==0){padding=values.blurPadding||Math.max(filter[p],value)*2;i=target.filters.length;while(--i>-1){target.filters[i].padding=Math.max(target.filters[i].padding,padding);}}}else if(_colorProps$1[p]){if((p==="lineColor"||p==="fillColor")&&target instanceof _PIXI.Graphics){data=(target.geometry||target).graphicsData;this._pt=new PropTween$2(this._pt,target,p,0,0,_renderDirtyCache,{g:target.geometry||target});i=data.length;while(--i>-1){_addColorTween(_isV4?data[i]:data[i][p.substr(0,4)+"Style"],_isV4?p:"color",value,this);}}else{_addColorTween(target,p,value,this);}}else if(p==="autoAlpha"){this._pt=new PropTween$2(this._pt,target,"visible",0,0,_renderAutoAlpha);this.add(target,"alpha",target.alpha,value);this._props.push("alpha","visible");}else if(p!=="resolution"){this.add(target,p,"get",value);}this._props.push(p);}}};_getGSAP$7()&&gsap$9.registerPlugin(PixiPlugin);/*!
   * ScrollToPlugin 3.11.5
   * https://greensock.com
   *
   * @license Copyright 2008-2023, GreenSock. All rights reserved.
   * Subject to the terms at https://greensock.com/standard-license or for
   * Club GreenSock members, the agreement issued with that membership.
   * @author: Jack Doyle, jack@greensock.com
  */var gsap$a,_coreInitted$7,_window,_docEl$1,_body$4,_toArray$3,_config$1,ScrollTrigger$1,_windowExists$6=function _windowExists(){return typeof window!=="undefined";},_getGSAP$8=function _getGSAP(){return gsap$a||_windowExists$6()&&(gsap$a=window.gsap)&&gsap$a.registerPlugin&&gsap$a;},_isString$3=function _isString(value){return typeof value==="string";},_isFunction$3=function _isFunction(value){return typeof value==="function";},_max=function _max(element,axis){var dim=axis==="x"?"Width":"Height",scroll="scroll"+dim,client="client"+dim;return element===_window||element===_docEl$1||element===_body$4?Math.max(_docEl$1[scroll],_body$4[scroll])-(_window["inner"+dim]||_docEl$1[client]||_body$4[client]):element[scroll]-element["offset"+dim];},_buildGetter=function _buildGetter(e,axis){var p="scroll"+(axis==="x"?"Left":"Top");if(e===_window){if(e.pageXOffset!=null){p="page"+axis.toUpperCase()+"Offset";}else{e=_docEl$1[p]!=null?_docEl$1:_body$4;}}return function(){return e[p];};},_clean=function _clean(value,index,target,targets){_isFunction$3(value)&&(value=value(index,target,targets));if(_typeof(value)!=="object"){return _isString$3(value)&&value!=="max"&&value.charAt(1)!=="="?{x:value,y:value}:{y:value};}else if(value.nodeType){return{y:value,x:value};}else{var result={},p;for(p in value){result[p]=p!=="onAutoKill"&&_isFunction$3(value[p])?value[p](index,target,targets):value[p];}return result;}},_getOffset=function _getOffset(element,container){element=_toArray$3(element)[0];if(!element||!element.getBoundingClientRect){return console.warn("scrollTo target doesn't exist. Using 0")||{x:0,y:0};}var rect=element.getBoundingClientRect(),isRoot=!container||container===_window||container===_body$4,cRect=isRoot?{top:_docEl$1.clientTop-(_window.pageYOffset||_docEl$1.scrollTop||_body$4.scrollTop||0),left:_docEl$1.clientLeft-(_window.pageXOffset||_docEl$1.scrollLeft||_body$4.scrollLeft||0)}:container.getBoundingClientRect(),offsets={x:rect.left-cRect.left,y:rect.top-cRect.top};if(!isRoot&&container){offsets.x+=_buildGetter(container,"x")();offsets.y+=_buildGetter(container,"y")();}return offsets;},_parseVal=function _parseVal(value,target,axis,currentVal,offset){return!isNaN(value)&&_typeof(value)!=="object"?parseFloat(value)-offset:_isString$3(value)&&value.charAt(1)==="="?parseFloat(value.substr(2))*(value.charAt(0)==="-"?-1:1)+currentVal-offset:value==="max"?_max(target,axis)-offset:Math.min(_max(target,axis),_getOffset(value,target)[axis]-offset);},_initCore$8=function _initCore(){gsap$a=_getGSAP$8();if(_windowExists$6()&&gsap$a&&typeof document!=="undefined"&&document.body){_window=window;_body$4=document.body;_docEl$1=document.documentElement;_toArray$3=gsap$a.utils.toArray;gsap$a.config({autoKillThreshold:7});_config$1=gsap$a.config();_coreInitted$7=1;}};var ScrollToPlugin={version:"3.11.5",name:"scrollTo",rawVars:1,register:function register(core){gsap$a=core;_initCore$8();},init:function init(target,value,tween,index,targets){_coreInitted$7||_initCore$8();var data=this,snapType=gsap$a.getProperty(target,"scrollSnapType");data.isWin=target===_window;data.target=target;data.tween=tween;value=_clean(value,index,target,targets);data.vars=value;data.autoKill=!!value.autoKill;data.getX=_buildGetter(target,"x");data.getY=_buildGetter(target,"y");data.x=data.xPrev=data.getX();data.y=data.yPrev=data.getY();ScrollTrigger$1||(ScrollTrigger$1=gsap$a.core.globals().ScrollTrigger);gsap$a.getProperty(target,"scrollBehavior")==="smooth"&&gsap$a.set(target,{scrollBehavior:"auto"});if(snapType&&snapType!=="none"){data.snap=1;data.snapInline=target.style.scrollSnapType;target.style.scrollSnapType="none";}if(value.x!=null){data.add(data,"x",data.x,_parseVal(value.x,target,"x",data.x,value.offsetX||0),index,targets);data._props.push("scrollTo_x");}else{data.skipX=1;}if(value.y!=null){data.add(data,"y",data.y,_parseVal(value.y,target,"y",data.y,value.offsetY||0),index,targets);data._props.push("scrollTo_y");}else{data.skipY=1;}},render:function render(ratio,data){var pt=data._pt,target=data.target,tween=data.tween,autoKill=data.autoKill,xPrev=data.xPrev,yPrev=data.yPrev,isWin=data.isWin,snap=data.snap,snapInline=data.snapInline,x,y,yDif,xDif,threshold;while(pt){pt.r(ratio,pt.d);pt=pt._next;}x=isWin||!data.skipX?data.getX():xPrev;y=isWin||!data.skipY?data.getY():yPrev;yDif=y-yPrev;xDif=x-xPrev;threshold=_config$1.autoKillThreshold;if(data.x<0){data.x=0;}if(data.y<0){data.y=0;}if(autoKill){if(!data.skipX&&(xDif>threshold||xDif<-threshold)&&x<_max(target,"x")){data.skipX=1;}if(!data.skipY&&(yDif>threshold||yDif<-threshold)&&y<_max(target,"y")){data.skipY=1;}if(data.skipX&&data.skipY){tween.kill();data.vars.onAutoKill&&data.vars.onAutoKill.apply(tween,data.vars.onAutoKillParams||[]);}}if(isWin){_window.scrollTo(!data.skipX?data.x:x,!data.skipY?data.y:y);}else{data.skipY||(target.scrollTop=data.y);data.skipX||(target.scrollLeft=data.x);}if(snap&&(ratio===1||ratio===0)){y=target.scrollTop;x=target.scrollLeft;snapInline?target.style.scrollSnapType=snapInline:target.style.removeProperty("scroll-snap-type");target.scrollTop=y+1;target.scrollLeft=x+1;target.scrollTop=y;target.scrollLeft=x;}data.xPrev=data.x;data.yPrev=data.y;ScrollTrigger$1&&ScrollTrigger$1.update();},kill:function kill(property){var both=property==="scrollTo";if(both||property==="scrollTo_x"){this.skipX=1;}if(both||property==="scrollTo_y"){this.skipY=1;}}};ScrollToPlugin.max=_max;ScrollToPlugin.getOffset=_getOffset;ScrollToPlugin.buildGetter=_buildGetter;_getGSAP$8()&&gsap$a.registerPlugin(ScrollToPlugin);/*!
   * ScrollTrigger 3.11.5
   * https://greensock.com
   *
   * @license Copyright 2008-2023, GreenSock. All rights reserved.
   * Subject to the terms at https://greensock.com/standard-license or for
   * Club GreenSock members, the agreement issued with that membership.
   * @author: Jack Doyle, jack@greensock.com
  */var gsap$b,_coreInitted$8,_win$7,_doc$6,_docEl$2,_body$5,_root$1,_resizeDelay,_toArray$4,_clamp$2,_time2,_syncInterval,_refreshing,_pointerIsDown,_transformProp$3,_i,_prevWidth,_prevHeight,_autoRefresh,_sort,_suppressOverwrites$1,_ignoreResize,_normalizer$1,_ignoreMobileResize,_baseScreenHeight,_baseScreenWidth,_fixIOSBug,_context$3,_scrollRestoration,_limitCallbacks,_startup$1=1,_getTime$2=Date.now,_time1=_getTime$2(),_lastScrollTime=0,_enabled=0,_rafBugFix=function _rafBugFix(){return _enabled&&requestAnimationFrame(_rafBugFix);},_pointerDownHandler=function _pointerDownHandler(){return _pointerIsDown=1;},_pointerUpHandler=function _pointerUpHandler(){return _pointerIsDown=0;},_passThrough$1=function _passThrough(v){return v;},_round$5=function _round(value){return Math.round(value*100000)/100000||0;},_windowExists$7=function _windowExists(){return typeof window!=="undefined";},_getGSAP$9=function _getGSAP(){return gsap$b||_windowExists$7()&&(gsap$b=window.gsap)&&gsap$b.registerPlugin&&gsap$b;},_isViewport$1=function _isViewport(e){return!!~_root$1.indexOf(e);},_getBoundsFunc=function _getBoundsFunc(element){return _getProxyProp(element,"getBoundingClientRect")||(_isViewport$1(element)?function(){_winOffsets.width=_win$7.innerWidth;_winOffsets.height=_win$7.innerHeight;return _winOffsets;}:function(){return _getBounds$1(element);});},_getSizeFunc=function _getSizeFunc(scroller,isViewport,_ref){var d=_ref.d,d2=_ref.d2,a=_ref.a;return(a=_getProxyProp(scroller,"getBoundingClientRect"))?function(){return a()[d];}:function(){return(isViewport?_win$7["inner"+d2]:scroller["client"+d2])||0;};},_getOffsetsFunc=function _getOffsetsFunc(element,isViewport){return!isViewport||~exports._proxies.indexOf(element)?_getBoundsFunc(element):function(){return _winOffsets;};},_maxScroll=function _maxScroll(element,_ref2){var s=_ref2.s,d2=_ref2.d2,d=_ref2.d,a=_ref2.a;return Math.max(0,(s="scroll"+d2)&&(a=_getProxyProp(element,s))?a()-_getBoundsFunc(element)()[d]:_isViewport$1(element)?(_docEl$2[s]||_body$5[s])-(_win$7["inner"+d2]||_docEl$2["client"+d2]||_body$5["client"+d2]):element[s]-element["offset"+d2]);},_iterateAutoRefresh=function _iterateAutoRefresh(func,events){for(var i=0;i<_autoRefresh.length;i+=3){(!events||~events.indexOf(_autoRefresh[i+1]))&&func(_autoRefresh[i],_autoRefresh[i+1],_autoRefresh[i+2]);}},_isString$4=function _isString(value){return typeof value==="string";},_isFunction$4=function _isFunction(value){return typeof value==="function";},_isNumber$2=function _isNumber(value){return typeof value==="number";},_isObject$2=function _isObject(value){return _typeof(value)==="object";},_endAnimation=function _endAnimation(animation,reversed,pause){return animation&&animation.progress(reversed?0:1)&&pause&&animation.pause();},_callback$1=function _callback(self,func){if(self.enabled){var result=func(self);result&&result.totalTime&&(self.callbackAnimation=result);}},_abs$1=Math.abs,_left="left",_top="top",_right="right",_bottom="bottom",_width="width",_height="height",_Right="Right",_Left="Left",_Top="Top",_Bottom="Bottom",_padding="padding",_margin="margin",_Width="Width",_Height="Height",_px="px",_getComputedStyle$1=function _getComputedStyle(element){return _win$7.getComputedStyle(element);},_makePositionable=function _makePositionable(element){var position=_getComputedStyle$1(element).position;element.style.position=position==="absolute"||position==="fixed"?position:"relative";},_setDefaults$2=function _setDefaults(obj,defaults){for(var p in defaults){p in obj||(obj[p]=defaults[p]);}return obj;},_getBounds$1=function _getBounds(element,withoutTransforms){var tween=withoutTransforms&&_getComputedStyle$1(element)[_transformProp$3]!=="matrix(1, 0, 0, 1, 0, 0)"&&gsap$b.to(element,{x:0,y:0,xPercent:0,yPercent:0,rotation:0,rotationX:0,rotationY:0,scale:1,skewX:0,skewY:0}).progress(1),bounds=element.getBoundingClientRect();tween&&tween.progress(0).kill();return bounds;},_getSize=function _getSize(element,_ref3){var d2=_ref3.d2;return element["offset"+d2]||element["client"+d2]||0;},_getLabelRatioArray=function _getLabelRatioArray(timeline){var a=[],labels=timeline.labels,duration=timeline.duration(),p;for(p in labels){a.push(labels[p]/duration);}return a;},_getClosestLabel=function _getClosestLabel(animation){return function(value){return gsap$b.utils.snap(_getLabelRatioArray(animation),value);};},_snapDirectional=function _snapDirectional(snapIncrementOrArray){var snap=gsap$b.utils.snap(snapIncrementOrArray),a=Array.isArray(snapIncrementOrArray)&&snapIncrementOrArray.slice(0).sort(function(a,b){return a-b;});return a?function(value,direction,threshold){if(threshold===void 0){threshold=1e-3;}var i;if(!direction){return snap(value);}if(direction>0){value-=threshold;for(i=0;i<a.length;i++){if(a[i]>=value){return a[i];}}return a[i-1];}else{i=a.length;value+=threshold;while(i--){if(a[i]<=value){return a[i];}}}return a[0];}:function(value,direction,threshold){if(threshold===void 0){threshold=1e-3;}var snapped=snap(value);return!direction||Math.abs(snapped-value)<threshold||snapped-value<0===direction<0?snapped:snap(direction<0?value-snapIncrementOrArray:value+snapIncrementOrArray);};},_getLabelAtDirection=function _getLabelAtDirection(timeline){return function(value,st){return _snapDirectional(_getLabelRatioArray(timeline))(value,st.direction);};},_multiListener=function _multiListener(func,element,types,callback){return types.split(",").forEach(function(type){return func(element,type,callback);});},_addListener$2=function _addListener(element,type,func,nonPassive,capture){return element.addEventListener(type,func,{passive:!nonPassive,capture:!!capture});},_removeListener$2=function _removeListener(element,type,func,capture){return element.removeEventListener(type,func,!!capture);},_wheelListener=function _wheelListener(func,el,scrollFunc){scrollFunc=scrollFunc&&scrollFunc.wheelHandler;if(scrollFunc){func(el,"wheel",scrollFunc);func(el,"touchmove",scrollFunc);}},_markerDefaults={startColor:"green",endColor:"red",indent:0,fontSize:"16px",fontWeight:"normal"},_defaults$1={toggleActions:"play",anticipatePin:0},_keywords={top:0,left:0,center:0.5,bottom:1,right:1},_offsetToPx=function _offsetToPx(value,size){if(_isString$4(value)){var eqIndex=value.indexOf("="),relative=~eqIndex?+(value.charAt(eqIndex-1)+1)*parseFloat(value.substr(eqIndex+1)):0;if(~eqIndex){value.indexOf("%")>eqIndex&&(relative*=size/100);value=value.substr(0,eqIndex-1);}value=relative+(value in _keywords?_keywords[value]*size:~value.indexOf("%")?parseFloat(value)*size/100:parseFloat(value)||0);}return value;},_createMarker=function _createMarker(type,name,container,direction,_ref4,offset,matchWidthEl,containerAnimation){var startColor=_ref4.startColor,endColor=_ref4.endColor,fontSize=_ref4.fontSize,indent=_ref4.indent,fontWeight=_ref4.fontWeight;var e=_doc$6.createElement("div"),useFixedPosition=_isViewport$1(container)||_getProxyProp(container,"pinType")==="fixed",isScroller=type.indexOf("scroller")!==-1,parent=useFixedPosition?_body$5:container,isStart=type.indexOf("start")!==-1,color=isStart?startColor:endColor,css="border-color:"+color+";font-size:"+fontSize+";color:"+color+";font-weight:"+fontWeight+";pointer-events:none;white-space:nowrap;font-family:sans-serif,Arial;z-index:1000;padding:4px 8px;border-width:0;border-style:solid;";css+="position:"+((isScroller||containerAnimation)&&useFixedPosition?"fixed;":"absolute;");(isScroller||containerAnimation||!useFixedPosition)&&(css+=(direction===_vertical?_right:_bottom)+":"+(offset+parseFloat(indent))+"px;");matchWidthEl&&(css+="box-sizing:border-box;text-align:left;width:"+matchWidthEl.offsetWidth+"px;");e._isStart=isStart;e.setAttribute("class","gsap-marker-"+type+(name?" marker-"+name:""));e.style.cssText=css;e.innerText=name||name===0?type+"-"+name:type;parent.children[0]?parent.insertBefore(e,parent.children[0]):parent.appendChild(e);e._offset=e["offset"+direction.op.d2];_positionMarker(e,0,direction,isStart);return e;},_positionMarker=function _positionMarker(marker,start,direction,flipped){var vars={display:"block"},side=direction[flipped?"os2":"p2"],oppositeSide=direction[flipped?"p2":"os2"];marker._isFlipped=flipped;vars[direction.a+"Percent"]=flipped?-100:0;vars[direction.a]=flipped?"1px":0;vars["border"+side+_Width]=1;vars["border"+oppositeSide+_Width]=0;vars[direction.p]=start+"px";gsap$b.set(marker,vars);},_triggers=[],_ids={},_rafID,_sync=function _sync(){return _getTime$2()-_lastScrollTime>34&&(_rafID||(_rafID=requestAnimationFrame(_updateAll)));},_onScroll$1=function _onScroll(){if(!_normalizer$1||!_normalizer$1.isPressed||_normalizer$1.startX>_body$5.clientWidth){exports._scrollers.cache++;if(_normalizer$1){_rafID||(_rafID=requestAnimationFrame(_updateAll));}else{_updateAll();}_lastScrollTime||_dispatch$1("scrollStart");_lastScrollTime=_getTime$2();}},_setBaseDimensions=function _setBaseDimensions(){_baseScreenWidth=_win$7.innerWidth;_baseScreenHeight=_win$7.innerHeight;},_onResize=function _onResize(){exports._scrollers.cache++;!_refreshing&&!_ignoreResize&&!_doc$6.fullscreenElement&&!_doc$6.webkitFullscreenElement&&(!_ignoreMobileResize||_baseScreenWidth!==_win$7.innerWidth||Math.abs(_win$7.innerHeight-_baseScreenHeight)>_win$7.innerHeight*0.25)&&_resizeDelay.restart(true);},_listeners$1={},_emptyArray$1=[],_softRefresh=function _softRefresh(){return _removeListener$2(ScrollTrigger$2,"scrollEnd",_softRefresh)||_refreshAll(true);},_dispatch$1=function _dispatch(type){return _listeners$1[type]&&_listeners$1[type].map(function(f){return f();})||_emptyArray$1;},_savedStyles=[],_revertRecorded=function _revertRecorded(media){for(var i=0;i<_savedStyles.length;i+=5){if(!media||_savedStyles[i+4]&&_savedStyles[i+4].query===media){_savedStyles[i].style.cssText=_savedStyles[i+1];_savedStyles[i].getBBox&&_savedStyles[i].setAttribute("transform",_savedStyles[i+2]||"");_savedStyles[i+3].uncache=1;}}},_revertAll=function _revertAll(kill,media){var trigger;for(_i=0;_i<_triggers.length;_i++){trigger=_triggers[_i];if(trigger&&(!media||trigger._ctx===media)){if(kill){trigger.kill(1);}else{trigger.revert(true,true);}}}media&&_revertRecorded(media);media||_dispatch$1("revert");},_clearScrollMemory=function _clearScrollMemory(scrollRestoration,force){exports._scrollers.cache++;(force||!_refreshingAll)&&exports._scrollers.forEach(function(obj){return _isFunction$4(obj)&&obj.cacheID++&&(obj.rec=0);});_isString$4(scrollRestoration)&&(_win$7.history.scrollRestoration=_scrollRestoration=scrollRestoration);},_refreshingAll,_refreshID=0,_queueRefreshID,_queueRefreshAll=function _queueRefreshAll(){if(_queueRefreshID!==_refreshID){var id=_queueRefreshID=_refreshID;requestAnimationFrame(function(){return id===_refreshID&&_refreshAll(true);});}},_refreshAll=function _refreshAll(force,skipRevert){if(_lastScrollTime&&!force){_addListener$2(ScrollTrigger$2,"scrollEnd",_softRefresh);return;}_refreshingAll=ScrollTrigger$2.isRefreshing=true;exports._scrollers.forEach(function(obj){return _isFunction$4(obj)&&obj.cacheID++&&(obj.rec=obj());});var refreshInits=_dispatch$1("refreshInit");_sort&&ScrollTrigger$2.sort();skipRevert||_revertAll();exports._scrollers.forEach(function(obj){if(_isFunction$4(obj)){obj.smooth&&(obj.target.style.scrollBehavior="auto");obj(0);}});_triggers.slice(0).forEach(function(t){return t.refresh();});_triggers.forEach(function(t,i){if(t._subPinOffset&&t.pin){var prop=t.vars.horizontal?"offsetWidth":"offsetHeight",original=t.pin[prop];t.revert(true,1);t.adjustPinSpacing(t.pin[prop]-original);t.refresh();}});_triggers.forEach(function(t){return t.vars.end==="max"&&t.setPositions(t.start,Math.max(t.start+1,_maxScroll(t.scroller,t._dir)));});refreshInits.forEach(function(result){return result&&result.render&&result.render(-1);});exports._scrollers.forEach(function(obj){if(_isFunction$4(obj)){obj.smooth&&requestAnimationFrame(function(){return obj.target.style.scrollBehavior="smooth";});obj.rec&&obj(obj.rec);}});_clearScrollMemory(_scrollRestoration,1);_resizeDelay.pause();_refreshID++;_refreshingAll=2;_updateAll(2);_triggers.forEach(function(t){return _isFunction$4(t.vars.onRefresh)&&t.vars.onRefresh(t);});_refreshingAll=ScrollTrigger$2.isRefreshing=false;_dispatch$1("refresh");},_lastScroll=0,_direction=1,_primary,_updateAll=function _updateAll(force){if(!_refreshingAll||force===2){ScrollTrigger$2.isUpdating=true;_primary&&_primary.update(0);var l=_triggers.length,time=_getTime$2(),recordVelocity=time-_time1>=50,scroll=l&&_triggers[0].scroll();_direction=_lastScroll>scroll?-1:1;_refreshingAll||(_lastScroll=scroll);if(recordVelocity){if(_lastScrollTime&&!_pointerIsDown&&time-_lastScrollTime>200){_lastScrollTime=0;_dispatch$1("scrollEnd");}_time2=_time1;_time1=time;}if(_direction<0){_i=l;while(_i-->0){_triggers[_i]&&_triggers[_i].update(0,recordVelocity);}_direction=1;}else{for(_i=0;_i<l;_i++){_triggers[_i]&&_triggers[_i].update(0,recordVelocity);}}ScrollTrigger$2.isUpdating=false;}_rafID=0;},_propNamesToCopy=[_left,_top,_bottom,_right,_margin+_Bottom,_margin+_Right,_margin+_Top,_margin+_Left,"display","flexShrink","float","zIndex","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","gridArea","justifySelf","alignSelf","placeSelf","order"],_stateProps=_propNamesToCopy.concat([_width,_height,"boxSizing","max"+_Width,"max"+_Height,"position",_margin,_padding,_padding+_Top,_padding+_Right,_padding+_Bottom,_padding+_Left]),_swapPinOut=function _swapPinOut(pin,spacer,state){_setState(state);var cache=pin._gsap;if(cache.spacerIsNative){_setState(cache.spacerState);}else if(pin._gsap.swappedIn){var parent=spacer.parentNode;if(parent){parent.insertBefore(pin,spacer);parent.removeChild(spacer);}}pin._gsap.swappedIn=false;},_swapPinIn=function _swapPinIn(pin,spacer,cs,spacerState){if(!pin._gsap.swappedIn){var i=_propNamesToCopy.length,spacerStyle=spacer.style,pinStyle=pin.style,p;while(i--){p=_propNamesToCopy[i];spacerStyle[p]=cs[p];}spacerStyle.position=cs.position==="absolute"?"absolute":"relative";cs.display==="inline"&&(spacerStyle.display="inline-block");pinStyle[_bottom]=pinStyle[_right]="auto";spacerStyle.flexBasis=cs.flexBasis||"auto";spacerStyle.overflow="visible";spacerStyle.boxSizing="border-box";spacerStyle[_width]=_getSize(pin,_horizontal)+_px;spacerStyle[_height]=_getSize(pin,_vertical)+_px;spacerStyle[_padding]=pinStyle[_margin]=pinStyle[_top]=pinStyle[_left]="0";_setState(spacerState);pinStyle[_width]=pinStyle["max"+_Width]=cs[_width];pinStyle[_height]=pinStyle["max"+_Height]=cs[_height];pinStyle[_padding]=cs[_padding];if(pin.parentNode!==spacer){pin.parentNode.insertBefore(spacer,pin);spacer.appendChild(pin);}pin._gsap.swappedIn=true;}},_capsExp$1=/([A-Z])/g,_setState=function _setState(state){if(state){var style=state.t.style,l=state.length,i=0,p,value;(state.t._gsap||gsap$b.core.getCache(state.t)).uncache=1;for(;i<l;i+=2){value=state[i+1];p=state[i];if(value){style[p]=value;}else if(style[p]){style.removeProperty(p.replace(_capsExp$1,"-$1").toLowerCase());}}}},_getState=function _getState(element){var l=_stateProps.length,style=element.style,state=[],i=0;for(;i<l;i++){state.push(_stateProps[i],style[_stateProps[i]]);}state.t=element;return state;},_copyState=function _copyState(state,override,omitOffsets){var result=[],l=state.length,i=omitOffsets?8:0,p;for(;i<l;i+=2){p=state[i];result.push(p,p in override?override[p]:state[i+1]);}result.t=state.t;return result;},_winOffsets={left:0,top:0},_parsePosition$1=function _parsePosition(value,trigger,scrollerSize,direction,scroll,marker,markerScroller,self,scrollerBounds,borderWidth,useFixedPosition,scrollerMax,containerAnimation){_isFunction$4(value)&&(value=value(self));if(_isString$4(value)&&value.substr(0,3)==="max"){value=scrollerMax+(value.charAt(4)==="="?_offsetToPx("0"+value.substr(3),scrollerSize):0);}var time=containerAnimation?containerAnimation.time():0,p1,p2,element;containerAnimation&&containerAnimation.seek(0);if(!_isNumber$2(value)){_isFunction$4(trigger)&&(trigger=trigger(self));var offsets=(value||"0").split(" "),bounds,localOffset,globalOffset,display;element=_getTarget(trigger)||_body$5;bounds=_getBounds$1(element)||{};if((!bounds||!bounds.left&&!bounds.top)&&_getComputedStyle$1(element).display==="none"){display=element.style.display;element.style.display="block";bounds=_getBounds$1(element);display?element.style.display=display:element.style.removeProperty("display");}localOffset=_offsetToPx(offsets[0],bounds[direction.d]);globalOffset=_offsetToPx(offsets[1]||"0",scrollerSize);value=bounds[direction.p]-scrollerBounds[direction.p]-borderWidth+localOffset+scroll-globalOffset;markerScroller&&_positionMarker(markerScroller,globalOffset,direction,scrollerSize-globalOffset<20||markerScroller._isStart&&globalOffset>20);scrollerSize-=scrollerSize-globalOffset;}else{containerAnimation&&(value=gsap$b.utils.mapRange(containerAnimation.scrollTrigger.start,containerAnimation.scrollTrigger.end,0,scrollerMax,value));markerScroller&&_positionMarker(markerScroller,scrollerSize,direction,true);}if(marker){var position=value+scrollerSize,isStart=marker._isStart;p1="scroll"+direction.d2;_positionMarker(marker,position,direction,isStart&&position>20||!isStart&&(useFixedPosition?Math.max(_body$5[p1],_docEl$2[p1]):marker.parentNode[p1])<=position+1);if(useFixedPosition){scrollerBounds=_getBounds$1(markerScroller);useFixedPosition&&(marker.style[direction.op.p]=scrollerBounds[direction.op.p]-direction.op.m-marker._offset+_px);}}if(containerAnimation&&element){p1=_getBounds$1(element);containerAnimation.seek(scrollerMax);p2=_getBounds$1(element);containerAnimation._caScrollDist=p1[direction.p]-p2[direction.p];value=value/containerAnimation._caScrollDist*scrollerMax;}containerAnimation&&containerAnimation.seek(time);return containerAnimation?value:Math.round(value);},_prefixExp=/(webkit|moz|length|cssText|inset)/i,_reparent=function _reparent(element,parent,top,left){if(element.parentNode!==parent){var style=element.style,p,cs;if(parent===_body$5){element._stOrig=style.cssText;cs=_getComputedStyle$1(element);for(p in cs){if(!+p&&!_prefixExp.test(p)&&cs[p]&&typeof style[p]==="string"&&p!=="0"){style[p]=cs[p];}}style.top=top;style.left=left;}else{style.cssText=element._stOrig;}gsap$b.core.getCache(element).uncache=1;parent.appendChild(element);}},_interruptionTracker=function _interruptionTracker(getValueFunc,initialValue,onInterrupt){var last1=initialValue,last2=last1;return function(value){var current=Math.round(getValueFunc());if(current!==last1&&current!==last2&&Math.abs(current-last1)>3&&Math.abs(current-last2)>3){value=current;onInterrupt&&onInterrupt();}last2=last1;last1=value;return value;};},_getTweenCreator=function _getTweenCreator(scroller,direction){var getScroll=_getScrollFunc(scroller,direction),prop="_scroll"+direction.p2,getTween=function getTween(scrollTo,vars,initialValue,change1,change2){var tween=getTween.tween,onComplete=vars.onComplete,modifiers={};initialValue=initialValue||getScroll();var checkForInterruption=_interruptionTracker(getScroll,initialValue,function(){tween.kill();getTween.tween=0;});change2=change1&&change2||0;change1=change1||scrollTo-initialValue;tween&&tween.kill();vars[prop]=scrollTo;vars.modifiers=modifiers;modifiers[prop]=function(){return checkForInterruption(initialValue+change1*tween.ratio+change2*tween.ratio*tween.ratio);};vars.onUpdate=function(){exports._scrollers.cache++;_updateAll();};vars.onComplete=function(){getTween.tween=0;onComplete&&onComplete.call(tween);};tween=getTween.tween=gsap$b.to(scroller,vars);return tween;};scroller[prop]=getScroll;getScroll.wheelHandler=function(){return getTween.tween&&getTween.tween.kill()&&(getTween.tween=0);};_addListener$2(scroller,"wheel",getScroll.wheelHandler);ScrollTrigger$2.isTouch&&_addListener$2(scroller,"touchmove",getScroll.wheelHandler);return getTween;};var ScrollTrigger$2=function(){function ScrollTrigger(vars,animation){_coreInitted$8||ScrollTrigger.register(gsap$b)||console.warn("Please gsap.registerPlugin(ScrollTrigger)");this.init(vars,animation);}var _proto=ScrollTrigger.prototype;_proto.init=function init(vars,animation){this.progress=this.start=0;this.vars&&this.kill(true,true);if(!_enabled){this.update=this.refresh=this.kill=_passThrough$1;return;}vars=_setDefaults$2(_isString$4(vars)||_isNumber$2(vars)||vars.nodeType?{trigger:vars}:vars,_defaults$1);var _vars=vars,onUpdate=_vars.onUpdate,toggleClass=_vars.toggleClass,id=_vars.id,onToggle=_vars.onToggle,onRefresh=_vars.onRefresh,scrub=_vars.scrub,trigger=_vars.trigger,pin=_vars.pin,pinSpacing=_vars.pinSpacing,invalidateOnRefresh=_vars.invalidateOnRefresh,anticipatePin=_vars.anticipatePin,onScrubComplete=_vars.onScrubComplete,onSnapComplete=_vars.onSnapComplete,once=_vars.once,snap=_vars.snap,pinReparent=_vars.pinReparent,pinSpacer=_vars.pinSpacer,containerAnimation=_vars.containerAnimation,fastScrollEnd=_vars.fastScrollEnd,preventOverlaps=_vars.preventOverlaps,direction=vars.horizontal||vars.containerAnimation&&vars.horizontal!==false?_horizontal:_vertical,isToggle=!scrub&&scrub!==0,scroller=_getTarget(vars.scroller||_win$7),scrollerCache=gsap$b.core.getCache(scroller),isViewport=_isViewport$1(scroller),useFixedPosition=("pinType"in vars?vars.pinType:_getProxyProp(scroller,"pinType")||isViewport&&"fixed")==="fixed",callbacks=[vars.onEnter,vars.onLeave,vars.onEnterBack,vars.onLeaveBack],toggleActions=isToggle&&vars.toggleActions.split(" "),markers="markers"in vars?vars.markers:_defaults$1.markers,borderWidth=isViewport?0:parseFloat(_getComputedStyle$1(scroller)["border"+direction.p2+_Width])||0,self=this,onRefreshInit=vars.onRefreshInit&&function(){return vars.onRefreshInit(self);},getScrollerSize=_getSizeFunc(scroller,isViewport,direction),getScrollerOffsets=_getOffsetsFunc(scroller,isViewport),lastSnap=0,lastRefresh=0,scrollFunc=_getScrollFunc(scroller,direction),tweenTo,pinCache,snapFunc,scroll1,scroll2,start,end,markerStart,markerEnd,markerStartTrigger,markerEndTrigger,markerVars,change,pinOriginalState,pinActiveState,pinState,spacer,offset,pinGetter,pinSetter,pinStart,pinChange,spacingStart,spacerState,markerStartSetter,pinMoves,markerEndSetter,cs,snap1,snap2,scrubTween,scrubSmooth,snapDurClamp,snapDelayedCall,prevProgress,prevScroll,prevAnimProgress,caMarkerSetter,customRevertReturn;_context$3(self);self._dir=direction;anticipatePin*=45;self.scroller=scroller;self.scroll=containerAnimation?containerAnimation.time.bind(containerAnimation):scrollFunc;scroll1=scrollFunc();self.vars=vars;animation=animation||vars.animation;if("refreshPriority"in vars){_sort=1;vars.refreshPriority===-9999&&(_primary=self);}scrollerCache.tweenScroll=scrollerCache.tweenScroll||{top:_getTweenCreator(scroller,_vertical),left:_getTweenCreator(scroller,_horizontal)};self.tweenTo=tweenTo=scrollerCache.tweenScroll[direction.p];self.scrubDuration=function(value){scrubSmooth=_isNumber$2(value)&&value;if(!scrubSmooth){scrubTween&&scrubTween.progress(1).kill();scrubTween=0;}else{scrubTween?scrubTween.duration(value):scrubTween=gsap$b.to(animation,{ease:"expo",totalProgress:"+=0.001",duration:scrubSmooth,paused:true,onComplete:function onComplete(){return onScrubComplete&&onScrubComplete(self);}});}};if(animation){animation.vars.lazy=false;animation._initted||animation.vars.immediateRender!==false&&vars.immediateRender!==false&&animation.duration()&&animation.render(0,true,true);self.animation=animation.pause();animation.scrollTrigger=self;self.scrubDuration(scrub);scrubTween&&scrubTween.resetTo&&scrubTween.resetTo("totalProgress",0);snap1=0;id||(id=animation.vars.id);}_triggers.push(self);if(snap){if(!_isObject$2(snap)||snap.push){snap={snapTo:snap};}"scrollBehavior"in _body$5.style&&gsap$b.set(isViewport?[_body$5,_docEl$2]:scroller,{scrollBehavior:"auto"});exports._scrollers.forEach(function(o){return _isFunction$4(o)&&o.target===(isViewport?_doc$6.scrollingElement||_docEl$2:scroller)&&(o.smooth=false);});snapFunc=_isFunction$4(snap.snapTo)?snap.snapTo:snap.snapTo==="labels"?_getClosestLabel(animation):snap.snapTo==="labelsDirectional"?_getLabelAtDirection(animation):snap.directional!==false?function(value,st){return _snapDirectional(snap.snapTo)(value,_getTime$2()-lastRefresh<500?0:st.direction);}:gsap$b.utils.snap(snap.snapTo);snapDurClamp=snap.duration||{min:0.1,max:2};snapDurClamp=_isObject$2(snapDurClamp)?_clamp$2(snapDurClamp.min,snapDurClamp.max):_clamp$2(snapDurClamp,snapDurClamp);snapDelayedCall=gsap$b.delayedCall(snap.delay||scrubSmooth/2||0.1,function(){var scroll=scrollFunc(),refreshedRecently=_getTime$2()-lastRefresh<500,tween=tweenTo.tween;if((refreshedRecently||Math.abs(self.getVelocity())<10)&&!tween&&!_pointerIsDown&&lastSnap!==scroll){var progress=(scroll-start)/change,totalProgress=animation&&!isToggle?animation.totalProgress():progress,velocity=refreshedRecently?0:(totalProgress-snap2)/(_getTime$2()-_time2)*1000||0,change1=gsap$b.utils.clamp(-progress,1-progress,_abs$1(velocity/2)*velocity/0.185),naturalEnd=progress+(snap.inertia===false?0:change1),endValue=_clamp$2(0,1,snapFunc(naturalEnd,self)),endScroll=Math.round(start+endValue*change),_snap=snap,onStart=_snap.onStart,_onInterrupt=_snap.onInterrupt,_onComplete=_snap.onComplete;if(scroll<=end&&scroll>=start&&endScroll!==scroll){if(tween&&!tween._initted&&tween.data<=_abs$1(endScroll-scroll)){return;}if(snap.inertia===false){change1=endValue-progress;}tweenTo(endScroll,{duration:snapDurClamp(_abs$1(Math.max(_abs$1(naturalEnd-totalProgress),_abs$1(endValue-totalProgress))*0.185/velocity/0.05||0)),ease:snap.ease||"power3",data:_abs$1(endScroll-scroll),onInterrupt:function onInterrupt(){return snapDelayedCall.restart(true)&&_onInterrupt&&_onInterrupt(self);},onComplete:function onComplete(){self.update();lastSnap=scrollFunc();snap1=snap2=animation&&!isToggle?animation.totalProgress():self.progress;onSnapComplete&&onSnapComplete(self);_onComplete&&_onComplete(self);}},scroll,change1*change,endScroll-scroll-change1*change);onStart&&onStart(self,tweenTo.tween);}}else if(self.isActive&&lastSnap!==scroll){snapDelayedCall.restart(true);}}).pause();}id&&(_ids[id]=self);trigger=self.trigger=_getTarget(trigger||pin);customRevertReturn=trigger&&trigger._gsap&&trigger._gsap.stRevert;customRevertReturn&&(customRevertReturn=customRevertReturn(self));pin=pin===true?trigger:_getTarget(pin);_isString$4(toggleClass)&&(toggleClass={targets:trigger,className:toggleClass});if(pin){pinSpacing===false||pinSpacing===_margin||(pinSpacing=!pinSpacing&&pin.parentNode&&pin.parentNode.style&&_getComputedStyle$1(pin.parentNode).display==="flex"?false:_padding);self.pin=pin;pinCache=gsap$b.core.getCache(pin);if(!pinCache.spacer){if(pinSpacer){pinSpacer=_getTarget(pinSpacer);pinSpacer&&!pinSpacer.nodeType&&(pinSpacer=pinSpacer.current||pinSpacer.nativeElement);pinCache.spacerIsNative=!!pinSpacer;pinSpacer&&(pinCache.spacerState=_getState(pinSpacer));}pinCache.spacer=spacer=pinSpacer||_doc$6.createElement("div");spacer.classList.add("pin-spacer");id&&spacer.classList.add("pin-spacer-"+id);pinCache.pinState=pinOriginalState=_getState(pin);}else{pinOriginalState=pinCache.pinState;}vars.force3D!==false&&gsap$b.set(pin,{force3D:true});self.spacer=spacer=pinCache.spacer;cs=_getComputedStyle$1(pin);spacingStart=cs[pinSpacing+direction.os2];pinGetter=gsap$b.getProperty(pin);pinSetter=gsap$b.quickSetter(pin,direction.a,_px);_swapPinIn(pin,spacer,cs);pinState=_getState(pin);}if(markers){markerVars=_isObject$2(markers)?_setDefaults$2(markers,_markerDefaults):_markerDefaults;markerStartTrigger=_createMarker("scroller-start",id,scroller,direction,markerVars,0);markerEndTrigger=_createMarker("scroller-end",id,scroller,direction,markerVars,0,markerStartTrigger);offset=markerStartTrigger["offset"+direction.op.d2];var content=_getTarget(_getProxyProp(scroller,"content")||scroller);markerStart=this.markerStart=_createMarker("start",id,content,direction,markerVars,offset,0,containerAnimation);markerEnd=this.markerEnd=_createMarker("end",id,content,direction,markerVars,offset,0,containerAnimation);containerAnimation&&(caMarkerSetter=gsap$b.quickSetter([markerStart,markerEnd],direction.a,_px));if(!useFixedPosition&&!(exports._proxies.length&&_getProxyProp(scroller,"fixedMarkers")===true)){_makePositionable(isViewport?_body$5:scroller);gsap$b.set([markerStartTrigger,markerEndTrigger],{force3D:true});markerStartSetter=gsap$b.quickSetter(markerStartTrigger,direction.a,_px);markerEndSetter=gsap$b.quickSetter(markerEndTrigger,direction.a,_px);}}if(containerAnimation){var oldOnUpdate=containerAnimation.vars.onUpdate,oldParams=containerAnimation.vars.onUpdateParams;containerAnimation.eventCallback("onUpdate",function(){self.update(0,0,1);oldOnUpdate&&oldOnUpdate.apply(containerAnimation,oldParams||[]);});}self.previous=function(){return _triggers[_triggers.indexOf(self)-1];};self.next=function(){return _triggers[_triggers.indexOf(self)+1];};self.revert=function(revert,temp){if(!temp){return self.kill(true);}var r=revert!==false||!self.enabled,prevRefreshing=_refreshing;if(r!==self.isReverted){if(r){prevScroll=Math.max(scrollFunc(),self.scroll.rec||0);prevProgress=self.progress;prevAnimProgress=animation&&animation.progress();}markerStart&&[markerStart,markerEnd,markerStartTrigger,markerEndTrigger].forEach(function(m){return m.style.display=r?"none":"block";});if(r){_refreshing=self;self.update(r);}if(pin&&(!pinReparent||!self.isActive)){if(r){_swapPinOut(pin,spacer,pinOriginalState);}else{_swapPinIn(pin,spacer,_getComputedStyle$1(pin),spacerState);}}r||self.update(r);_refreshing=prevRefreshing;self.isReverted=r;}};self.refresh=function(soft,force){if((_refreshing||!self.enabled)&&!force){return;}if(pin&&soft&&_lastScrollTime){_addListener$2(ScrollTrigger,"scrollEnd",_softRefresh);return;}!_refreshingAll&&onRefreshInit&&onRefreshInit(self);_refreshing=self;lastRefresh=_getTime$2();if(tweenTo.tween){tweenTo.tween.kill();tweenTo.tween=0;}scrubTween&&scrubTween.pause();invalidateOnRefresh&&animation&&animation.revert({kill:false}).invalidate();self.isReverted||self.revert(true,true);self._subPinOffset=false;var size=getScrollerSize(),scrollerBounds=getScrollerOffsets(),max=containerAnimation?containerAnimation.duration():_maxScroll(scroller,direction),isFirstRefresh=change<=0.01,offset=0,otherPinOffset=0,parsedEnd=vars.end,parsedEndTrigger=vars.endTrigger||trigger,parsedStart=vars.start||(vars.start===0||!trigger?0:pin?"0 0":"0 100%"),pinnedContainer=self.pinnedContainer=vars.pinnedContainer&&_getTarget(vars.pinnedContainer),triggerIndex=trigger&&Math.max(0,_triggers.indexOf(self))||0,i=triggerIndex,cs,bounds,scroll,isVertical,override,curTrigger,curPin,oppositeScroll,initted,revertedPins,forcedOverflow;while(i--){curTrigger=_triggers[i];curTrigger.end||curTrigger.refresh(0,1)||(_refreshing=self);curPin=curTrigger.pin;if(curPin&&(curPin===trigger||curPin===pin||curPin===pinnedContainer)&&!curTrigger.isReverted){revertedPins||(revertedPins=[]);revertedPins.unshift(curTrigger);curTrigger.revert(true,true);}if(curTrigger!==_triggers[i]){triggerIndex--;i--;}}_isFunction$4(parsedStart)&&(parsedStart=parsedStart(self));start=_parsePosition$1(parsedStart,trigger,size,direction,scrollFunc(),markerStart,markerStartTrigger,self,scrollerBounds,borderWidth,useFixedPosition,max,containerAnimation)||(pin?-0.001:0);_isFunction$4(parsedEnd)&&(parsedEnd=parsedEnd(self));if(_isString$4(parsedEnd)&&!parsedEnd.indexOf("+=")){if(~parsedEnd.indexOf(" ")){parsedEnd=(_isString$4(parsedStart)?parsedStart.split(" ")[0]:"")+parsedEnd;}else{offset=_offsetToPx(parsedEnd.substr(2),size);parsedEnd=_isString$4(parsedStart)?parsedStart:(containerAnimation?gsap$b.utils.mapRange(0,containerAnimation.duration(),containerAnimation.scrollTrigger.start,containerAnimation.scrollTrigger.end,start):start)+offset;parsedEndTrigger=trigger;}}end=Math.max(start,_parsePosition$1(parsedEnd||(parsedEndTrigger?"100% 0":max),parsedEndTrigger,size,direction,scrollFunc()+offset,markerEnd,markerEndTrigger,self,scrollerBounds,borderWidth,useFixedPosition,max,containerAnimation))||-0.001;change=end-start||(start-=0.01)&&0.001;offset=0;i=triggerIndex;while(i--){curTrigger=_triggers[i];curPin=curTrigger.pin;if(curPin&&curTrigger.start-curTrigger._pinPush<=start&&!containerAnimation&&curTrigger.end>0){cs=curTrigger.end-curTrigger.start;if((curPin===trigger&&curTrigger.start-curTrigger._pinPush<start||curPin===pinnedContainer)&&!_isNumber$2(parsedStart)){offset+=cs*(1-curTrigger.progress);}curPin===pin&&(otherPinOffset+=cs);}}start+=offset;end+=offset;if(isFirstRefresh){prevProgress=gsap$b.utils.clamp(0,1,gsap$b.utils.normalize(start,end,prevScroll));}self._pinPush=otherPinOffset;if(markerStart&&offset){cs={};cs[direction.a]="+="+offset;pinnedContainer&&(cs[direction.p]="-="+scrollFunc());gsap$b.set([markerStart,markerEnd],cs);}if(pin){cs=_getComputedStyle$1(pin);isVertical=direction===_vertical;scroll=scrollFunc();pinStart=parseFloat(pinGetter(direction.a))+otherPinOffset;if(!max&&end>1){forcedOverflow=(isViewport?_doc$6.scrollingElement||_docEl$2:scroller).style;forcedOverflow={style:forcedOverflow,value:forcedOverflow["overflow"+direction.a.toUpperCase()]};forcedOverflow.style["overflow"+direction.a.toUpperCase()]="scroll";}_swapPinIn(pin,spacer,cs);pinState=_getState(pin);bounds=_getBounds$1(pin,true);oppositeScroll=useFixedPosition&&_getScrollFunc(scroller,isVertical?_horizontal:_vertical)();if(pinSpacing){spacerState=[pinSpacing+direction.os2,change+otherPinOffset+_px];spacerState.t=spacer;i=pinSpacing===_padding?_getSize(pin,direction)+change+otherPinOffset:0;i&&spacerState.push(direction.d,i+_px);_setState(spacerState);if(pinnedContainer){_triggers.forEach(function(t){if(t.pin===pinnedContainer&&t.vars.pinSpacing!==false){t._subPinOffset=true;}});}useFixedPosition&&scrollFunc(prevScroll);}if(useFixedPosition){override={top:bounds.top+(isVertical?scroll-start:oppositeScroll)+_px,left:bounds.left+(isVertical?oppositeScroll:scroll-start)+_px,boxSizing:"border-box",position:"fixed"};override[_width]=override["max"+_Width]=Math.ceil(bounds.width)+_px;override[_height]=override["max"+_Height]=Math.ceil(bounds.height)+_px;override[_margin]=override[_margin+_Top]=override[_margin+_Right]=override[_margin+_Bottom]=override[_margin+_Left]="0";override[_padding]=cs[_padding];override[_padding+_Top]=cs[_padding+_Top];override[_padding+_Right]=cs[_padding+_Right];override[_padding+_Bottom]=cs[_padding+_Bottom];override[_padding+_Left]=cs[_padding+_Left];pinActiveState=_copyState(pinOriginalState,override,pinReparent);_refreshingAll&&scrollFunc(0);}if(animation){initted=animation._initted;_suppressOverwrites$1(1);animation.render(animation.duration(),true,true);pinChange=pinGetter(direction.a)-pinStart+change+otherPinOffset;pinMoves=Math.abs(change-pinChange)>1;useFixedPosition&&pinMoves&&pinActiveState.splice(pinActiveState.length-2,2);animation.render(0,true,true);initted||animation.invalidate(true);animation.parent||animation.totalTime(animation.totalTime());_suppressOverwrites$1(0);}else{pinChange=change;}forcedOverflow&&(forcedOverflow.value?forcedOverflow.style["overflow"+direction.a.toUpperCase()]=forcedOverflow.value:forcedOverflow.style.removeProperty("overflow-"+direction.a));}else if(trigger&&scrollFunc()&&!containerAnimation){bounds=trigger.parentNode;while(bounds&&bounds!==_body$5){if(bounds._pinOffset){start-=bounds._pinOffset;end-=bounds._pinOffset;}bounds=bounds.parentNode;}}revertedPins&&revertedPins.forEach(function(t){return t.revert(false,true);});self.start=start;self.end=end;scroll1=scroll2=_refreshingAll?prevScroll:scrollFunc();if(!containerAnimation&&!_refreshingAll){scroll1<prevScroll&&scrollFunc(prevScroll);self.scroll.rec=0;}self.revert(false,true);if(snapDelayedCall){lastSnap=-1;self.isActive&&scrollFunc(start+change*prevProgress);snapDelayedCall.restart(true);}_refreshing=0;animation&&isToggle&&(animation._initted||prevAnimProgress)&&animation.progress()!==prevAnimProgress&&animation.progress(prevAnimProgress,true).render(animation.time(),true,true);if(isFirstRefresh||prevProgress!==self.progress||containerAnimation){animation&&!isToggle&&animation.totalProgress(containerAnimation&&start<-0.001&&!prevProgress?gsap$b.utils.normalize(start,end,0):prevProgress,true);self.progress=(scroll1-start)/change===prevProgress?0:prevProgress;}pin&&pinSpacing&&(spacer._pinOffset=Math.round(self.progress*pinChange));scrubTween&&scrubTween.invalidate();onRefresh&&!_refreshingAll&&onRefresh(self);};self.getVelocity=function(){return(scrollFunc()-scroll2)/(_getTime$2()-_time2)*1000||0;};self.endAnimation=function(){_endAnimation(self.callbackAnimation);if(animation){scrubTween?scrubTween.progress(1):!animation.paused()?_endAnimation(animation,animation.reversed()):isToggle||_endAnimation(animation,self.direction<0,1);}};self.labelToScroll=function(label){return animation&&animation.labels&&(start||self.refresh()||start)+animation.labels[label]/animation.duration()*change||0;};self.getTrailing=function(name){var i=_triggers.indexOf(self),a=self.direction>0?_triggers.slice(0,i).reverse():_triggers.slice(i+1);return(_isString$4(name)?a.filter(function(t){return t.vars.preventOverlaps===name;}):a).filter(function(t){return self.direction>0?t.end<=start:t.start>=end;});};self.update=function(reset,recordVelocity,forceFake){if(containerAnimation&&!forceFake&&!reset){return;}var scroll=_refreshingAll===true?prevScroll:self.scroll(),p=reset?0:(scroll-start)/change,clipped=p<0?0:p>1?1:p||0,prevProgress=self.progress,isActive,wasActive,toggleState,action,stateChanged,toggled,isAtMax,isTakingAction;if(recordVelocity){scroll2=scroll1;scroll1=containerAnimation?scrollFunc():scroll;if(snap){snap2=snap1;snap1=animation&&!isToggle?animation.totalProgress():clipped;}}anticipatePin&&!clipped&&pin&&!_refreshing&&!_startup$1&&_lastScrollTime&&start<scroll+(scroll-scroll2)/(_getTime$2()-_time2)*anticipatePin&&(clipped=0.0001);if(clipped!==prevProgress&&self.enabled){isActive=self.isActive=!!clipped&&clipped<1;wasActive=!!prevProgress&&prevProgress<1;toggled=isActive!==wasActive;stateChanged=toggled||!!clipped!==!!prevProgress;self.direction=clipped>prevProgress?1:-1;self.progress=clipped;if(stateChanged&&!_refreshing){toggleState=clipped&&!prevProgress?0:clipped===1?1:prevProgress===1?2:3;if(isToggle){action=!toggled&&toggleActions[toggleState+1]!=="none"&&toggleActions[toggleState+1]||toggleActions[toggleState];isTakingAction=animation&&(action==="complete"||action==="reset"||action in animation);}}preventOverlaps&&(toggled||isTakingAction)&&(isTakingAction||scrub||!animation)&&(_isFunction$4(preventOverlaps)?preventOverlaps(self):self.getTrailing(preventOverlaps).forEach(function(t){return t.endAnimation();}));if(!isToggle){if(scrubTween&&!_refreshing&&!_startup$1){scrubTween._dp._time-scrubTween._start!==scrubTween._time&&scrubTween.render(scrubTween._dp._time-scrubTween._start);if(scrubTween.resetTo){scrubTween.resetTo("totalProgress",clipped,animation._tTime/animation._tDur);}else{scrubTween.vars.totalProgress=clipped;scrubTween.invalidate().restart();}}else if(animation){animation.totalProgress(clipped,!!_refreshing);}}if(pin){reset&&pinSpacing&&(spacer.style[pinSpacing+direction.os2]=spacingStart);if(!useFixedPosition){pinSetter(_round$5(pinStart+pinChange*clipped));}else if(stateChanged){isAtMax=!reset&&clipped>prevProgress&&end+1>scroll&&scroll+1>=_maxScroll(scroller,direction);if(pinReparent){if(!reset&&(isActive||isAtMax)){var bounds=_getBounds$1(pin,true),_offset=scroll-start;_reparent(pin,_body$5,bounds.top+(direction===_vertical?_offset:0)+_px,bounds.left+(direction===_vertical?0:_offset)+_px);}else{_reparent(pin,spacer);}}_setState(isActive||isAtMax?pinActiveState:pinState);pinMoves&&clipped<1&&isActive||pinSetter(pinStart+(clipped===1&&!isAtMax?pinChange:0));}}snap&&!tweenTo.tween&&!_refreshing&&!_startup$1&&snapDelayedCall.restart(true);toggleClass&&(toggled||once&&clipped&&(clipped<1||!_limitCallbacks))&&_toArray$4(toggleClass.targets).forEach(function(el){return el.classList[isActive||once?"add":"remove"](toggleClass.className);});onUpdate&&!isToggle&&!reset&&onUpdate(self);if(stateChanged&&!_refreshing){if(isToggle){if(isTakingAction){if(action==="complete"){animation.pause().totalProgress(1);}else if(action==="reset"){animation.restart(true).pause();}else if(action==="restart"){animation.restart(true);}else{animation[action]();}}onUpdate&&onUpdate(self);}if(toggled||!_limitCallbacks){onToggle&&toggled&&_callback$1(self,onToggle);callbacks[toggleState]&&_callback$1(self,callbacks[toggleState]);once&&(clipped===1?self.kill(false,1):callbacks[toggleState]=0);if(!toggled){toggleState=clipped===1?1:3;callbacks[toggleState]&&_callback$1(self,callbacks[toggleState]);}}if(fastScrollEnd&&!isActive&&Math.abs(self.getVelocity())>(_isNumber$2(fastScrollEnd)?fastScrollEnd:2500)){_endAnimation(self.callbackAnimation);scrubTween?scrubTween.progress(1):_endAnimation(animation,action==="reverse"?1:!clipped,1);}}else if(isToggle&&onUpdate&&!_refreshing){onUpdate(self);}}if(markerEndSetter){var n=containerAnimation?scroll/containerAnimation.duration()*(containerAnimation._caScrollDist||0):scroll;markerStartSetter(n+(markerStartTrigger._isFlipped?1:0));markerEndSetter(n);}caMarkerSetter&&caMarkerSetter(-scroll/containerAnimation.duration()*(containerAnimation._caScrollDist||0));};self.enable=function(reset,refresh){if(!self.enabled){self.enabled=true;_addListener$2(scroller,"resize",_onResize);_addListener$2(isViewport?_doc$6:scroller,"scroll",_onScroll$1);onRefreshInit&&_addListener$2(ScrollTrigger,"refreshInit",onRefreshInit);if(reset!==false){self.progress=prevProgress=0;scroll1=scroll2=lastSnap=scrollFunc();}refresh!==false&&self.refresh();}};self.getTween=function(snap){return snap&&tweenTo?tweenTo.tween:scrubTween;};self.setPositions=function(newStart,newEnd){if(pin){pinStart+=newStart-start;pinChange+=newEnd-newStart-change;pinSpacing===_padding&&self.adjustPinSpacing(newEnd-newStart-change);}self.start=start=newStart;self.end=end=newEnd;change=newEnd-newStart;self.update();};self.adjustPinSpacing=function(amount){if(spacerState&&amount){var i=spacerState.indexOf(direction.d)+1;spacerState[i]=parseFloat(spacerState[i])+amount+_px;spacerState[1]=parseFloat(spacerState[1])+amount+_px;_setState(spacerState);}};self.disable=function(reset,allowAnimation){if(self.enabled){reset!==false&&self.revert(true,true);self.enabled=self.isActive=false;allowAnimation||scrubTween&&scrubTween.pause();prevScroll=0;pinCache&&(pinCache.uncache=1);onRefreshInit&&_removeListener$2(ScrollTrigger,"refreshInit",onRefreshInit);if(snapDelayedCall){snapDelayedCall.pause();tweenTo.tween&&tweenTo.tween.kill()&&(tweenTo.tween=0);}if(!isViewport){var i=_triggers.length;while(i--){if(_triggers[i].scroller===scroller&&_triggers[i]!==self){return;}}_removeListener$2(scroller,"resize",_onResize);_removeListener$2(scroller,"scroll",_onScroll$1);}}};self.kill=function(revert,allowAnimation){self.disable(revert,allowAnimation);scrubTween&&!allowAnimation&&scrubTween.kill();id&&delete _ids[id];var i=_triggers.indexOf(self);i>=0&&_triggers.splice(i,1);i===_i&&_direction>0&&_i--;i=0;_triggers.forEach(function(t){return t.scroller===self.scroller&&(i=1);});i||_refreshingAll||(self.scroll.rec=0);if(animation){animation.scrollTrigger=null;revert&&animation.revert({kill:false});allowAnimation||animation.kill();}markerStart&&[markerStart,markerEnd,markerStartTrigger,markerEndTrigger].forEach(function(m){return m.parentNode&&m.parentNode.removeChild(m);});_primary===self&&(_primary=0);if(pin){pinCache&&(pinCache.uncache=1);i=0;_triggers.forEach(function(t){return t.pin===pin&&i++;});i||(pinCache.spacer=0);}vars.onKill&&vars.onKill(self);};self.enable(false,false);customRevertReturn&&customRevertReturn(self);!animation||!animation.add||change?self.refresh():gsap$b.delayedCall(0.01,function(){return start||end||self.refresh();})&&(change=0.01)&&(start=end=0);pin&&_queueRefreshAll();};ScrollTrigger.register=function register(core){if(!_coreInitted$8){gsap$b=core||_getGSAP$9();_windowExists$7()&&window.document&&ScrollTrigger.enable();_coreInitted$8=_enabled;}return _coreInitted$8;};ScrollTrigger.defaults=function defaults(config){if(config){for(var p in config){_defaults$1[p]=config[p];}}return _defaults$1;};ScrollTrigger.disable=function disable(reset,kill){_enabled=0;_triggers.forEach(function(trigger){return trigger[kill?"kill":"disable"](reset);});_removeListener$2(_win$7,"wheel",_onScroll$1);_removeListener$2(_doc$6,"scroll",_onScroll$1);clearInterval(_syncInterval);_removeListener$2(_doc$6,"touchcancel",_passThrough$1);_removeListener$2(_body$5,"touchstart",_passThrough$1);_multiListener(_removeListener$2,_doc$6,"pointerdown,touchstart,mousedown",_pointerDownHandler);_multiListener(_removeListener$2,_doc$6,"pointerup,touchend,mouseup",_pointerUpHandler);_resizeDelay.kill();_iterateAutoRefresh(_removeListener$2);for(var i=0;i<exports._scrollers.length;i+=3){_wheelListener(_removeListener$2,exports._scrollers[i],exports._scrollers[i+1]);_wheelListener(_removeListener$2,exports._scrollers[i],exports._scrollers[i+2]);}};ScrollTrigger.enable=function enable(){_win$7=window;_doc$6=document;_docEl$2=_doc$6.documentElement;_body$5=_doc$6.body;if(gsap$b){_toArray$4=gsap$b.utils.toArray;_clamp$2=gsap$b.utils.clamp;_context$3=gsap$b.core.context||_passThrough$1;_suppressOverwrites$1=gsap$b.core.suppressOverwrites||_passThrough$1;_scrollRestoration=_win$7.history.scrollRestoration||"auto";_lastScroll=_win$7.pageYOffset;gsap$b.core.globals("ScrollTrigger",ScrollTrigger);if(_body$5){_enabled=1;_rafBugFix();Observer.register(gsap$b);ScrollTrigger.isTouch=Observer.isTouch;_fixIOSBug=Observer.isTouch&&/(iPad|iPhone|iPod|Mac)/g.test(navigator.userAgent);_addListener$2(_win$7,"wheel",_onScroll$1);_root$1=[_win$7,_doc$6,_docEl$2,_body$5];if(gsap$b.matchMedia){ScrollTrigger.matchMedia=function(vars){var mm=gsap$b.matchMedia(),p;for(p in vars){mm.add(p,vars[p]);}return mm;};gsap$b.addEventListener("matchMediaInit",function(){return _revertAll();});gsap$b.addEventListener("matchMediaRevert",function(){return _revertRecorded();});gsap$b.addEventListener("matchMedia",function(){_refreshAll(0,1);_dispatch$1("matchMedia");});gsap$b.matchMedia("(orientation: portrait)",function(){_setBaseDimensions();return _setBaseDimensions;});}else{console.warn("Requires GSAP 3.11.0 or later");}_setBaseDimensions();_addListener$2(_doc$6,"scroll",_onScroll$1);var bodyStyle=_body$5.style,border=bodyStyle.borderTopStyle,AnimationProto=gsap$b.core.Animation.prototype,bounds,i;AnimationProto.revert||Object.defineProperty(AnimationProto,"revert",{value:function value(){return this.time(-0.01,true);}});bodyStyle.borderTopStyle="solid";bounds=_getBounds$1(_body$5);_vertical.m=Math.round(bounds.top+_vertical.sc())||0;_horizontal.m=Math.round(bounds.left+_horizontal.sc())||0;border?bodyStyle.borderTopStyle=border:bodyStyle.removeProperty("border-top-style");_syncInterval=setInterval(_sync,250);gsap$b.delayedCall(0.5,function(){return _startup$1=0;});_addListener$2(_doc$6,"touchcancel",_passThrough$1);_addListener$2(_body$5,"touchstart",_passThrough$1);_multiListener(_addListener$2,_doc$6,"pointerdown,touchstart,mousedown",_pointerDownHandler);_multiListener(_addListener$2,_doc$6,"pointerup,touchend,mouseup",_pointerUpHandler);_transformProp$3=gsap$b.utils.checkPrefix("transform");_stateProps.push(_transformProp$3);_coreInitted$8=_getTime$2();_resizeDelay=gsap$b.delayedCall(0.2,_refreshAll).pause();_autoRefresh=[_doc$6,"visibilitychange",function(){var w=_win$7.innerWidth,h=_win$7.innerHeight;if(_doc$6.hidden){_prevWidth=w;_prevHeight=h;}else if(_prevWidth!==w||_prevHeight!==h){_onResize();}},_doc$6,"DOMContentLoaded",_refreshAll,_win$7,"load",_refreshAll,_win$7,"resize",_onResize];_iterateAutoRefresh(_addListener$2);_triggers.forEach(function(trigger){return trigger.enable(0,1);});for(i=0;i<exports._scrollers.length;i+=3){_wheelListener(_removeListener$2,exports._scrollers[i],exports._scrollers[i+1]);_wheelListener(_removeListener$2,exports._scrollers[i],exports._scrollers[i+2]);}}}};ScrollTrigger.config=function config(vars){"limitCallbacks"in vars&&(_limitCallbacks=!!vars.limitCallbacks);var ms=vars.syncInterval;ms&&clearInterval(_syncInterval)||(_syncInterval=ms)&&setInterval(_sync,ms);"ignoreMobileResize"in vars&&(_ignoreMobileResize=ScrollTrigger.isTouch===1&&vars.ignoreMobileResize);if("autoRefreshEvents"in vars){_iterateAutoRefresh(_removeListener$2)||_iterateAutoRefresh(_addListener$2,vars.autoRefreshEvents||"none");_ignoreResize=(vars.autoRefreshEvents+"").indexOf("resize")===-1;}};ScrollTrigger.scrollerProxy=function scrollerProxy(target,vars){var t=_getTarget(target),i=exports._scrollers.indexOf(t),isViewport=_isViewport$1(t);if(~i){exports._scrollers.splice(i,isViewport?6:2);}if(vars){isViewport?exports._proxies.unshift(_win$7,vars,_body$5,vars,_docEl$2,vars):exports._proxies.unshift(t,vars);}};ScrollTrigger.clearMatchMedia=function clearMatchMedia(query){_triggers.forEach(function(t){return t._ctx&&t._ctx.query===query&&t._ctx.kill(true,true);});};ScrollTrigger.isInViewport=function isInViewport(element,ratio,horizontal){var bounds=(_isString$4(element)?_getTarget(element):element).getBoundingClientRect(),offset=bounds[horizontal?_width:_height]*ratio||0;return horizontal?bounds.right-offset>0&&bounds.left+offset<_win$7.innerWidth:bounds.bottom-offset>0&&bounds.top+offset<_win$7.innerHeight;};ScrollTrigger.positionInViewport=function positionInViewport(element,referencePoint,horizontal){_isString$4(element)&&(element=_getTarget(element));var bounds=element.getBoundingClientRect(),size=bounds[horizontal?_width:_height],offset=referencePoint==null?size/2:referencePoint in _keywords?_keywords[referencePoint]*size:~referencePoint.indexOf("%")?parseFloat(referencePoint)*size/100:parseFloat(referencePoint)||0;return horizontal?(bounds.left+offset)/_win$7.innerWidth:(bounds.top+offset)/_win$7.innerHeight;};ScrollTrigger.killAll=function killAll(allowListeners){_triggers.slice(0).forEach(function(t){return t.vars.id!=="ScrollSmoother"&&t.kill();});if(allowListeners!==true){var listeners=_listeners$1.killAll||[];_listeners$1={};listeners.forEach(function(f){return f();});}};return ScrollTrigger;}();ScrollTrigger$2.version="3.11.5";ScrollTrigger$2.saveStyles=function(targets){return targets?_toArray$4(targets).forEach(function(target){if(target&&target.style){var i=_savedStyles.indexOf(target);i>=0&&_savedStyles.splice(i,5);_savedStyles.push(target,target.style.cssText,target.getBBox&&target.getAttribute("transform"),gsap$b.core.getCache(target),_context$3());}}):_savedStyles;};ScrollTrigger$2.revert=function(soft,media){return _revertAll(!soft,media);};ScrollTrigger$2.create=function(vars,animation){return new ScrollTrigger$2(vars,animation);};ScrollTrigger$2.refresh=function(safe){return safe?_onResize():(_coreInitted$8||ScrollTrigger$2.register())&&_refreshAll(true);};ScrollTrigger$2.update=function(force){return++exports._scrollers.cache&&_updateAll(force===true?2:0);};ScrollTrigger$2.clearScrollMemory=_clearScrollMemory;ScrollTrigger$2.maxScroll=function(element,horizontal){return _maxScroll(element,horizontal?_horizontal:_vertical);};ScrollTrigger$2.getScrollFunc=function(element,horizontal){return _getScrollFunc(_getTarget(element),horizontal?_horizontal:_vertical);};ScrollTrigger$2.getById=function(id){return _ids[id];};ScrollTrigger$2.getAll=function(){return _triggers.filter(function(t){return t.vars.id!=="ScrollSmoother";});};ScrollTrigger$2.isScrolling=function(){return!!_lastScrollTime;};ScrollTrigger$2.snapDirectional=_snapDirectional;ScrollTrigger$2.addEventListener=function(type,callback){var a=_listeners$1[type]||(_listeners$1[type]=[]);~a.indexOf(callback)||a.push(callback);};ScrollTrigger$2.removeEventListener=function(type,callback){var a=_listeners$1[type],i=a&&a.indexOf(callback);i>=0&&a.splice(i,1);};ScrollTrigger$2.batch=function(targets,vars){var result=[],varsCopy={},interval=vars.interval||0.016,batchMax=vars.batchMax||1e9,proxyCallback=function proxyCallback(type,callback){var elements=[],triggers=[],delay=gsap$b.delayedCall(interval,function(){callback(elements,triggers);elements=[];triggers=[];}).pause();return function(self){elements.length||delay.restart(true);elements.push(self.trigger);triggers.push(self);batchMax<=elements.length&&delay.progress(1);};},p;for(p in vars){varsCopy[p]=p.substr(0,2)==="on"&&_isFunction$4(vars[p])&&p!=="onRefreshInit"?proxyCallback(p,vars[p]):vars[p];}if(_isFunction$4(batchMax)){batchMax=batchMax();_addListener$2(ScrollTrigger$2,"refresh",function(){return batchMax=vars.batchMax();});}_toArray$4(targets).forEach(function(target){var config={};for(p in varsCopy){config[p]=varsCopy[p];}config.trigger=target;result.push(ScrollTrigger$2.create(config));});return result;};var _clampScrollAndGetDurationMultiplier=function _clampScrollAndGetDurationMultiplier(scrollFunc,current,end,max){current>max?scrollFunc(max):current<0&&scrollFunc(0);return end>max?(max-current)/(end-current):end<0?current/(current-end):1;},_allowNativePanning=function _allowNativePanning(target,direction){if(direction===true){target.style.removeProperty("touch-action");}else{target.style.touchAction=direction===true?"auto":direction?"pan-"+direction+(Observer.isTouch?" pinch-zoom":""):"none";}target===_docEl$2&&_allowNativePanning(_body$5,direction);},_overflow={auto:1,scroll:1},_nestedScroll=function _nestedScroll(_ref5){var event=_ref5.event,target=_ref5.target,axis=_ref5.axis;var node=(event.changedTouches?event.changedTouches[0]:event).target,cache=node._gsap||gsap$b.core.getCache(node),time=_getTime$2(),cs;if(!cache._isScrollT||time-cache._isScrollT>2000){while(node&&node!==_body$5&&(node.scrollHeight<=node.clientHeight&&node.scrollWidth<=node.clientWidth||!(_overflow[(cs=_getComputedStyle$1(node)).overflowY]||_overflow[cs.overflowX]))){node=node.parentNode;}cache._isScroll=node&&node!==target&&!_isViewport$1(node)&&(_overflow[(cs=_getComputedStyle$1(node)).overflowY]||_overflow[cs.overflowX]);cache._isScrollT=time;}if(cache._isScroll||axis==="x"){event.stopPropagation();event._gsapAllow=true;}},_inputObserver=function _inputObserver(target,type,inputs,nested){return Observer.create({target:target,capture:true,debounce:false,lockAxis:true,type:type,onWheel:nested=nested&&_nestedScroll,onPress:nested,onDrag:nested,onScroll:nested,onEnable:function onEnable(){return inputs&&_addListener$2(_doc$6,Observer.eventTypes[0],_captureInputs,false,true);},onDisable:function onDisable(){return _removeListener$2(_doc$6,Observer.eventTypes[0],_captureInputs,true);}});},_inputExp=/(input|label|select|textarea)/i,_inputIsFocused,_captureInputs=function _captureInputs(e){var isInput=_inputExp.test(e.target.tagName);if(isInput||_inputIsFocused){e._gsapAllow=true;_inputIsFocused=isInput;}},_getScrollNormalizer=function _getScrollNormalizer(vars){_isObject$2(vars)||(vars={});vars.preventDefault=vars.isNormalizer=vars.allowClicks=true;vars.type||(vars.type="wheel,touch");vars.debounce=!!vars.debounce;vars.id=vars.id||"normalizer";var _vars2=vars,normalizeScrollX=_vars2.normalizeScrollX,momentum=_vars2.momentum,allowNestedScroll=_vars2.allowNestedScroll,onRelease=_vars2.onRelease,self,maxY,target=_getTarget(vars.target)||_docEl$2,smoother=gsap$b.core.globals().ScrollSmoother,smootherInstance=smoother&&smoother.get(),content=_fixIOSBug&&(vars.content&&_getTarget(vars.content)||smootherInstance&&vars.content!==false&&!smootherInstance.smooth()&&smootherInstance.content()),scrollFuncY=_getScrollFunc(target,_vertical),scrollFuncX=_getScrollFunc(target,_horizontal),scale=1,initialScale=(Observer.isTouch&&_win$7.visualViewport?_win$7.visualViewport.scale*_win$7.visualViewport.width:_win$7.outerWidth)/_win$7.innerWidth,wheelRefresh=0,resolveMomentumDuration=_isFunction$4(momentum)?function(){return momentum(self);}:function(){return momentum||2.8;},lastRefreshID,skipTouchMove,inputObserver=_inputObserver(target,vars.type,true,allowNestedScroll),resumeTouchMove=function resumeTouchMove(){return skipTouchMove=false;},scrollClampX=_passThrough$1,scrollClampY=_passThrough$1,updateClamps=function updateClamps(){maxY=_maxScroll(target,_vertical);scrollClampY=_clamp$2(_fixIOSBug?1:0,maxY);normalizeScrollX&&(scrollClampX=_clamp$2(0,_maxScroll(target,_horizontal)));lastRefreshID=_refreshID;},removeContentOffset=function removeContentOffset(){content._gsap.y=_round$5(parseFloat(content._gsap.y)+scrollFuncY.offset)+"px";content.style.transform="matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, "+parseFloat(content._gsap.y)+", 0, 1)";scrollFuncY.offset=scrollFuncY.cacheID=0;},ignoreDrag=function ignoreDrag(){if(skipTouchMove){requestAnimationFrame(resumeTouchMove);var offset=_round$5(self.deltaY/2),scroll=scrollClampY(scrollFuncY.v-offset);if(content&&scroll!==scrollFuncY.v+scrollFuncY.offset){scrollFuncY.offset=scroll-scrollFuncY.v;var y=_round$5((parseFloat(content&&content._gsap.y)||0)-scrollFuncY.offset);content.style.transform="matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, "+y+", 0, 1)";content._gsap.y=y+"px";scrollFuncY.cacheID=exports._scrollers.cache;_updateAll();}return true;}scrollFuncY.offset&&removeContentOffset();skipTouchMove=true;},tween,startScrollX,startScrollY,onStopDelayedCall,onResize=function onResize(){updateClamps();if(tween.isActive()&&tween.vars.scrollY>maxY){scrollFuncY()>maxY?tween.progress(1)&&scrollFuncY(maxY):tween.resetTo("scrollY",maxY);}};content&&gsap$b.set(content,{y:"+=0"});vars.ignoreCheck=function(e){return _fixIOSBug&&e.type==="touchmove"&&ignoreDrag()||scale>1.05&&e.type!=="touchstart"||self.isGesturing||e.touches&&e.touches.length>1;};vars.onPress=function(){skipTouchMove=false;var prevScale=scale;scale=_round$5((_win$7.visualViewport&&_win$7.visualViewport.scale||1)/initialScale);tween.pause();prevScale!==scale&&_allowNativePanning(target,scale>1.01?true:normalizeScrollX?false:"x");startScrollX=scrollFuncX();startScrollY=scrollFuncY();updateClamps();lastRefreshID=_refreshID;};vars.onRelease=vars.onGestureStart=function(self,wasDragging){scrollFuncY.offset&&removeContentOffset();if(!wasDragging){onStopDelayedCall.restart(true);}else{exports._scrollers.cache++;var dur=resolveMomentumDuration(),currentScroll,endScroll;if(normalizeScrollX){currentScroll=scrollFuncX();endScroll=currentScroll+dur*0.05*-self.velocityX/0.227;dur*=_clampScrollAndGetDurationMultiplier(scrollFuncX,currentScroll,endScroll,_maxScroll(target,_horizontal));tween.vars.scrollX=scrollClampX(endScroll);}currentScroll=scrollFuncY();endScroll=currentScroll+dur*0.05*-self.velocityY/0.227;dur*=_clampScrollAndGetDurationMultiplier(scrollFuncY,currentScroll,endScroll,_maxScroll(target,_vertical));tween.vars.scrollY=scrollClampY(endScroll);tween.invalidate().duration(dur).play(0.01);if(_fixIOSBug&&tween.vars.scrollY>=maxY||currentScroll>=maxY-1){gsap$b.to({},{onUpdate:onResize,duration:dur});}}onRelease&&onRelease(self);};vars.onWheel=function(){tween._ts&&tween.pause();if(_getTime$2()-wheelRefresh>1000){lastRefreshID=0;wheelRefresh=_getTime$2();}};vars.onChange=function(self,dx,dy,xArray,yArray){_refreshID!==lastRefreshID&&updateClamps();dx&&normalizeScrollX&&scrollFuncX(scrollClampX(xArray[2]===dx?startScrollX+(self.startX-self.x):scrollFuncX()+dx-xArray[1]));if(dy){scrollFuncY.offset&&removeContentOffset();var isTouch=yArray[2]===dy,y=isTouch?startScrollY+self.startY-self.y:scrollFuncY()+dy-yArray[1],yClamped=scrollClampY(y);isTouch&&y!==yClamped&&(startScrollY+=yClamped-y);scrollFuncY(yClamped);}(dy||dx)&&_updateAll();};vars.onEnable=function(){_allowNativePanning(target,normalizeScrollX?false:"x");ScrollTrigger$2.addEventListener("refresh",onResize);_addListener$2(_win$7,"resize",onResize);if(scrollFuncY.smooth){scrollFuncY.target.style.scrollBehavior="auto";scrollFuncY.smooth=scrollFuncX.smooth=false;}inputObserver.enable();};vars.onDisable=function(){_allowNativePanning(target,true);_removeListener$2(_win$7,"resize",onResize);ScrollTrigger$2.removeEventListener("refresh",onResize);inputObserver.kill();};vars.lockAxis=vars.lockAxis!==false;self=new Observer(vars);self.iOS=_fixIOSBug;_fixIOSBug&&!scrollFuncY()&&scrollFuncY(1);_fixIOSBug&&gsap$b.ticker.add(_passThrough$1);onStopDelayedCall=self._dc;tween=gsap$b.to(self,{ease:"power4",paused:true,scrollX:normalizeScrollX?"+=0.1":"+=0",scrollY:"+=0.1",modifiers:{scrollY:_interruptionTracker(scrollFuncY,scrollFuncY(),function(){return tween.pause();})},onUpdate:_updateAll,onComplete:onStopDelayedCall.vars.onComplete});return self;};ScrollTrigger$2.sort=function(func){return _triggers.sort(func||function(a,b){return(a.vars.refreshPriority||0)*-1e6+a.start-(b.start+(b.vars.refreshPriority||0)*-1e6);});};ScrollTrigger$2.observe=function(vars){return new Observer(vars);};ScrollTrigger$2.normalizeScroll=function(vars){if(typeof vars==="undefined"){return _normalizer$1;}if(vars===true&&_normalizer$1){return _normalizer$1.enable();}if(vars===false){return _normalizer$1&&_normalizer$1.kill();}var normalizer=vars instanceof Observer?vars:_getScrollNormalizer(vars);_normalizer$1&&_normalizer$1.target===normalizer.target&&_normalizer$1.kill();_isViewport$1(normalizer.target)&&(_normalizer$1=normalizer);return normalizer;};ScrollTrigger$2.core={_getVelocityProp:_getVelocityProp,_inputObserver:_inputObserver,_scrollers:exports._scrollers,_proxies:exports._proxies,bridge:{ss:function ss(){_lastScrollTime||_dispatch$1("scrollStart");_lastScrollTime=_getTime$2();},ref:function ref(){return _refreshing;}}};_getGSAP$9()&&gsap$b.registerPlugin(ScrollTrigger$2);var _trimExp=/(?:^\s+|\s+$)/g;var emojiExp=/([\uD800-\uDBFF][\uDC00-\uDFFF](?:[\u200D\uFE0F][\uD800-\uDBFF][\uDC00-\uDFFF]){2,}|\uD83D\uDC69(?:\u200D(?:(?:\uD83D\uDC69\u200D)?\uD83D\uDC67|(?:\uD83D\uDC69\u200D)?\uD83D\uDC66)|\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC69\u200D(?:\uD83D\uDC69\u200D)?\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC69\u200D(?:\uD83D\uDC69\u200D)?\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]\uFE0F|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92])|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC6F\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3C-\uDD3E\uDDD6-\uDDDF])\u200D[\u2640\u2642]\uFE0F|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF6\uD83C\uDDE6|\uD83C\uDDF4\uD83C\uDDF2|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uFE0F\u200D[\u2640\u2642]|(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642])\uFE0F|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2695\u2696\u2708]|\uD83D\uDC69\u200D[\u2695\u2696\u2708]|\uD83D\uDC68(?:(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708]))\uFE0F|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83D\uDC69\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69]))|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|[#\*0-9]\uFE0F\u20E3|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74|\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67)\uDB40\uDC7F|\uD83D\uDC68(?:\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:(?:\uD83D[\uDC68\uDC69])\u200D)?\uD83D\uDC66\u200D\uD83D\uDC66|(?:(?:\uD83D[\uDC68\uDC69])\u200D)?\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92])|(?:\uD83C[\uDFFB-\uDFFF])\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]))|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270A-\u270D]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC70\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDCAA\uDD74\uDD7A\uDD90\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD36\uDDD1-\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC68(?:\u200D(?:(?:(?:\uD83D[\uDC68\uDC69])\u200D)?\uD83D\uDC67|(?:(?:\uD83D[\uDC68\uDC69])\u200D)?\uD83D\uDC66)|\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC69\uDC6E\uDC70-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD18-\uDD1C\uDD1E\uDD1F\uDD26\uDD30-\uDD39\uDD3D\uDD3E\uDDD1-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])?|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDEEB\uDEEC\uDEF4-\uDEF8]|\uD83E[\uDD10-\uDD3A\uDD3C-\uDD3E\uDD40-\uDD45\uDD47-\uDD4C\uDD50-\uDD6B\uDD80-\uDD97\uDDC0\uDDD0-\uDDE6])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u2660\u2663\u2665\u2666\u2668\u267B\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEF8]|\uD83E[\uDD10-\uDD3A\uDD3C-\uDD3E\uDD40-\uDD45\uDD47-\uDD4C\uDD50-\uDD6B\uDD80-\uDD97\uDDC0\uDDD0-\uDDE6])\uFE0F)/;function getText(e){var type=e.nodeType,result="";if(type===1||type===9||type===11){if(typeof e.textContent==="string"){return e.textContent;}else{for(e=e.firstChild;e;e=e.nextSibling){result+=getText(e);}}}else if(type===3||type===4){return e.nodeValue;}return result;}function splitInnerHTML(element,delimiter,trim,preserveSpaces){var node=element.firstChild,result=[],s;while(node){if(node.nodeType===3){s=(node.nodeValue+"").replace(/^\n+/g,"");if(!preserveSpaces){s=s.replace(/\s+/g," ");}result.push.apply(result,emojiSafeSplit(s,delimiter,trim,preserveSpaces));}else if((node.nodeName+"").toLowerCase()==="br"){result[result.length-1]+="<br>";}else{result.push(node.outerHTML);}node=node.nextSibling;}s=result.length;while(s--){result[s]==="&"&&result.splice(s,1,"&amp;");}return result;}function emojiSafeSplit(text,delimiter,trim,preserveSpaces){text+="";trim&&(text=text.trim?text.trim():text.replace(_trimExp,""));if(delimiter&&delimiter!==""){return text.replace(/>/g,"&gt;").replace(/</g,"&lt;").split(delimiter);}var result=[],l=text.length,i=0,j,character;for(;i<l;i++){character=text.charAt(i);if(character.charCodeAt(0)>=0xD800&&character.charCodeAt(0)<=0xDBFF||text.charCodeAt(i+1)>=0xFE00&&text.charCodeAt(i+1)<=0xFE0F){j=((text.substr(i,12).split(emojiExp)||[])[1]||"").length||2;character=text.substr(i,j);result.emoji=1;i+=j-1;}result.push(character===">"?"&gt;":character==="<"?"&lt;":preserveSpaces&&character===" "&&(text.charAt(i-1)===" "||text.charAt(i+1)===" ")?"&nbsp;":character);}return result;}/*!
   * TextPlugin 3.11.5
   * https://greensock.com
   *
   * @license Copyright 2008-2023, GreenSock. All rights reserved.
   * Subject to the terms at https://greensock.com/standard-license or for
   * Club GreenSock members, the agreement issued with that membership.
   * @author: Jack Doyle, jack@greensock.com
  */var gsap$c,_tempDiv$2,_getGSAP$a=function _getGSAP(){return gsap$c||typeof window!=="undefined"&&(gsap$c=window.gsap)&&gsap$c.registerPlugin&&gsap$c;};var TextPlugin={version:"3.11.5",name:"text",init:function init(target,value,tween){_typeof(value)!=="object"&&(value={value:value});var i=target.nodeName.toUpperCase(),data=this,_value=value,newClass=_value.newClass,oldClass=_value.oldClass,preserveSpaces=_value.preserveSpaces,rtl=_value.rtl,delimiter=data.delimiter=value.delimiter||"",fillChar=data.fillChar=value.fillChar||(value.padSpace?"&nbsp;":""),_short,text,original,j,condensedText,condensedOriginal,aggregate,s;data.svg=target.getBBox&&(i==="TEXT"||i==="TSPAN");if(!("innerHTML"in target)&&!data.svg){return false;}data.target=target;if(!("value"in value)){data.text=data.original=[""];return;}original=splitInnerHTML(target,delimiter,false,preserveSpaces);_tempDiv$2||(_tempDiv$2=document.createElement("div"));_tempDiv$2.innerHTML=value.value;text=splitInnerHTML(_tempDiv$2,delimiter,false,preserveSpaces);data.from=tween._from;if((data.from||rtl)&&!(rtl&&data.from)){i=original;original=text;text=i;}data.hasClass=!!(newClass||oldClass);data.newClass=rtl?oldClass:newClass;data.oldClass=rtl?newClass:oldClass;i=original.length-text.length;_short=i<0?original:text;if(i<0){i=-i;}while(--i>-1){_short.push(fillChar);}if(value.type==="diff"){j=0;condensedText=[];condensedOriginal=[];aggregate="";for(i=0;i<text.length;i++){s=text[i];if(s===original[i]){aggregate+=s;}else{condensedText[j]=aggregate+s;condensedOriginal[j++]=aggregate+original[i];aggregate="";}}text=condensedText;original=condensedOriginal;if(aggregate){text.push(aggregate);original.push(aggregate);}}value.speed&&tween.duration(Math.min(0.05/value.speed*_short.length,value.maxDuration||9999));data.rtl=rtl;data.original=original;data.text=text;data._props.push("text");},render:function render(ratio,data){if(ratio>1){ratio=1;}else if(ratio<0){ratio=0;}if(data.from){ratio=1-ratio;}var text=data.text,hasClass=data.hasClass,newClass=data.newClass,oldClass=data.oldClass,delimiter=data.delimiter,target=data.target,fillChar=data.fillChar,original=data.original,rtl=data.rtl,l=text.length,i=(rtl?1-ratio:ratio)*l+0.5|0,applyNew,applyOld,str;if(hasClass&&ratio){applyNew=newClass&&i;applyOld=oldClass&&i!==l;str=(applyNew?"<span class='"+newClass+"'>":"")+text.slice(0,i).join(delimiter)+(applyNew?"</span>":"")+(applyOld?"<span class='"+oldClass+"'>":"")+delimiter+original.slice(i).join(delimiter)+(applyOld?"</span>":"");}else{str=text.slice(0,i).join(delimiter)+delimiter+original.slice(i).join(delimiter);}if(data.svg){target.textContent=str;}else{target.innerHTML=fillChar==="&nbsp;"&&~str.indexOf("  ")?str.split("  ").join("&nbsp;&nbsp;"):str;}}};TextPlugin.splitInnerHTML=splitInnerHTML;TextPlugin.emojiSafeSplit=emojiSafeSplit;TextPlugin.getText=getText;_getGSAP$a()&&gsap$c.registerPlugin(TextPlugin);var gsapWithCSS=gsap.registerPlugin(CSSPlugin)||gsap,TweenMaxWithCSS=gsapWithCSS.core.Tween;exports.Back=Back;exports.Bounce=Bounce;exports.CSSPlugin=CSSPlugin;exports.CSSRulePlugin=CSSRulePlugin;exports.Circ=Circ;exports.Cubic=Cubic;exports.CustomEase=CustomEase;exports.Draggable=Draggable;exports.EasePack=EasePack;exports.EaselPlugin=EaselPlugin;exports.Elastic=Elastic;exports.Expo=Expo;exports.ExpoScaleEase=ExpoScaleEase;exports.Flip=Flip;exports.Linear=Linear;exports.MotionPathPlugin=MotionPathPlugin;exports.Observer=Observer;exports.PixiPlugin=PixiPlugin;exports.Power0=Power0;exports.Power1=Power1;exports.Power2=Power2;exports.Power3=Power3;exports.Power4=Power4;exports.Quad=Quad;exports.Quart=Quart;exports.Quint=Quint;exports.RoughEase=RoughEase;exports.ScrollToPlugin=ScrollToPlugin;exports.ScrollTrigger=ScrollTrigger$2;exports.Sine=Sine;exports.SlowMo=SlowMo;exports.SteppedEase=SteppedEase;exports.Strong=Strong;exports.TextPlugin=TextPlugin;exports.TimelineLite=Timeline;exports.TimelineMax=Timeline;exports.TweenLite=Tween;exports.TweenMax=TweenMaxWithCSS;exports._getProxyProp=_getProxyProp;exports._getScrollFunc=_getScrollFunc;exports._getTarget=_getTarget;exports._getVelocityProp=_getVelocityProp;exports._horizontal=_horizontal;exports._isViewport=_isViewport;exports._vertical=_vertical;exports.clamp=clamp;exports.default=gsapWithCSS;exports.distribute=distribute;exports.getUnit=getUnit;exports.gsap=gsapWithCSS;exports.interpolate=interpolate;exports.mapRange=mapRange;exports.normalize=normalize;exports.pipe=pipe;exports.random=random;exports.selector=selector;exports.shuffle=shuffle;exports.snap=snap;exports.splitColor=splitColor;exports.toArray=toArray;exports.unitize=unitize;exports.wrap=wrap;exports.wrapYoyo=wrapYoyo;Object.defineProperty(exports,'__esModule',{value:true});});

/***/ }),

/***/ "./js/vendor/gsap.js":
/*!***************************!*\
  !*** ./js/vendor/gsap.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

(function (global, factory) {
  ( false ? undefined : _typeof(exports)) === 'object' && typeof module !== 'undefined' ? factory(exports) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : (undefined);
})(this, function (exports) {
  'use strict';

  function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    subClass.__proto__ = superClass;
  }

  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return self;
  }
  /*!
   * GSAP 3.11.5
   * https://greensock.com
   *
   * @license Copyright 2008-2023, GreenSock. All rights reserved.
   * Subject to the terms at https://greensock.com/standard-license or for
   * Club GreenSock members, the agreement issued with that membership.
   * @author: Jack Doyle, jack@greensock.com
  */


  var _config = {
    autoSleep: 120,
    force3D: "auto",
    nullTargetWarn: 1,
    units: {
      lineHeight: ""
    }
  },
      _defaults = {
    duration: .5,
    overwrite: false,
    delay: 0
  },
      _suppressOverwrites,
      _reverting,
      _context,
      _bigNum = 1e8,
      _tinyNum = 1 / _bigNum,
      _2PI = Math.PI * 2,
      _HALF_PI = _2PI / 4,
      _gsID = 0,
      _sqrt = Math.sqrt,
      _cos = Math.cos,
      _sin = Math.sin,
      _isString = function _isString(value) {
    return typeof value === "string";
  },
      _isFunction = function _isFunction(value) {
    return typeof value === "function";
  },
      _isNumber = function _isNumber(value) {
    return typeof value === "number";
  },
      _isUndefined = function _isUndefined(value) {
    return typeof value === "undefined";
  },
      _isObject = function _isObject(value) {
    return _typeof(value) === "object";
  },
      _isNotFalse = function _isNotFalse(value) {
    return value !== false;
  },
      _windowExists = function _windowExists() {
    return typeof window !== "undefined";
  },
      _isFuncOrString = function _isFuncOrString(value) {
    return _isFunction(value) || _isString(value);
  },
      _isTypedArray = typeof ArrayBuffer === "function" && ArrayBuffer.isView || function () {},
      _isArray = Array.isArray,
      _strictNumExp = /(?:-?\.?\d|\.)+/gi,
      _numExp = /[-+=.]*\d+[.e\-+]*\d*[e\-+]*\d*/g,
      _numWithUnitExp = /[-+=.]*\d+[.e-]*\d*[a-z%]*/g,
      _complexStringNumExp = /[-+=.]*\d+\.?\d*(?:e-|e\+)?\d*/gi,
      _relExp = /[+-]=-?[.\d]+/,
      _delimitedValueExp = /[^,'"\[\]\s]+/gi,
      _unitExp = /^[+\-=e\s\d]*\d+[.\d]*([a-z]*|%)\s*$/i,
      _globalTimeline,
      _win,
      _coreInitted,
      _doc,
      _globals = {},
      _installScope = {},
      _coreReady,
      _install = function _install(scope) {
    return (_installScope = _merge(scope, _globals)) && gsap;
  },
      _missingPlugin = function _missingPlugin(property, value) {
    return console.warn("Invalid property", property, "set to", value, "Missing plugin? gsap.registerPlugin()");
  },
      _warn = function _warn(message, suppress) {
    return !suppress && console.warn(message);
  },
      _addGlobal = function _addGlobal(name, obj) {
    return name && (_globals[name] = obj) && _installScope && (_installScope[name] = obj) || _globals;
  },
      _emptyFunc = function _emptyFunc() {
    return 0;
  },
      _startAtRevertConfig = {
    suppressEvents: true,
    isStart: true,
    kill: false
  },
      _revertConfigNoKill = {
    suppressEvents: true,
    kill: false
  },
      _revertConfig = {
    suppressEvents: true
  },
      _reservedProps = {},
      _lazyTweens = [],
      _lazyLookup = {},
      _lastRenderedFrame,
      _plugins = {},
      _effects = {},
      _nextGCFrame = 30,
      _harnessPlugins = [],
      _callbackNames = "",
      _harness = function _harness(targets) {
    var target = targets[0],
        harnessPlugin,
        i;
    _isObject(target) || _isFunction(target) || (targets = [targets]);

    if (!(harnessPlugin = (target._gsap || {}).harness)) {
      i = _harnessPlugins.length;

      while (i-- && !_harnessPlugins[i].targetTest(target)) {}

      harnessPlugin = _harnessPlugins[i];
    }

    i = targets.length;

    while (i--) {
      targets[i] && (targets[i]._gsap || (targets[i]._gsap = new GSCache(targets[i], harnessPlugin))) || targets.splice(i, 1);
    }

    return targets;
  },
      _getCache = function _getCache(target) {
    return target._gsap || _harness(toArray(target))[0]._gsap;
  },
      _getProperty = function _getProperty(target, property, v) {
    return (v = target[property]) && _isFunction(v) ? target[property]() : _isUndefined(v) && target.getAttribute && target.getAttribute(property) || v;
  },
      _forEachName = function _forEachName(names, func) {
    return (names = names.split(",")).forEach(func) || names;
  },
      _round = function _round(value) {
    return Math.round(value * 100000) / 100000 || 0;
  },
      _roundPrecise = function _roundPrecise(value) {
    return Math.round(value * 10000000) / 10000000 || 0;
  },
      _parseRelative = function _parseRelative(start, value) {
    var operator = value.charAt(0),
        end = parseFloat(value.substr(2));
    start = parseFloat(start);
    return operator === "+" ? start + end : operator === "-" ? start - end : operator === "*" ? start * end : start / end;
  },
      _arrayContainsAny = function _arrayContainsAny(toSearch, toFind) {
    var l = toFind.length,
        i = 0;

    for (; toSearch.indexOf(toFind[i]) < 0 && ++i < l;) {}

    return i < l;
  },
      _lazyRender = function _lazyRender() {
    var l = _lazyTweens.length,
        a = _lazyTweens.slice(0),
        i,
        tween;

    _lazyLookup = {};
    _lazyTweens.length = 0;

    for (i = 0; i < l; i++) {
      tween = a[i];
      tween && tween._lazy && (tween.render(tween._lazy[0], tween._lazy[1], true)._lazy = 0);
    }
  },
      _lazySafeRender = function _lazySafeRender(animation, time, suppressEvents, force) {
    _lazyTweens.length && !_reverting && _lazyRender();
    animation.render(time, suppressEvents, force || _reverting && time < 0 && (animation._initted || animation._startAt));
    _lazyTweens.length && !_reverting && _lazyRender();
  },
      _numericIfPossible = function _numericIfPossible(value) {
    var n = parseFloat(value);
    return (n || n === 0) && (value + "").match(_delimitedValueExp).length < 2 ? n : _isString(value) ? value.trim() : value;
  },
      _passThrough = function _passThrough(p) {
    return p;
  },
      _setDefaults = function _setDefaults(obj, defaults) {
    for (var p in defaults) {
      p in obj || (obj[p] = defaults[p]);
    }

    return obj;
  },
      _setKeyframeDefaults = function _setKeyframeDefaults(excludeDuration) {
    return function (obj, defaults) {
      for (var p in defaults) {
        p in obj || p === "duration" && excludeDuration || p === "ease" || (obj[p] = defaults[p]);
      }
    };
  },
      _merge = function _merge(base, toMerge) {
    for (var p in toMerge) {
      base[p] = toMerge[p];
    }

    return base;
  },
      _mergeDeep = function _mergeDeep(base, toMerge) {
    for (var p in toMerge) {
      p !== "__proto__" && p !== "constructor" && p !== "prototype" && (base[p] = _isObject(toMerge[p]) ? _mergeDeep(base[p] || (base[p] = {}), toMerge[p]) : toMerge[p]);
    }

    return base;
  },
      _copyExcluding = function _copyExcluding(obj, excluding) {
    var copy = {},
        p;

    for (p in obj) {
      p in excluding || (copy[p] = obj[p]);
    }

    return copy;
  },
      _inheritDefaults = function _inheritDefaults(vars) {
    var parent = vars.parent || _globalTimeline,
        func = vars.keyframes ? _setKeyframeDefaults(_isArray(vars.keyframes)) : _setDefaults;

    if (_isNotFalse(vars.inherit)) {
      while (parent) {
        func(vars, parent.vars.defaults);
        parent = parent.parent || parent._dp;
      }
    }

    return vars;
  },
      _arraysMatch = function _arraysMatch(a1, a2) {
    var i = a1.length,
        match = i === a2.length;

    while (match && i-- && a1[i] === a2[i]) {}

    return i < 0;
  },
      _addLinkedListItem = function _addLinkedListItem(parent, child, firstProp, lastProp, sortBy) {
    if (firstProp === void 0) {
      firstProp = "_first";
    }

    if (lastProp === void 0) {
      lastProp = "_last";
    }

    var prev = parent[lastProp],
        t;

    if (sortBy) {
      t = child[sortBy];

      while (prev && prev[sortBy] > t) {
        prev = prev._prev;
      }
    }

    if (prev) {
      child._next = prev._next;
      prev._next = child;
    } else {
      child._next = parent[firstProp];
      parent[firstProp] = child;
    }

    if (child._next) {
      child._next._prev = child;
    } else {
      parent[lastProp] = child;
    }

    child._prev = prev;
    child.parent = child._dp = parent;
    return child;
  },
      _removeLinkedListItem = function _removeLinkedListItem(parent, child, firstProp, lastProp) {
    if (firstProp === void 0) {
      firstProp = "_first";
    }

    if (lastProp === void 0) {
      lastProp = "_last";
    }

    var prev = child._prev,
        next = child._next;

    if (prev) {
      prev._next = next;
    } else if (parent[firstProp] === child) {
      parent[firstProp] = next;
    }

    if (next) {
      next._prev = prev;
    } else if (parent[lastProp] === child) {
      parent[lastProp] = prev;
    }

    child._next = child._prev = child.parent = null;
  },
      _removeFromParent = function _removeFromParent(child, onlyIfParentHasAutoRemove) {
    child.parent && (!onlyIfParentHasAutoRemove || child.parent.autoRemoveChildren) && child.parent.remove(child);
    child._act = 0;
  },
      _uncache = function _uncache(animation, child) {
    if (animation && (!child || child._end > animation._dur || child._start < 0)) {
      var a = animation;

      while (a) {
        a._dirty = 1;
        a = a.parent;
      }
    }

    return animation;
  },
      _recacheAncestors = function _recacheAncestors(animation) {
    var parent = animation.parent;

    while (parent && parent.parent) {
      parent._dirty = 1;
      parent.totalDuration();
      parent = parent.parent;
    }

    return animation;
  },
      _rewindStartAt = function _rewindStartAt(tween, totalTime, suppressEvents, force) {
    return tween._startAt && (_reverting ? tween._startAt.revert(_revertConfigNoKill) : tween.vars.immediateRender && !tween.vars.autoRevert || tween._startAt.render(totalTime, true, force));
  },
      _hasNoPausedAncestors = function _hasNoPausedAncestors(animation) {
    return !animation || animation._ts && _hasNoPausedAncestors(animation.parent);
  },
      _elapsedCycleDuration = function _elapsedCycleDuration(animation) {
    return animation._repeat ? _animationCycle(animation._tTime, animation = animation.duration() + animation._rDelay) * animation : 0;
  },
      _animationCycle = function _animationCycle(tTime, cycleDuration) {
    var whole = Math.floor(tTime /= cycleDuration);
    return tTime && whole === tTime ? whole - 1 : whole;
  },
      _parentToChildTotalTime = function _parentToChildTotalTime(parentTime, child) {
    return (parentTime - child._start) * child._ts + (child._ts >= 0 ? 0 : child._dirty ? child.totalDuration() : child._tDur);
  },
      _setEnd = function _setEnd(animation) {
    return animation._end = _roundPrecise(animation._start + (animation._tDur / Math.abs(animation._ts || animation._rts || _tinyNum) || 0));
  },
      _alignPlayhead = function _alignPlayhead(animation, totalTime) {
    var parent = animation._dp;

    if (parent && parent.smoothChildTiming && animation._ts) {
      animation._start = _roundPrecise(parent._time - (animation._ts > 0 ? totalTime / animation._ts : ((animation._dirty ? animation.totalDuration() : animation._tDur) - totalTime) / -animation._ts));

      _setEnd(animation);

      parent._dirty || _uncache(parent, animation);
    }

    return animation;
  },
      _postAddChecks = function _postAddChecks(timeline, child) {
    var t;

    if (child._time || child._initted && !child._dur) {
      t = _parentToChildTotalTime(timeline.rawTime(), child);

      if (!child._dur || _clamp(0, child.totalDuration(), t) - child._tTime > _tinyNum) {
        child.render(t, true);
      }
    }

    if (_uncache(timeline, child)._dp && timeline._initted && timeline._time >= timeline._dur && timeline._ts) {
      if (timeline._dur < timeline.duration()) {
        t = timeline;

        while (t._dp) {
          t.rawTime() >= 0 && t.totalTime(t._tTime);
          t = t._dp;
        }
      }

      timeline._zTime = -_tinyNum;
    }
  },
      _addToTimeline = function _addToTimeline(timeline, child, position, skipChecks) {
    child.parent && _removeFromParent(child);
    child._start = _roundPrecise((_isNumber(position) ? position : position || timeline !== _globalTimeline ? _parsePosition(timeline, position, child) : timeline._time) + child._delay);
    child._end = _roundPrecise(child._start + (child.totalDuration() / Math.abs(child.timeScale()) || 0));

    _addLinkedListItem(timeline, child, "_first", "_last", timeline._sort ? "_start" : 0);

    _isFromOrFromStart(child) || (timeline._recent = child);
    skipChecks || _postAddChecks(timeline, child);
    timeline._ts < 0 && _alignPlayhead(timeline, timeline._tTime);
    return timeline;
  },
      _scrollTrigger = function _scrollTrigger(animation, trigger) {
    return (_globals.ScrollTrigger || _missingPlugin("scrollTrigger", trigger)) && _globals.ScrollTrigger.create(trigger, animation);
  },
      _attemptInitTween = function _attemptInitTween(tween, time, force, suppressEvents, tTime) {
    _initTween(tween, time, tTime);

    if (!tween._initted) {
      return 1;
    }

    if (!force && tween._pt && !_reverting && (tween._dur && tween.vars.lazy !== false || !tween._dur && tween.vars.lazy) && _lastRenderedFrame !== _ticker.frame) {
      _lazyTweens.push(tween);

      tween._lazy = [tTime, suppressEvents];
      return 1;
    }
  },
      _parentPlayheadIsBeforeStart = function _parentPlayheadIsBeforeStart(_ref) {
    var parent = _ref.parent;
    return parent && parent._ts && parent._initted && !parent._lock && (parent.rawTime() < 0 || _parentPlayheadIsBeforeStart(parent));
  },
      _isFromOrFromStart = function _isFromOrFromStart(_ref2) {
    var data = _ref2.data;
    return data === "isFromStart" || data === "isStart";
  },
      _renderZeroDurationTween = function _renderZeroDurationTween(tween, totalTime, suppressEvents, force) {
    var prevRatio = tween.ratio,
        ratio = totalTime < 0 || !totalTime && (!tween._start && _parentPlayheadIsBeforeStart(tween) && !(!tween._initted && _isFromOrFromStart(tween)) || (tween._ts < 0 || tween._dp._ts < 0) && !_isFromOrFromStart(tween)) ? 0 : 1,
        repeatDelay = tween._rDelay,
        tTime = 0,
        pt,
        iteration,
        prevIteration;

    if (repeatDelay && tween._repeat) {
      tTime = _clamp(0, tween._tDur, totalTime);
      iteration = _animationCycle(tTime, repeatDelay);
      tween._yoyo && iteration & 1 && (ratio = 1 - ratio);

      if (iteration !== _animationCycle(tween._tTime, repeatDelay)) {
        prevRatio = 1 - ratio;
        tween.vars.repeatRefresh && tween._initted && tween.invalidate();
      }
    }

    if (ratio !== prevRatio || _reverting || force || tween._zTime === _tinyNum || !totalTime && tween._zTime) {
      if (!tween._initted && _attemptInitTween(tween, totalTime, force, suppressEvents, tTime)) {
        return;
      }

      prevIteration = tween._zTime;
      tween._zTime = totalTime || (suppressEvents ? _tinyNum : 0);
      suppressEvents || (suppressEvents = totalTime && !prevIteration);
      tween.ratio = ratio;
      tween._from && (ratio = 1 - ratio);
      tween._time = 0;
      tween._tTime = tTime;
      pt = tween._pt;

      while (pt) {
        pt.r(ratio, pt.d);
        pt = pt._next;
      }

      totalTime < 0 && _rewindStartAt(tween, totalTime, suppressEvents, true);
      tween._onUpdate && !suppressEvents && _callback(tween, "onUpdate");
      tTime && tween._repeat && !suppressEvents && tween.parent && _callback(tween, "onRepeat");

      if ((totalTime >= tween._tDur || totalTime < 0) && tween.ratio === ratio) {
        ratio && _removeFromParent(tween, 1);

        if (!suppressEvents && !_reverting) {
          _callback(tween, ratio ? "onComplete" : "onReverseComplete", true);

          tween._prom && tween._prom();
        }
      }
    } else if (!tween._zTime) {
      tween._zTime = totalTime;
    }
  },
      _findNextPauseTween = function _findNextPauseTween(animation, prevTime, time) {
    var child;

    if (time > prevTime) {
      child = animation._first;

      while (child && child._start <= time) {
        if (child.data === "isPause" && child._start > prevTime) {
          return child;
        }

        child = child._next;
      }
    } else {
      child = animation._last;

      while (child && child._start >= time) {
        if (child.data === "isPause" && child._start < prevTime) {
          return child;
        }

        child = child._prev;
      }
    }
  },
      _setDuration = function _setDuration(animation, duration, skipUncache, leavePlayhead) {
    var repeat = animation._repeat,
        dur = _roundPrecise(duration) || 0,
        totalProgress = animation._tTime / animation._tDur;
    totalProgress && !leavePlayhead && (animation._time *= dur / animation._dur);
    animation._dur = dur;
    animation._tDur = !repeat ? dur : repeat < 0 ? 1e10 : _roundPrecise(dur * (repeat + 1) + animation._rDelay * repeat);
    totalProgress > 0 && !leavePlayhead && _alignPlayhead(animation, animation._tTime = animation._tDur * totalProgress);
    animation.parent && _setEnd(animation);
    skipUncache || _uncache(animation.parent, animation);
    return animation;
  },
      _onUpdateTotalDuration = function _onUpdateTotalDuration(animation) {
    return animation instanceof Timeline ? _uncache(animation) : _setDuration(animation, animation._dur);
  },
      _zeroPosition = {
    _start: 0,
    endTime: _emptyFunc,
    totalDuration: _emptyFunc
  },
      _parsePosition = function _parsePosition(animation, position, percentAnimation) {
    var labels = animation.labels,
        recent = animation._recent || _zeroPosition,
        clippedDuration = animation.duration() >= _bigNum ? recent.endTime(false) : animation._dur,
        i,
        offset,
        isPercent;

    if (_isString(position) && (isNaN(position) || position in labels)) {
      offset = position.charAt(0);
      isPercent = position.substr(-1) === "%";
      i = position.indexOf("=");

      if (offset === "<" || offset === ">") {
        i >= 0 && (position = position.replace(/=/, ""));
        return (offset === "<" ? recent._start : recent.endTime(recent._repeat >= 0)) + (parseFloat(position.substr(1)) || 0) * (isPercent ? (i < 0 ? recent : percentAnimation).totalDuration() / 100 : 1);
      }

      if (i < 0) {
        position in labels || (labels[position] = clippedDuration);
        return labels[position];
      }

      offset = parseFloat(position.charAt(i - 1) + position.substr(i + 1));

      if (isPercent && percentAnimation) {
        offset = offset / 100 * (_isArray(percentAnimation) ? percentAnimation[0] : percentAnimation).totalDuration();
      }

      return i > 1 ? _parsePosition(animation, position.substr(0, i - 1), percentAnimation) + offset : clippedDuration + offset;
    }

    return position == null ? clippedDuration : +position;
  },
      _createTweenType = function _createTweenType(type, params, timeline) {
    var isLegacy = _isNumber(params[1]),
        varsIndex = (isLegacy ? 2 : 1) + (type < 2 ? 0 : 1),
        vars = params[varsIndex],
        irVars,
        parent;

    isLegacy && (vars.duration = params[1]);
    vars.parent = timeline;

    if (type) {
      irVars = vars;
      parent = timeline;

      while (parent && !("immediateRender" in irVars)) {
        irVars = parent.vars.defaults || {};
        parent = _isNotFalse(parent.vars.inherit) && parent.parent;
      }

      vars.immediateRender = _isNotFalse(irVars.immediateRender);
      type < 2 ? vars.runBackwards = 1 : vars.startAt = params[varsIndex - 1];
    }

    return new Tween(params[0], vars, params[varsIndex + 1]);
  },
      _conditionalReturn = function _conditionalReturn(value, func) {
    return value || value === 0 ? func(value) : func;
  },
      _clamp = function _clamp(min, max, value) {
    return value < min ? min : value > max ? max : value;
  },
      getUnit = function getUnit(value, v) {
    return !_isString(value) || !(v = _unitExp.exec(value)) ? "" : v[1];
  },
      clamp = function clamp(min, max, value) {
    return _conditionalReturn(value, function (v) {
      return _clamp(min, max, v);
    });
  },
      _slice = [].slice,
      _isArrayLike = function _isArrayLike(value, nonEmpty) {
    return value && _isObject(value) && "length" in value && (!nonEmpty && !value.length || value.length - 1 in value && _isObject(value[0])) && !value.nodeType && value !== _win;
  },
      _flatten = function _flatten(ar, leaveStrings, accumulator) {
    if (accumulator === void 0) {
      accumulator = [];
    }

    return ar.forEach(function (value) {
      var _accumulator;

      return _isString(value) && !leaveStrings || _isArrayLike(value, 1) ? (_accumulator = accumulator).push.apply(_accumulator, toArray(value)) : accumulator.push(value);
    }) || accumulator;
  },
      toArray = function toArray(value, scope, leaveStrings) {
    return _context && !scope && _context.selector ? _context.selector(value) : _isString(value) && !leaveStrings && (_coreInitted || !_wake()) ? _slice.call((scope || _doc).querySelectorAll(value), 0) : _isArray(value) ? _flatten(value, leaveStrings) : _isArrayLike(value) ? _slice.call(value, 0) : value ? [value] : [];
  },
      selector = function selector(value) {
    value = toArray(value)[0] || _warn("Invalid scope") || {};
    return function (v) {
      var el = value.current || value.nativeElement || value;
      return toArray(v, el.querySelectorAll ? el : el === value ? _warn("Invalid scope") || _doc.createElement("div") : value);
    };
  },
      shuffle = function shuffle(a) {
    return a.sort(function () {
      return .5 - Math.random();
    });
  },
      distribute = function distribute(v) {
    if (_isFunction(v)) {
      return v;
    }

    var vars = _isObject(v) ? v : {
      each: v
    },
        ease = _parseEase(vars.ease),
        from = vars.from || 0,
        base = parseFloat(vars.base) || 0,
        cache = {},
        isDecimal = from > 0 && from < 1,
        ratios = isNaN(from) || isDecimal,
        axis = vars.axis,
        ratioX = from,
        ratioY = from;

    if (_isString(from)) {
      ratioX = ratioY = {
        center: .5,
        edges: .5,
        end: 1
      }[from] || 0;
    } else if (!isDecimal && ratios) {
      ratioX = from[0];
      ratioY = from[1];
    }

    return function (i, target, a) {
      var l = (a || vars).length,
          distances = cache[l],
          originX,
          originY,
          x,
          y,
          d,
          j,
          max,
          min,
          wrapAt;

      if (!distances) {
        wrapAt = vars.grid === "auto" ? 0 : (vars.grid || [1, _bigNum])[1];

        if (!wrapAt) {
          max = -_bigNum;

          while (max < (max = a[wrapAt++].getBoundingClientRect().left) && wrapAt < l) {}

          wrapAt--;
        }

        distances = cache[l] = [];
        originX = ratios ? Math.min(wrapAt, l) * ratioX - .5 : from % wrapAt;
        originY = wrapAt === _bigNum ? 0 : ratios ? l * ratioY / wrapAt - .5 : from / wrapAt | 0;
        max = 0;
        min = _bigNum;

        for (j = 0; j < l; j++) {
          x = j % wrapAt - originX;
          y = originY - (j / wrapAt | 0);
          distances[j] = d = !axis ? _sqrt(x * x + y * y) : Math.abs(axis === "y" ? y : x);
          d > max && (max = d);
          d < min && (min = d);
        }

        from === "random" && shuffle(distances);
        distances.max = max - min;
        distances.min = min;
        distances.v = l = (parseFloat(vars.amount) || parseFloat(vars.each) * (wrapAt > l ? l - 1 : !axis ? Math.max(wrapAt, l / wrapAt) : axis === "y" ? l / wrapAt : wrapAt) || 0) * (from === "edges" ? -1 : 1);
        distances.b = l < 0 ? base - l : base;
        distances.u = getUnit(vars.amount || vars.each) || 0;
        ease = ease && l < 0 ? _invertEase(ease) : ease;
      }

      l = (distances[i] - distances.min) / distances.max || 0;
      return _roundPrecise(distances.b + (ease ? ease(l) : l) * distances.v) + distances.u;
    };
  },
      _roundModifier = function _roundModifier(v) {
    var p = Math.pow(10, ((v + "").split(".")[1] || "").length);
    return function (raw) {
      var n = _roundPrecise(Math.round(parseFloat(raw) / v) * v * p);

      return (n - n % 1) / p + (_isNumber(raw) ? 0 : getUnit(raw));
    };
  },
      snap = function snap(snapTo, value) {
    var isArray = _isArray(snapTo),
        radius,
        is2D;

    if (!isArray && _isObject(snapTo)) {
      radius = isArray = snapTo.radius || _bigNum;

      if (snapTo.values) {
        snapTo = toArray(snapTo.values);

        if (is2D = !_isNumber(snapTo[0])) {
          radius *= radius;
        }
      } else {
        snapTo = _roundModifier(snapTo.increment);
      }
    }

    return _conditionalReturn(value, !isArray ? _roundModifier(snapTo) : _isFunction(snapTo) ? function (raw) {
      is2D = snapTo(raw);
      return Math.abs(is2D - raw) <= radius ? is2D : raw;
    } : function (raw) {
      var x = parseFloat(is2D ? raw.x : raw),
          y = parseFloat(is2D ? raw.y : 0),
          min = _bigNum,
          closest = 0,
          i = snapTo.length,
          dx,
          dy;

      while (i--) {
        if (is2D) {
          dx = snapTo[i].x - x;
          dy = snapTo[i].y - y;
          dx = dx * dx + dy * dy;
        } else {
          dx = Math.abs(snapTo[i] - x);
        }

        if (dx < min) {
          min = dx;
          closest = i;
        }
      }

      closest = !radius || min <= radius ? snapTo[closest] : raw;
      return is2D || closest === raw || _isNumber(raw) ? closest : closest + getUnit(raw);
    });
  },
      random = function random(min, max, roundingIncrement, returnFunction) {
    return _conditionalReturn(_isArray(min) ? !max : roundingIncrement === true ? !!(roundingIncrement = 0) : !returnFunction, function () {
      return _isArray(min) ? min[~~(Math.random() * min.length)] : (roundingIncrement = roundingIncrement || 1e-5) && (returnFunction = roundingIncrement < 1 ? Math.pow(10, (roundingIncrement + "").length - 2) : 1) && Math.floor(Math.round((min - roundingIncrement / 2 + Math.random() * (max - min + roundingIncrement * .99)) / roundingIncrement) * roundingIncrement * returnFunction) / returnFunction;
    });
  },
      pipe = function pipe() {
    for (var _len = arguments.length, functions = new Array(_len), _key = 0; _key < _len; _key++) {
      functions[_key] = arguments[_key];
    }

    return function (value) {
      return functions.reduce(function (v, f) {
        return f(v);
      }, value);
    };
  },
      unitize = function unitize(func, unit) {
    return function (value) {
      return func(parseFloat(value)) + (unit || getUnit(value));
    };
  },
      normalize = function normalize(min, max, value) {
    return mapRange(min, max, 0, 1, value);
  },
      _wrapArray = function _wrapArray(a, wrapper, value) {
    return _conditionalReturn(value, function (index) {
      return a[~~wrapper(index)];
    });
  },
      wrap = function wrap(min, max, value) {
    var range = max - min;
    return _isArray(min) ? _wrapArray(min, wrap(0, min.length), max) : _conditionalReturn(value, function (value) {
      return (range + (value - min) % range) % range + min;
    });
  },
      wrapYoyo = function wrapYoyo(min, max, value) {
    var range = max - min,
        total = range * 2;
    return _isArray(min) ? _wrapArray(min, wrapYoyo(0, min.length - 1), max) : _conditionalReturn(value, function (value) {
      value = (total + (value - min) % total) % total || 0;
      return min + (value > range ? total - value : value);
    });
  },
      _replaceRandom = function _replaceRandom(value) {
    var prev = 0,
        s = "",
        i,
        nums,
        end,
        isArray;

    while (~(i = value.indexOf("random(", prev))) {
      end = value.indexOf(")", i);
      isArray = value.charAt(i + 7) === "[";
      nums = value.substr(i + 7, end - i - 7).match(isArray ? _delimitedValueExp : _strictNumExp);
      s += value.substr(prev, i - prev) + random(isArray ? nums : +nums[0], isArray ? 0 : +nums[1], +nums[2] || 1e-5);
      prev = end + 1;
    }

    return s + value.substr(prev, value.length - prev);
  },
      mapRange = function mapRange(inMin, inMax, outMin, outMax, value) {
    var inRange = inMax - inMin,
        outRange = outMax - outMin;
    return _conditionalReturn(value, function (value) {
      return outMin + ((value - inMin) / inRange * outRange || 0);
    });
  },
      interpolate = function interpolate(start, end, progress, mutate) {
    var func = isNaN(start + end) ? 0 : function (p) {
      return (1 - p) * start + p * end;
    };

    if (!func) {
      var isString = _isString(start),
          master = {},
          p,
          i,
          interpolators,
          l,
          il;

      progress === true && (mutate = 1) && (progress = null);

      if (isString) {
        start = {
          p: start
        };
        end = {
          p: end
        };
      } else if (_isArray(start) && !_isArray(end)) {
        interpolators = [];
        l = start.length;
        il = l - 2;

        for (i = 1; i < l; i++) {
          interpolators.push(interpolate(start[i - 1], start[i]));
        }

        l--;

        func = function func(p) {
          p *= l;
          var i = Math.min(il, ~~p);
          return interpolators[i](p - i);
        };

        progress = end;
      } else if (!mutate) {
        start = _merge(_isArray(start) ? [] : {}, start);
      }

      if (!interpolators) {
        for (p in end) {
          _addPropTween.call(master, start, p, "get", end[p]);
        }

        func = function func(p) {
          return _renderPropTweens(p, master) || (isString ? start.p : start);
        };
      }
    }

    return _conditionalReturn(progress, func);
  },
      _getLabelInDirection = function _getLabelInDirection(timeline, fromTime, backward) {
    var labels = timeline.labels,
        min = _bigNum,
        p,
        distance,
        label;

    for (p in labels) {
      distance = labels[p] - fromTime;

      if (distance < 0 === !!backward && distance && min > (distance = Math.abs(distance))) {
        label = p;
        min = distance;
      }
    }

    return label;
  },
      _callback = function _callback(animation, type, executeLazyFirst) {
    var v = animation.vars,
        callback = v[type],
        prevContext = _context,
        context = animation._ctx,
        params,
        scope,
        result;

    if (!callback) {
      return;
    }

    params = v[type + "Params"];
    scope = v.callbackScope || animation;
    executeLazyFirst && _lazyTweens.length && _lazyRender();
    context && (_context = context);
    result = params ? callback.apply(scope, params) : callback.call(scope);
    _context = prevContext;
    return result;
  },
      _interrupt = function _interrupt(animation) {
    _removeFromParent(animation);

    animation.scrollTrigger && animation.scrollTrigger.kill(!!_reverting);
    animation.progress() < 1 && _callback(animation, "onInterrupt");
    return animation;
  },
      _quickTween,
      _registerPluginQueue = [],
      _createPlugin = function _createPlugin(config) {
    if (!_windowExists()) {
      _registerPluginQueue.push(config);

      return;
    }

    config = !config.name && config["default"] || config;

    var name = config.name,
        isFunc = _isFunction(config),
        Plugin = name && !isFunc && config.init ? function () {
      this._props = [];
    } : config,
        instanceDefaults = {
      init: _emptyFunc,
      render: _renderPropTweens,
      add: _addPropTween,
      kill: _killPropTweensOf,
      modifier: _addPluginModifier,
      rawVars: 0
    },
        statics = {
      targetTest: 0,
      get: 0,
      getSetter: _getSetter,
      aliases: {},
      register: 0
    };

    _wake();

    if (config !== Plugin) {
      if (_plugins[name]) {
        return;
      }

      _setDefaults(Plugin, _setDefaults(_copyExcluding(config, instanceDefaults), statics));

      _merge(Plugin.prototype, _merge(instanceDefaults, _copyExcluding(config, statics)));

      _plugins[Plugin.prop = name] = Plugin;

      if (config.targetTest) {
        _harnessPlugins.push(Plugin);

        _reservedProps[name] = 1;
      }

      name = (name === "css" ? "CSS" : name.charAt(0).toUpperCase() + name.substr(1)) + "Plugin";
    }

    _addGlobal(name, Plugin);

    config.register && config.register(gsap, Plugin, PropTween);
  },
      _255 = 255,
      _colorLookup = {
    aqua: [0, _255, _255],
    lime: [0, _255, 0],
    silver: [192, 192, 192],
    black: [0, 0, 0],
    maroon: [128, 0, 0],
    teal: [0, 128, 128],
    blue: [0, 0, _255],
    navy: [0, 0, 128],
    white: [_255, _255, _255],
    olive: [128, 128, 0],
    yellow: [_255, _255, 0],
    orange: [_255, 165, 0],
    gray: [128, 128, 128],
    purple: [128, 0, 128],
    green: [0, 128, 0],
    red: [_255, 0, 0],
    pink: [_255, 192, 203],
    cyan: [0, _255, _255],
    transparent: [_255, _255, _255, 0]
  },
      _hue = function _hue(h, m1, m2) {
    h += h < 0 ? 1 : h > 1 ? -1 : 0;
    return (h * 6 < 1 ? m1 + (m2 - m1) * h * 6 : h < .5 ? m2 : h * 3 < 2 ? m1 + (m2 - m1) * (2 / 3 - h) * 6 : m1) * _255 + .5 | 0;
  },
      splitColor = function splitColor(v, toHSL, forceAlpha) {
    var a = !v ? _colorLookup.black : _isNumber(v) ? [v >> 16, v >> 8 & _255, v & _255] : 0,
        r,
        g,
        b,
        h,
        s,
        l,
        max,
        min,
        d,
        wasHSL;

    if (!a) {
      if (v.substr(-1) === ",") {
        v = v.substr(0, v.length - 1);
      }

      if (_colorLookup[v]) {
        a = _colorLookup[v];
      } else if (v.charAt(0) === "#") {
        if (v.length < 6) {
          r = v.charAt(1);
          g = v.charAt(2);
          b = v.charAt(3);
          v = "#" + r + r + g + g + b + b + (v.length === 5 ? v.charAt(4) + v.charAt(4) : "");
        }

        if (v.length === 9) {
          a = parseInt(v.substr(1, 6), 16);
          return [a >> 16, a >> 8 & _255, a & _255, parseInt(v.substr(7), 16) / 255];
        }

        v = parseInt(v.substr(1), 16);
        a = [v >> 16, v >> 8 & _255, v & _255];
      } else if (v.substr(0, 3) === "hsl") {
        a = wasHSL = v.match(_strictNumExp);

        if (!toHSL) {
          h = +a[0] % 360 / 360;
          s = +a[1] / 100;
          l = +a[2] / 100;
          g = l <= .5 ? l * (s + 1) : l + s - l * s;
          r = l * 2 - g;
          a.length > 3 && (a[3] *= 1);
          a[0] = _hue(h + 1 / 3, r, g);
          a[1] = _hue(h, r, g);
          a[2] = _hue(h - 1 / 3, r, g);
        } else if (~v.indexOf("=")) {
          a = v.match(_numExp);
          forceAlpha && a.length < 4 && (a[3] = 1);
          return a;
        }
      } else {
        a = v.match(_strictNumExp) || _colorLookup.transparent;
      }

      a = a.map(Number);
    }

    if (toHSL && !wasHSL) {
      r = a[0] / _255;
      g = a[1] / _255;
      b = a[2] / _255;
      max = Math.max(r, g, b);
      min = Math.min(r, g, b);
      l = (max + min) / 2;

      if (max === min) {
        h = s = 0;
      } else {
        d = max - min;
        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
        h = max === r ? (g - b) / d + (g < b ? 6 : 0) : max === g ? (b - r) / d + 2 : (r - g) / d + 4;
        h *= 60;
      }

      a[0] = ~~(h + .5);
      a[1] = ~~(s * 100 + .5);
      a[2] = ~~(l * 100 + .5);
    }

    forceAlpha && a.length < 4 && (a[3] = 1);
    return a;
  },
      _colorOrderData = function _colorOrderData(v) {
    var values = [],
        c = [],
        i = -1;
    v.split(_colorExp).forEach(function (v) {
      var a = v.match(_numWithUnitExp) || [];
      values.push.apply(values, a);
      c.push(i += a.length + 1);
    });
    values.c = c;
    return values;
  },
      _formatColors = function _formatColors(s, toHSL, orderMatchData) {
    var result = "",
        colors = (s + result).match(_colorExp),
        type = toHSL ? "hsla(" : "rgba(",
        i = 0,
        c,
        shell,
        d,
        l;

    if (!colors) {
      return s;
    }

    colors = colors.map(function (color) {
      return (color = splitColor(color, toHSL, 1)) && type + (toHSL ? color[0] + "," + color[1] + "%," + color[2] + "%," + color[3] : color.join(",")) + ")";
    });

    if (orderMatchData) {
      d = _colorOrderData(s);
      c = orderMatchData.c;

      if (c.join(result) !== d.c.join(result)) {
        shell = s.replace(_colorExp, "1").split(_numWithUnitExp);
        l = shell.length - 1;

        for (; i < l; i++) {
          result += shell[i] + (~c.indexOf(i) ? colors.shift() || type + "0,0,0,0)" : (d.length ? d : colors.length ? colors : orderMatchData).shift());
        }
      }
    }

    if (!shell) {
      shell = s.split(_colorExp);
      l = shell.length - 1;

      for (; i < l; i++) {
        result += shell[i] + colors[i];
      }
    }

    return result + shell[l];
  },
      _colorExp = function () {
    var s = "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3,4}){1,2}\\b",
        p;

    for (p in _colorLookup) {
      s += "|" + p + "\\b";
    }

    return new RegExp(s + ")", "gi");
  }(),
      _hslExp = /hsl[a]?\(/,
      _colorStringFilter = function _colorStringFilter(a) {
    var combined = a.join(" "),
        toHSL;
    _colorExp.lastIndex = 0;

    if (_colorExp.test(combined)) {
      toHSL = _hslExp.test(combined);
      a[1] = _formatColors(a[1], toHSL);
      a[0] = _formatColors(a[0], toHSL, _colorOrderData(a[1]));
      return true;
    }
  },
      _tickerActive,
      _ticker = function () {
    var _getTime = Date.now,
        _lagThreshold = 500,
        _adjustedLag = 33,
        _startTime = _getTime(),
        _lastUpdate = _startTime,
        _gap = 1000 / 240,
        _nextTime = _gap,
        _listeners = [],
        _id,
        _req,
        _raf,
        _self,
        _delta,
        _i,
        _tick = function _tick(v) {
      var elapsed = _getTime() - _lastUpdate,
          manual = v === true,
          overlap,
          dispatch,
          time,
          frame;

      elapsed > _lagThreshold && (_startTime += elapsed - _adjustedLag);
      _lastUpdate += elapsed;
      time = _lastUpdate - _startTime;
      overlap = time - _nextTime;

      if (overlap > 0 || manual) {
        frame = ++_self.frame;
        _delta = time - _self.time * 1000;
        _self.time = time = time / 1000;
        _nextTime += overlap + (overlap >= _gap ? 4 : _gap - overlap);
        dispatch = 1;
      }

      manual || (_id = _req(_tick));

      if (dispatch) {
        for (_i = 0; _i < _listeners.length; _i++) {
          _listeners[_i](time, _delta, frame, v);
        }
      }
    };

    _self = {
      time: 0,
      frame: 0,
      tick: function tick() {
        _tick(true);
      },
      deltaRatio: function deltaRatio(fps) {
        return _delta / (1000 / (fps || 60));
      },
      wake: function wake() {
        if (_coreReady) {
          if (!_coreInitted && _windowExists()) {
            _win = _coreInitted = window;
            _doc = _win.document || {};
            _globals.gsap = gsap;
            (_win.gsapVersions || (_win.gsapVersions = [])).push(gsap.version);

            _install(_installScope || _win.GreenSockGlobals || !_win.gsap && _win || {});

            _raf = _win.requestAnimationFrame;

            _registerPluginQueue.forEach(_createPlugin);
          }

          _id && _self.sleep();

          _req = _raf || function (f) {
            return setTimeout(f, _nextTime - _self.time * 1000 + 1 | 0);
          };

          _tickerActive = 1;

          _tick(2);
        }
      },
      sleep: function sleep() {
        (_raf ? _win.cancelAnimationFrame : clearTimeout)(_id);
        _tickerActive = 0;
        _req = _emptyFunc;
      },
      lagSmoothing: function lagSmoothing(threshold, adjustedLag) {
        _lagThreshold = threshold || Infinity;
        _adjustedLag = Math.min(adjustedLag || 33, _lagThreshold);
      },
      fps: function fps(_fps) {
        _gap = 1000 / (_fps || 240);
        _nextTime = _self.time * 1000 + _gap;
      },
      add: function add(callback, once, prioritize) {
        var func = once ? function (t, d, f, v) {
          callback(t, d, f, v);

          _self.remove(func);
        } : callback;

        _self.remove(callback);

        _listeners[prioritize ? "unshift" : "push"](func);

        _wake();

        return func;
      },
      remove: function remove(callback, i) {
        ~(i = _listeners.indexOf(callback)) && _listeners.splice(i, 1) && _i >= i && _i--;
      },
      _listeners: _listeners
    };
    return _self;
  }(),
      _wake = function _wake() {
    return !_tickerActive && _ticker.wake();
  },
      _easeMap = {},
      _customEaseExp = /^[\d.\-M][\d.\-,\s]/,
      _quotesExp = /["']/g,
      _parseObjectInString = function _parseObjectInString(value) {
    var obj = {},
        split = value.substr(1, value.length - 3).split(":"),
        key = split[0],
        i = 1,
        l = split.length,
        index,
        val,
        parsedVal;

    for (; i < l; i++) {
      val = split[i];
      index = i !== l - 1 ? val.lastIndexOf(",") : val.length;
      parsedVal = val.substr(0, index);
      obj[key] = isNaN(parsedVal) ? parsedVal.replace(_quotesExp, "").trim() : +parsedVal;
      key = val.substr(index + 1).trim();
    }

    return obj;
  },
      _valueInParentheses = function _valueInParentheses(value) {
    var open = value.indexOf("(") + 1,
        close = value.indexOf(")"),
        nested = value.indexOf("(", open);
    return value.substring(open, ~nested && nested < close ? value.indexOf(")", close + 1) : close);
  },
      _configEaseFromString = function _configEaseFromString(name) {
    var split = (name + "").split("("),
        ease = _easeMap[split[0]];
    return ease && split.length > 1 && ease.config ? ease.config.apply(null, ~name.indexOf("{") ? [_parseObjectInString(split[1])] : _valueInParentheses(name).split(",").map(_numericIfPossible)) : _easeMap._CE && _customEaseExp.test(name) ? _easeMap._CE("", name) : ease;
  },
      _invertEase = function _invertEase(ease) {
    return function (p) {
      return 1 - ease(1 - p);
    };
  },
      _propagateYoyoEase = function _propagateYoyoEase(timeline, isYoyo) {
    var child = timeline._first,
        ease;

    while (child) {
      if (child instanceof Timeline) {
        _propagateYoyoEase(child, isYoyo);
      } else if (child.vars.yoyoEase && (!child._yoyo || !child._repeat) && child._yoyo !== isYoyo) {
        if (child.timeline) {
          _propagateYoyoEase(child.timeline, isYoyo);
        } else {
          ease = child._ease;
          child._ease = child._yEase;
          child._yEase = ease;
          child._yoyo = isYoyo;
        }
      }

      child = child._next;
    }
  },
      _parseEase = function _parseEase(ease, defaultEase) {
    return !ease ? defaultEase : (_isFunction(ease) ? ease : _easeMap[ease] || _configEaseFromString(ease)) || defaultEase;
  },
      _insertEase = function _insertEase(names, easeIn, easeOut, easeInOut) {
    if (easeOut === void 0) {
      easeOut = function easeOut(p) {
        return 1 - easeIn(1 - p);
      };
    }

    if (easeInOut === void 0) {
      easeInOut = function easeInOut(p) {
        return p < .5 ? easeIn(p * 2) / 2 : 1 - easeIn((1 - p) * 2) / 2;
      };
    }

    var ease = {
      easeIn: easeIn,
      easeOut: easeOut,
      easeInOut: easeInOut
    },
        lowercaseName;

    _forEachName(names, function (name) {
      _easeMap[name] = _globals[name] = ease;
      _easeMap[lowercaseName = name.toLowerCase()] = easeOut;

      for (var p in ease) {
        _easeMap[lowercaseName + (p === "easeIn" ? ".in" : p === "easeOut" ? ".out" : ".inOut")] = _easeMap[name + "." + p] = ease[p];
      }
    });

    return ease;
  },
      _easeInOutFromOut = function _easeInOutFromOut(easeOut) {
    return function (p) {
      return p < .5 ? (1 - easeOut(1 - p * 2)) / 2 : .5 + easeOut((p - .5) * 2) / 2;
    };
  },
      _configElastic = function _configElastic(type, amplitude, period) {
    var p1 = amplitude >= 1 ? amplitude : 1,
        p2 = (period || (type ? .3 : .45)) / (amplitude < 1 ? amplitude : 1),
        p3 = p2 / _2PI * (Math.asin(1 / p1) || 0),
        easeOut = function easeOut(p) {
      return p === 1 ? 1 : p1 * Math.pow(2, -10 * p) * _sin((p - p3) * p2) + 1;
    },
        ease = type === "out" ? easeOut : type === "in" ? function (p) {
      return 1 - easeOut(1 - p);
    } : _easeInOutFromOut(easeOut);

    p2 = _2PI / p2;

    ease.config = function (amplitude, period) {
      return _configElastic(type, amplitude, period);
    };

    return ease;
  },
      _configBack = function _configBack(type, overshoot) {
    if (overshoot === void 0) {
      overshoot = 1.70158;
    }

    var easeOut = function easeOut(p) {
      return p ? --p * p * ((overshoot + 1) * p + overshoot) + 1 : 0;
    },
        ease = type === "out" ? easeOut : type === "in" ? function (p) {
      return 1 - easeOut(1 - p);
    } : _easeInOutFromOut(easeOut);

    ease.config = function (overshoot) {
      return _configBack(type, overshoot);
    };

    return ease;
  };

  _forEachName("Linear,Quad,Cubic,Quart,Quint,Strong", function (name, i) {
    var power = i < 5 ? i + 1 : i;

    _insertEase(name + ",Power" + (power - 1), i ? function (p) {
      return Math.pow(p, power);
    } : function (p) {
      return p;
    }, function (p) {
      return 1 - Math.pow(1 - p, power);
    }, function (p) {
      return p < .5 ? Math.pow(p * 2, power) / 2 : 1 - Math.pow((1 - p) * 2, power) / 2;
    });
  });

  _easeMap.Linear.easeNone = _easeMap.none = _easeMap.Linear.easeIn;

  _insertEase("Elastic", _configElastic("in"), _configElastic("out"), _configElastic());

  (function (n, c) {
    var n1 = 1 / c,
        n2 = 2 * n1,
        n3 = 2.5 * n1,
        easeOut = function easeOut(p) {
      return p < n1 ? n * p * p : p < n2 ? n * Math.pow(p - 1.5 / c, 2) + .75 : p < n3 ? n * (p -= 2.25 / c) * p + .9375 : n * Math.pow(p - 2.625 / c, 2) + .984375;
    };

    _insertEase("Bounce", function (p) {
      return 1 - easeOut(1 - p);
    }, easeOut);
  })(7.5625, 2.75);

  _insertEase("Expo", function (p) {
    return p ? Math.pow(2, 10 * (p - 1)) : 0;
  });

  _insertEase("Circ", function (p) {
    return -(_sqrt(1 - p * p) - 1);
  });

  _insertEase("Sine", function (p) {
    return p === 1 ? 1 : -_cos(p * _HALF_PI) + 1;
  });

  _insertEase("Back", _configBack("in"), _configBack("out"), _configBack());

  _easeMap.SteppedEase = _easeMap.steps = _globals.SteppedEase = {
    config: function config(steps, immediateStart) {
      if (steps === void 0) {
        steps = 1;
      }

      var p1 = 1 / steps,
          p2 = steps + (immediateStart ? 0 : 1),
          p3 = immediateStart ? 1 : 0,
          max = 1 - _tinyNum;
      return function (p) {
        return ((p2 * _clamp(0, max, p) | 0) + p3) * p1;
      };
    }
  };
  _defaults.ease = _easeMap["quad.out"];

  _forEachName("onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt", function (name) {
    return _callbackNames += name + "," + name + "Params,";
  });

  var GSCache = function GSCache(target, harness) {
    this.id = _gsID++;
    target._gsap = this;
    this.target = target;
    this.harness = harness;
    this.get = harness ? harness.get : _getProperty;
    this.set = harness ? harness.getSetter : _getSetter;
  };

  var Animation = function () {
    function Animation(vars) {
      this.vars = vars;
      this._delay = +vars.delay || 0;

      if (this._repeat = vars.repeat === Infinity ? -2 : vars.repeat || 0) {
        this._rDelay = vars.repeatDelay || 0;
        this._yoyo = !!vars.yoyo || !!vars.yoyoEase;
      }

      this._ts = 1;

      _setDuration(this, +vars.duration, 1, 1);

      this.data = vars.data;

      if (_context) {
        this._ctx = _context;

        _context.data.push(this);
      }

      _tickerActive || _ticker.wake();
    }

    var _proto = Animation.prototype;

    _proto.delay = function delay(value) {
      if (value || value === 0) {
        this.parent && this.parent.smoothChildTiming && this.startTime(this._start + value - this._delay);
        this._delay = value;
        return this;
      }

      return this._delay;
    };

    _proto.duration = function duration(value) {
      return arguments.length ? this.totalDuration(this._repeat > 0 ? value + (value + this._rDelay) * this._repeat : value) : this.totalDuration() && this._dur;
    };

    _proto.totalDuration = function totalDuration(value) {
      if (!arguments.length) {
        return this._tDur;
      }

      this._dirty = 0;
      return _setDuration(this, this._repeat < 0 ? value : (value - this._repeat * this._rDelay) / (this._repeat + 1));
    };

    _proto.totalTime = function totalTime(_totalTime, suppressEvents) {
      _wake();

      if (!arguments.length) {
        return this._tTime;
      }

      var parent = this._dp;

      if (parent && parent.smoothChildTiming && this._ts) {
        _alignPlayhead(this, _totalTime);

        !parent._dp || parent.parent || _postAddChecks(parent, this);

        while (parent && parent.parent) {
          if (parent.parent._time !== parent._start + (parent._ts >= 0 ? parent._tTime / parent._ts : (parent.totalDuration() - parent._tTime) / -parent._ts)) {
            parent.totalTime(parent._tTime, true);
          }

          parent = parent.parent;
        }

        if (!this.parent && this._dp.autoRemoveChildren && (this._ts > 0 && _totalTime < this._tDur || this._ts < 0 && _totalTime > 0 || !this._tDur && !_totalTime)) {
          _addToTimeline(this._dp, this, this._start - this._delay);
        }
      }

      if (this._tTime !== _totalTime || !this._dur && !suppressEvents || this._initted && Math.abs(this._zTime) === _tinyNum || !_totalTime && !this._initted && (this.add || this._ptLookup)) {
        this._ts || (this._pTime = _totalTime);

        _lazySafeRender(this, _totalTime, suppressEvents);
      }

      return this;
    };

    _proto.time = function time(value, suppressEvents) {
      return arguments.length ? this.totalTime(Math.min(this.totalDuration(), value + _elapsedCycleDuration(this)) % (this._dur + this._rDelay) || (value ? this._dur : 0), suppressEvents) : this._time;
    };

    _proto.totalProgress = function totalProgress(value, suppressEvents) {
      return arguments.length ? this.totalTime(this.totalDuration() * value, suppressEvents) : this.totalDuration() ? Math.min(1, this._tTime / this._tDur) : this.ratio;
    };

    _proto.progress = function progress(value, suppressEvents) {
      return arguments.length ? this.totalTime(this.duration() * (this._yoyo && !(this.iteration() & 1) ? 1 - value : value) + _elapsedCycleDuration(this), suppressEvents) : this.duration() ? Math.min(1, this._time / this._dur) : this.ratio;
    };

    _proto.iteration = function iteration(value, suppressEvents) {
      var cycleDuration = this.duration() + this._rDelay;

      return arguments.length ? this.totalTime(this._time + (value - 1) * cycleDuration, suppressEvents) : this._repeat ? _animationCycle(this._tTime, cycleDuration) + 1 : 1;
    };

    _proto.timeScale = function timeScale(value) {
      if (!arguments.length) {
        return this._rts === -_tinyNum ? 0 : this._rts;
      }

      if (this._rts === value) {
        return this;
      }

      var tTime = this.parent && this._ts ? _parentToChildTotalTime(this.parent._time, this) : this._tTime;
      this._rts = +value || 0;
      this._ts = this._ps || value === -_tinyNum ? 0 : this._rts;
      this.totalTime(_clamp(-Math.abs(this._delay), this._tDur, tTime), true);

      _setEnd(this);

      return _recacheAncestors(this);
    };

    _proto.paused = function paused(value) {
      if (!arguments.length) {
        return this._ps;
      }

      if (this._ps !== value) {
        this._ps = value;

        if (value) {
          this._pTime = this._tTime || Math.max(-this._delay, this.rawTime());
          this._ts = this._act = 0;
        } else {
          _wake();

          this._ts = this._rts;
          this.totalTime(this.parent && !this.parent.smoothChildTiming ? this.rawTime() : this._tTime || this._pTime, this.progress() === 1 && Math.abs(this._zTime) !== _tinyNum && (this._tTime -= _tinyNum));
        }
      }

      return this;
    };

    _proto.startTime = function startTime(value) {
      if (arguments.length) {
        this._start = value;
        var parent = this.parent || this._dp;
        parent && (parent._sort || !this.parent) && _addToTimeline(parent, this, value - this._delay);
        return this;
      }

      return this._start;
    };

    _proto.endTime = function endTime(includeRepeats) {
      return this._start + (_isNotFalse(includeRepeats) ? this.totalDuration() : this.duration()) / Math.abs(this._ts || 1);
    };

    _proto.rawTime = function rawTime(wrapRepeats) {
      var parent = this.parent || this._dp;
      return !parent ? this._tTime : wrapRepeats && (!this._ts || this._repeat && this._time && this.totalProgress() < 1) ? this._tTime % (this._dur + this._rDelay) : !this._ts ? this._tTime : _parentToChildTotalTime(parent.rawTime(wrapRepeats), this);
    };

    _proto.revert = function revert(config) {
      if (config === void 0) {
        config = _revertConfig;
      }

      var prevIsReverting = _reverting;
      _reverting = config;

      if (this._initted || this._startAt) {
        this.timeline && this.timeline.revert(config);
        this.totalTime(-0.01, config.suppressEvents);
      }

      this.data !== "nested" && config.kill !== false && this.kill();
      _reverting = prevIsReverting;
      return this;
    };

    _proto.globalTime = function globalTime(rawTime) {
      var animation = this,
          time = arguments.length ? rawTime : animation.rawTime();

      while (animation) {
        time = animation._start + time / (animation._ts || 1);
        animation = animation._dp;
      }

      return !this.parent && this._sat ? this._sat.vars.immediateRender ? -1 : this._sat.globalTime(rawTime) : time;
    };

    _proto.repeat = function repeat(value) {
      if (arguments.length) {
        this._repeat = value === Infinity ? -2 : value;
        return _onUpdateTotalDuration(this);
      }

      return this._repeat === -2 ? Infinity : this._repeat;
    };

    _proto.repeatDelay = function repeatDelay(value) {
      if (arguments.length) {
        var time = this._time;
        this._rDelay = value;

        _onUpdateTotalDuration(this);

        return time ? this.time(time) : this;
      }

      return this._rDelay;
    };

    _proto.yoyo = function yoyo(value) {
      if (arguments.length) {
        this._yoyo = value;
        return this;
      }

      return this._yoyo;
    };

    _proto.seek = function seek(position, suppressEvents) {
      return this.totalTime(_parsePosition(this, position), _isNotFalse(suppressEvents));
    };

    _proto.restart = function restart(includeDelay, suppressEvents) {
      return this.play().totalTime(includeDelay ? -this._delay : 0, _isNotFalse(suppressEvents));
    };

    _proto.play = function play(from, suppressEvents) {
      from != null && this.seek(from, suppressEvents);
      return this.reversed(false).paused(false);
    };

    _proto.reverse = function reverse(from, suppressEvents) {
      from != null && this.seek(from || this.totalDuration(), suppressEvents);
      return this.reversed(true).paused(false);
    };

    _proto.pause = function pause(atTime, suppressEvents) {
      atTime != null && this.seek(atTime, suppressEvents);
      return this.paused(true);
    };

    _proto.resume = function resume() {
      return this.paused(false);
    };

    _proto.reversed = function reversed(value) {
      if (arguments.length) {
        !!value !== this.reversed() && this.timeScale(-this._rts || (value ? -_tinyNum : 0));
        return this;
      }

      return this._rts < 0;
    };

    _proto.invalidate = function invalidate() {
      this._initted = this._act = 0;
      this._zTime = -_tinyNum;
      return this;
    };

    _proto.isActive = function isActive() {
      var parent = this.parent || this._dp,
          start = this._start,
          rawTime;
      return !!(!parent || this._ts && this._initted && parent.isActive() && (rawTime = parent.rawTime(true)) >= start && rawTime < this.endTime(true) - _tinyNum);
    };

    _proto.eventCallback = function eventCallback(type, callback, params) {
      var vars = this.vars;

      if (arguments.length > 1) {
        if (!callback) {
          delete vars[type];
        } else {
          vars[type] = callback;
          params && (vars[type + "Params"] = params);
          type === "onUpdate" && (this._onUpdate = callback);
        }

        return this;
      }

      return vars[type];
    };

    _proto.then = function then(onFulfilled) {
      var self = this;
      return new Promise(function (resolve) {
        var f = _isFunction(onFulfilled) ? onFulfilled : _passThrough,
            _resolve = function _resolve() {
          var _then = self.then;
          self.then = null;
          _isFunction(f) && (f = f(self)) && (f.then || f === self) && (self.then = _then);
          resolve(f);
          self.then = _then;
        };

        if (self._initted && self.totalProgress() === 1 && self._ts >= 0 || !self._tTime && self._ts < 0) {
          _resolve();
        } else {
          self._prom = _resolve;
        }
      });
    };

    _proto.kill = function kill() {
      _interrupt(this);
    };

    return Animation;
  }();

  _setDefaults(Animation.prototype, {
    _time: 0,
    _start: 0,
    _end: 0,
    _tTime: 0,
    _tDur: 0,
    _dirty: 0,
    _repeat: 0,
    _yoyo: false,
    parent: null,
    _initted: false,
    _rDelay: 0,
    _ts: 1,
    _dp: 0,
    ratio: 0,
    _zTime: -_tinyNum,
    _prom: 0,
    _ps: false,
    _rts: 1
  });

  var Timeline = function (_Animation) {
    _inheritsLoose(Timeline, _Animation);

    function Timeline(vars, position) {
      var _this;

      if (vars === void 0) {
        vars = {};
      }

      _this = _Animation.call(this, vars) || this;
      _this.labels = {};
      _this.smoothChildTiming = !!vars.smoothChildTiming;
      _this.autoRemoveChildren = !!vars.autoRemoveChildren;
      _this._sort = _isNotFalse(vars.sortChildren);
      _globalTimeline && _addToTimeline(vars.parent || _globalTimeline, _assertThisInitialized(_this), position);
      vars.reversed && _this.reverse();
      vars.paused && _this.paused(true);
      vars.scrollTrigger && _scrollTrigger(_assertThisInitialized(_this), vars.scrollTrigger);
      return _this;
    }

    var _proto2 = Timeline.prototype;

    _proto2.to = function to(targets, vars, position) {
      _createTweenType(0, arguments, this);

      return this;
    };

    _proto2.from = function from(targets, vars, position) {
      _createTweenType(1, arguments, this);

      return this;
    };

    _proto2.fromTo = function fromTo(targets, fromVars, toVars, position) {
      _createTweenType(2, arguments, this);

      return this;
    };

    _proto2.set = function set(targets, vars, position) {
      vars.duration = 0;
      vars.parent = this;
      _inheritDefaults(vars).repeatDelay || (vars.repeat = 0);
      vars.immediateRender = !!vars.immediateRender;
      new Tween(targets, vars, _parsePosition(this, position), 1);
      return this;
    };

    _proto2.call = function call(callback, params, position) {
      return _addToTimeline(this, Tween.delayedCall(0, callback, params), position);
    };

    _proto2.staggerTo = function staggerTo(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams) {
      vars.duration = duration;
      vars.stagger = vars.stagger || stagger;
      vars.onComplete = onCompleteAll;
      vars.onCompleteParams = onCompleteAllParams;
      vars.parent = this;
      new Tween(targets, vars, _parsePosition(this, position));
      return this;
    };

    _proto2.staggerFrom = function staggerFrom(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams) {
      vars.runBackwards = 1;
      _inheritDefaults(vars).immediateRender = _isNotFalse(vars.immediateRender);
      return this.staggerTo(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams);
    };

    _proto2.staggerFromTo = function staggerFromTo(targets, duration, fromVars, toVars, stagger, position, onCompleteAll, onCompleteAllParams) {
      toVars.startAt = fromVars;
      _inheritDefaults(toVars).immediateRender = _isNotFalse(toVars.immediateRender);
      return this.staggerTo(targets, duration, toVars, stagger, position, onCompleteAll, onCompleteAllParams);
    };

    _proto2.render = function render(totalTime, suppressEvents, force) {
      var prevTime = this._time,
          tDur = this._dirty ? this.totalDuration() : this._tDur,
          dur = this._dur,
          tTime = totalTime <= 0 ? 0 : _roundPrecise(totalTime),
          crossingStart = this._zTime < 0 !== totalTime < 0 && (this._initted || !dur),
          time,
          child,
          next,
          iteration,
          cycleDuration,
          prevPaused,
          pauseTween,
          timeScale,
          prevStart,
          prevIteration,
          yoyo,
          isYoyo;
      this !== _globalTimeline && tTime > tDur && totalTime >= 0 && (tTime = tDur);

      if (tTime !== this._tTime || force || crossingStart) {
        if (prevTime !== this._time && dur) {
          tTime += this._time - prevTime;
          totalTime += this._time - prevTime;
        }

        time = tTime;
        prevStart = this._start;
        timeScale = this._ts;
        prevPaused = !timeScale;

        if (crossingStart) {
          dur || (prevTime = this._zTime);
          (totalTime || !suppressEvents) && (this._zTime = totalTime);
        }

        if (this._repeat) {
          yoyo = this._yoyo;
          cycleDuration = dur + this._rDelay;

          if (this._repeat < -1 && totalTime < 0) {
            return this.totalTime(cycleDuration * 100 + totalTime, suppressEvents, force);
          }

          time = _roundPrecise(tTime % cycleDuration);

          if (tTime === tDur) {
            iteration = this._repeat;
            time = dur;
          } else {
            iteration = ~~(tTime / cycleDuration);

            if (iteration && iteration === tTime / cycleDuration) {
              time = dur;
              iteration--;
            }

            time > dur && (time = dur);
          }

          prevIteration = _animationCycle(this._tTime, cycleDuration);
          !prevTime && this._tTime && prevIteration !== iteration && this._tTime - prevIteration * cycleDuration - this._dur <= 0 && (prevIteration = iteration);

          if (yoyo && iteration & 1) {
            time = dur - time;
            isYoyo = 1;
          }

          if (iteration !== prevIteration && !this._lock) {
            var rewinding = yoyo && prevIteration & 1,
                doesWrap = rewinding === (yoyo && iteration & 1);
            iteration < prevIteration && (rewinding = !rewinding);
            prevTime = rewinding ? 0 : dur;
            this._lock = 1;
            this.render(prevTime || (isYoyo ? 0 : _roundPrecise(iteration * cycleDuration)), suppressEvents, !dur)._lock = 0;
            this._tTime = tTime;
            !suppressEvents && this.parent && _callback(this, "onRepeat");
            this.vars.repeatRefresh && !isYoyo && (this.invalidate()._lock = 1);

            if (prevTime && prevTime !== this._time || prevPaused !== !this._ts || this.vars.onRepeat && !this.parent && !this._act) {
              return this;
            }

            dur = this._dur;
            tDur = this._tDur;

            if (doesWrap) {
              this._lock = 2;
              prevTime = rewinding ? dur : -0.0001;
              this.render(prevTime, true);
              this.vars.repeatRefresh && !isYoyo && this.invalidate();
            }

            this._lock = 0;

            if (!this._ts && !prevPaused) {
              return this;
            }

            _propagateYoyoEase(this, isYoyo);
          }
        }

        if (this._hasPause && !this._forcing && this._lock < 2) {
          pauseTween = _findNextPauseTween(this, _roundPrecise(prevTime), _roundPrecise(time));

          if (pauseTween) {
            tTime -= time - (time = pauseTween._start);
          }
        }

        this._tTime = tTime;
        this._time = time;
        this._act = !timeScale;

        if (!this._initted) {
          this._onUpdate = this.vars.onUpdate;
          this._initted = 1;
          this._zTime = totalTime;
          prevTime = 0;
        }

        if (!prevTime && time && !suppressEvents && !iteration) {
          _callback(this, "onStart");

          if (this._tTime !== tTime) {
            return this;
          }
        }

        if (time >= prevTime && totalTime >= 0) {
          child = this._first;

          while (child) {
            next = child._next;

            if ((child._act || time >= child._start) && child._ts && pauseTween !== child) {
              if (child.parent !== this) {
                return this.render(totalTime, suppressEvents, force);
              }

              child.render(child._ts > 0 ? (time - child._start) * child._ts : (child._dirty ? child.totalDuration() : child._tDur) + (time - child._start) * child._ts, suppressEvents, force);

              if (time !== this._time || !this._ts && !prevPaused) {
                pauseTween = 0;
                next && (tTime += this._zTime = -_tinyNum);
                break;
              }
            }

            child = next;
          }
        } else {
          child = this._last;
          var adjustedTime = totalTime < 0 ? totalTime : time;

          while (child) {
            next = child._prev;

            if ((child._act || adjustedTime <= child._end) && child._ts && pauseTween !== child) {
              if (child.parent !== this) {
                return this.render(totalTime, suppressEvents, force);
              }

              child.render(child._ts > 0 ? (adjustedTime - child._start) * child._ts : (child._dirty ? child.totalDuration() : child._tDur) + (adjustedTime - child._start) * child._ts, suppressEvents, force || _reverting && (child._initted || child._startAt));

              if (time !== this._time || !this._ts && !prevPaused) {
                pauseTween = 0;
                next && (tTime += this._zTime = adjustedTime ? -_tinyNum : _tinyNum);
                break;
              }
            }

            child = next;
          }
        }

        if (pauseTween && !suppressEvents) {
          this.pause();
          pauseTween.render(time >= prevTime ? 0 : -_tinyNum)._zTime = time >= prevTime ? 1 : -1;

          if (this._ts) {
            this._start = prevStart;

            _setEnd(this);

            return this.render(totalTime, suppressEvents, force);
          }
        }

        this._onUpdate && !suppressEvents && _callback(this, "onUpdate", true);
        if (tTime === tDur && this._tTime >= this.totalDuration() || !tTime && prevTime) if (prevStart === this._start || Math.abs(timeScale) !== Math.abs(this._ts)) if (!this._lock) {
          (totalTime || !dur) && (tTime === tDur && this._ts > 0 || !tTime && this._ts < 0) && _removeFromParent(this, 1);

          if (!suppressEvents && !(totalTime < 0 && !prevTime) && (tTime || prevTime || !tDur)) {
            _callback(this, tTime === tDur && totalTime >= 0 ? "onComplete" : "onReverseComplete", true);

            this._prom && !(tTime < tDur && this.timeScale() > 0) && this._prom();
          }
        }
      }

      return this;
    };

    _proto2.add = function add(child, position) {
      var _this2 = this;

      _isNumber(position) || (position = _parsePosition(this, position, child));

      if (!(child instanceof Animation)) {
        if (_isArray(child)) {
          child.forEach(function (obj) {
            return _this2.add(obj, position);
          });
          return this;
        }

        if (_isString(child)) {
          return this.addLabel(child, position);
        }

        if (_isFunction(child)) {
          child = Tween.delayedCall(0, child);
        } else {
          return this;
        }
      }

      return this !== child ? _addToTimeline(this, child, position) : this;
    };

    _proto2.getChildren = function getChildren(nested, tweens, timelines, ignoreBeforeTime) {
      if (nested === void 0) {
        nested = true;
      }

      if (tweens === void 0) {
        tweens = true;
      }

      if (timelines === void 0) {
        timelines = true;
      }

      if (ignoreBeforeTime === void 0) {
        ignoreBeforeTime = -_bigNum;
      }

      var a = [],
          child = this._first;

      while (child) {
        if (child._start >= ignoreBeforeTime) {
          if (child instanceof Tween) {
            tweens && a.push(child);
          } else {
            timelines && a.push(child);
            nested && a.push.apply(a, child.getChildren(true, tweens, timelines));
          }
        }

        child = child._next;
      }

      return a;
    };

    _proto2.getById = function getById(id) {
      var animations = this.getChildren(1, 1, 1),
          i = animations.length;

      while (i--) {
        if (animations[i].vars.id === id) {
          return animations[i];
        }
      }
    };

    _proto2.remove = function remove(child) {
      if (_isString(child)) {
        return this.removeLabel(child);
      }

      if (_isFunction(child)) {
        return this.killTweensOf(child);
      }

      _removeLinkedListItem(this, child);

      if (child === this._recent) {
        this._recent = this._last;
      }

      return _uncache(this);
    };

    _proto2.totalTime = function totalTime(_totalTime2, suppressEvents) {
      if (!arguments.length) {
        return this._tTime;
      }

      this._forcing = 1;

      if (!this._dp && this._ts) {
        this._start = _roundPrecise(_ticker.time - (this._ts > 0 ? _totalTime2 / this._ts : (this.totalDuration() - _totalTime2) / -this._ts));
      }

      _Animation.prototype.totalTime.call(this, _totalTime2, suppressEvents);

      this._forcing = 0;
      return this;
    };

    _proto2.addLabel = function addLabel(label, position) {
      this.labels[label] = _parsePosition(this, position);
      return this;
    };

    _proto2.removeLabel = function removeLabel(label) {
      delete this.labels[label];
      return this;
    };

    _proto2.addPause = function addPause(position, callback, params) {
      var t = Tween.delayedCall(0, callback || _emptyFunc, params);
      t.data = "isPause";
      this._hasPause = 1;
      return _addToTimeline(this, t, _parsePosition(this, position));
    };

    _proto2.removePause = function removePause(position) {
      var child = this._first;
      position = _parsePosition(this, position);

      while (child) {
        if (child._start === position && child.data === "isPause") {
          _removeFromParent(child);
        }

        child = child._next;
      }
    };

    _proto2.killTweensOf = function killTweensOf(targets, props, onlyActive) {
      var tweens = this.getTweensOf(targets, onlyActive),
          i = tweens.length;

      while (i--) {
        _overwritingTween !== tweens[i] && tweens[i].kill(targets, props);
      }

      return this;
    };

    _proto2.getTweensOf = function getTweensOf(targets, onlyActive) {
      var a = [],
          parsedTargets = toArray(targets),
          child = this._first,
          isGlobalTime = _isNumber(onlyActive),
          children;

      while (child) {
        if (child instanceof Tween) {
          if (_arrayContainsAny(child._targets, parsedTargets) && (isGlobalTime ? (!_overwritingTween || child._initted && child._ts) && child.globalTime(0) <= onlyActive && child.globalTime(child.totalDuration()) > onlyActive : !onlyActive || child.isActive())) {
            a.push(child);
          }
        } else if ((children = child.getTweensOf(parsedTargets, onlyActive)).length) {
          a.push.apply(a, children);
        }

        child = child._next;
      }

      return a;
    };

    _proto2.tweenTo = function tweenTo(position, vars) {
      vars = vars || {};

      var tl = this,
          endTime = _parsePosition(tl, position),
          _vars = vars,
          startAt = _vars.startAt,
          _onStart = _vars.onStart,
          onStartParams = _vars.onStartParams,
          immediateRender = _vars.immediateRender,
          initted,
          tween = Tween.to(tl, _setDefaults({
        ease: vars.ease || "none",
        lazy: false,
        immediateRender: false,
        time: endTime,
        overwrite: "auto",
        duration: vars.duration || Math.abs((endTime - (startAt && "time" in startAt ? startAt.time : tl._time)) / tl.timeScale()) || _tinyNum,
        onStart: function onStart() {
          tl.pause();

          if (!initted) {
            var duration = vars.duration || Math.abs((endTime - (startAt && "time" in startAt ? startAt.time : tl._time)) / tl.timeScale());
            tween._dur !== duration && _setDuration(tween, duration, 0, 1).render(tween._time, true, true);
            initted = 1;
          }

          _onStart && _onStart.apply(tween, onStartParams || []);
        }
      }, vars));

      return immediateRender ? tween.render(0) : tween;
    };

    _proto2.tweenFromTo = function tweenFromTo(fromPosition, toPosition, vars) {
      return this.tweenTo(toPosition, _setDefaults({
        startAt: {
          time: _parsePosition(this, fromPosition)
        }
      }, vars));
    };

    _proto2.recent = function recent() {
      return this._recent;
    };

    _proto2.nextLabel = function nextLabel(afterTime) {
      if (afterTime === void 0) {
        afterTime = this._time;
      }

      return _getLabelInDirection(this, _parsePosition(this, afterTime));
    };

    _proto2.previousLabel = function previousLabel(beforeTime) {
      if (beforeTime === void 0) {
        beforeTime = this._time;
      }

      return _getLabelInDirection(this, _parsePosition(this, beforeTime), 1);
    };

    _proto2.currentLabel = function currentLabel(value) {
      return arguments.length ? this.seek(value, true) : this.previousLabel(this._time + _tinyNum);
    };

    _proto2.shiftChildren = function shiftChildren(amount, adjustLabels, ignoreBeforeTime) {
      if (ignoreBeforeTime === void 0) {
        ignoreBeforeTime = 0;
      }

      var child = this._first,
          labels = this.labels,
          p;

      while (child) {
        if (child._start >= ignoreBeforeTime) {
          child._start += amount;
          child._end += amount;
        }

        child = child._next;
      }

      if (adjustLabels) {
        for (p in labels) {
          if (labels[p] >= ignoreBeforeTime) {
            labels[p] += amount;
          }
        }
      }

      return _uncache(this);
    };

    _proto2.invalidate = function invalidate(soft) {
      var child = this._first;
      this._lock = 0;

      while (child) {
        child.invalidate(soft);
        child = child._next;
      }

      return _Animation.prototype.invalidate.call(this, soft);
    };

    _proto2.clear = function clear(includeLabels) {
      if (includeLabels === void 0) {
        includeLabels = true;
      }

      var child = this._first,
          next;

      while (child) {
        next = child._next;
        this.remove(child);
        child = next;
      }

      this._dp && (this._time = this._tTime = this._pTime = 0);
      includeLabels && (this.labels = {});
      return _uncache(this);
    };

    _proto2.totalDuration = function totalDuration(value) {
      var max = 0,
          self = this,
          child = self._last,
          prevStart = _bigNum,
          prev,
          start,
          parent;

      if (arguments.length) {
        return self.timeScale((self._repeat < 0 ? self.duration() : self.totalDuration()) / (self.reversed() ? -value : value));
      }

      if (self._dirty) {
        parent = self.parent;

        while (child) {
          prev = child._prev;
          child._dirty && child.totalDuration();
          start = child._start;

          if (start > prevStart && self._sort && child._ts && !self._lock) {
            self._lock = 1;
            _addToTimeline(self, child, start - child._delay, 1)._lock = 0;
          } else {
            prevStart = start;
          }

          if (start < 0 && child._ts) {
            max -= start;

            if (!parent && !self._dp || parent && parent.smoothChildTiming) {
              self._start += start / self._ts;
              self._time -= start;
              self._tTime -= start;
            }

            self.shiftChildren(-start, false, -1e999);
            prevStart = 0;
          }

          child._end > max && child._ts && (max = child._end);
          child = prev;
        }

        _setDuration(self, self === _globalTimeline && self._time > max ? self._time : max, 1, 1);

        self._dirty = 0;
      }

      return self._tDur;
    };

    Timeline.updateRoot = function updateRoot(time) {
      if (_globalTimeline._ts) {
        _lazySafeRender(_globalTimeline, _parentToChildTotalTime(time, _globalTimeline));

        _lastRenderedFrame = _ticker.frame;
      }

      if (_ticker.frame >= _nextGCFrame) {
        _nextGCFrame += _config.autoSleep || 120;
        var child = _globalTimeline._first;
        if (!child || !child._ts) if (_config.autoSleep && _ticker._listeners.length < 2) {
          while (child && !child._ts) {
            child = child._next;
          }

          child || _ticker.sleep();
        }
      }
    };

    return Timeline;
  }(Animation);

  _setDefaults(Timeline.prototype, {
    _lock: 0,
    _hasPause: 0,
    _forcing: 0
  });

  var _addComplexStringPropTween = function _addComplexStringPropTween(target, prop, start, end, setter, stringFilter, funcParam) {
    var pt = new PropTween(this._pt, target, prop, 0, 1, _renderComplexString, null, setter),
        index = 0,
        matchIndex = 0,
        result,
        startNums,
        color,
        endNum,
        chunk,
        startNum,
        hasRandom,
        a;
    pt.b = start;
    pt.e = end;
    start += "";
    end += "";

    if (hasRandom = ~end.indexOf("random(")) {
      end = _replaceRandom(end);
    }

    if (stringFilter) {
      a = [start, end];
      stringFilter(a, target, prop);
      start = a[0];
      end = a[1];
    }

    startNums = start.match(_complexStringNumExp) || [];

    while (result = _complexStringNumExp.exec(end)) {
      endNum = result[0];
      chunk = end.substring(index, result.index);

      if (color) {
        color = (color + 1) % 5;
      } else if (chunk.substr(-5) === "rgba(") {
        color = 1;
      }

      if (endNum !== startNums[matchIndex++]) {
        startNum = parseFloat(startNums[matchIndex - 1]) || 0;
        pt._pt = {
          _next: pt._pt,
          p: chunk || matchIndex === 1 ? chunk : ",",
          s: startNum,
          c: endNum.charAt(1) === "=" ? _parseRelative(startNum, endNum) - startNum : parseFloat(endNum) - startNum,
          m: color && color < 4 ? Math.round : 0
        };
        index = _complexStringNumExp.lastIndex;
      }
    }

    pt.c = index < end.length ? end.substring(index, end.length) : "";
    pt.fp = funcParam;

    if (_relExp.test(end) || hasRandom) {
      pt.e = 0;
    }

    this._pt = pt;
    return pt;
  },
      _addPropTween = function _addPropTween(target, prop, start, end, index, targets, modifier, stringFilter, funcParam, optional) {
    _isFunction(end) && (end = end(index || 0, target, targets));
    var currentValue = target[prop],
        parsedStart = start !== "get" ? start : !_isFunction(currentValue) ? currentValue : funcParam ? target[prop.indexOf("set") || !_isFunction(target["get" + prop.substr(3)]) ? prop : "get" + prop.substr(3)](funcParam) : target[prop](),
        setter = !_isFunction(currentValue) ? _setterPlain : funcParam ? _setterFuncWithParam : _setterFunc,
        pt;

    if (_isString(end)) {
      if (~end.indexOf("random(")) {
        end = _replaceRandom(end);
      }

      if (end.charAt(1) === "=") {
        pt = _parseRelative(parsedStart, end) + (getUnit(parsedStart) || 0);

        if (pt || pt === 0) {
          end = pt;
        }
      }
    }

    if (!optional || parsedStart !== end || _forceAllPropTweens) {
      if (!isNaN(parsedStart * end) && end !== "") {
        pt = new PropTween(this._pt, target, prop, +parsedStart || 0, end - (parsedStart || 0), typeof currentValue === "boolean" ? _renderBoolean : _renderPlain, 0, setter);
        funcParam && (pt.fp = funcParam);
        modifier && pt.modifier(modifier, this, target);
        return this._pt = pt;
      }

      !currentValue && !(prop in target) && _missingPlugin(prop, end);
      return _addComplexStringPropTween.call(this, target, prop, parsedStart, end, setter, stringFilter || _config.stringFilter, funcParam);
    }
  },
      _processVars = function _processVars(vars, index, target, targets, tween) {
    _isFunction(vars) && (vars = _parseFuncOrString(vars, tween, index, target, targets));

    if (!_isObject(vars) || vars.style && vars.nodeType || _isArray(vars) || _isTypedArray(vars)) {
      return _isString(vars) ? _parseFuncOrString(vars, tween, index, target, targets) : vars;
    }

    var copy = {},
        p;

    for (p in vars) {
      copy[p] = _parseFuncOrString(vars[p], tween, index, target, targets);
    }

    return copy;
  },
      _checkPlugin = function _checkPlugin(property, vars, tween, index, target, targets) {
    var plugin, pt, ptLookup, i;

    if (_plugins[property] && (plugin = new _plugins[property]()).init(target, plugin.rawVars ? vars[property] : _processVars(vars[property], index, target, targets, tween), tween, index, targets) !== false) {
      tween._pt = pt = new PropTween(tween._pt, target, property, 0, 1, plugin.render, plugin, 0, plugin.priority);

      if (tween !== _quickTween) {
        ptLookup = tween._ptLookup[tween._targets.indexOf(target)];
        i = plugin._props.length;

        while (i--) {
          ptLookup[plugin._props[i]] = pt;
        }
      }
    }

    return plugin;
  },
      _overwritingTween,
      _forceAllPropTweens,
      _initTween = function _initTween(tween, time, tTime) {
    var vars = tween.vars,
        ease = vars.ease,
        startAt = vars.startAt,
        immediateRender = vars.immediateRender,
        lazy = vars.lazy,
        onUpdate = vars.onUpdate,
        onUpdateParams = vars.onUpdateParams,
        callbackScope = vars.callbackScope,
        runBackwards = vars.runBackwards,
        yoyoEase = vars.yoyoEase,
        keyframes = vars.keyframes,
        autoRevert = vars.autoRevert,
        dur = tween._dur,
        prevStartAt = tween._startAt,
        targets = tween._targets,
        parent = tween.parent,
        fullTargets = parent && parent.data === "nested" ? parent.vars.targets : targets,
        autoOverwrite = tween._overwrite === "auto" && !_suppressOverwrites,
        tl = tween.timeline,
        cleanVars,
        i,
        p,
        pt,
        target,
        hasPriority,
        gsData,
        harness,
        plugin,
        ptLookup,
        index,
        harnessVars,
        overwritten;
    tl && (!keyframes || !ease) && (ease = "none");
    tween._ease = _parseEase(ease, _defaults.ease);
    tween._yEase = yoyoEase ? _invertEase(_parseEase(yoyoEase === true ? ease : yoyoEase, _defaults.ease)) : 0;

    if (yoyoEase && tween._yoyo && !tween._repeat) {
      yoyoEase = tween._yEase;
      tween._yEase = tween._ease;
      tween._ease = yoyoEase;
    }

    tween._from = !tl && !!vars.runBackwards;

    if (!tl || keyframes && !vars.stagger) {
      harness = targets[0] ? _getCache(targets[0]).harness : 0;
      harnessVars = harness && vars[harness.prop];
      cleanVars = _copyExcluding(vars, _reservedProps);

      if (prevStartAt) {
        prevStartAt._zTime < 0 && prevStartAt.progress(1);
        time < 0 && runBackwards && immediateRender && !autoRevert ? prevStartAt.render(-1, true) : prevStartAt.revert(runBackwards && dur ? _revertConfigNoKill : _startAtRevertConfig);
        prevStartAt._lazy = 0;
      }

      if (startAt) {
        _removeFromParent(tween._startAt = Tween.set(targets, _setDefaults({
          data: "isStart",
          overwrite: false,
          parent: parent,
          immediateRender: true,
          lazy: !prevStartAt && _isNotFalse(lazy),
          startAt: null,
          delay: 0,
          onUpdate: onUpdate,
          onUpdateParams: onUpdateParams,
          callbackScope: callbackScope,
          stagger: 0
        }, startAt)));

        tween._startAt._dp = 0;
        tween._startAt._sat = tween;
        time < 0 && (_reverting || !immediateRender && !autoRevert) && tween._startAt.revert(_revertConfigNoKill);

        if (immediateRender) {
          if (dur && time <= 0 && tTime <= 0) {
            time && (tween._zTime = time);
            return;
          }
        }
      } else if (runBackwards && dur) {
        if (!prevStartAt) {
          time && (immediateRender = false);
          p = _setDefaults({
            overwrite: false,
            data: "isFromStart",
            lazy: immediateRender && !prevStartAt && _isNotFalse(lazy),
            immediateRender: immediateRender,
            stagger: 0,
            parent: parent
          }, cleanVars);
          harnessVars && (p[harness.prop] = harnessVars);

          _removeFromParent(tween._startAt = Tween.set(targets, p));

          tween._startAt._dp = 0;
          tween._startAt._sat = tween;
          time < 0 && (_reverting ? tween._startAt.revert(_revertConfigNoKill) : tween._startAt.render(-1, true));
          tween._zTime = time;

          if (!immediateRender) {
            _initTween(tween._startAt, _tinyNum, _tinyNum);
          } else if (!time) {
            return;
          }
        }
      }

      tween._pt = tween._ptCache = 0;
      lazy = dur && _isNotFalse(lazy) || lazy && !dur;

      for (i = 0; i < targets.length; i++) {
        target = targets[i];
        gsData = target._gsap || _harness(targets)[i]._gsap;
        tween._ptLookup[i] = ptLookup = {};
        _lazyLookup[gsData.id] && _lazyTweens.length && _lazyRender();
        index = fullTargets === targets ? i : fullTargets.indexOf(target);

        if (harness && (plugin = new harness()).init(target, harnessVars || cleanVars, tween, index, fullTargets) !== false) {
          tween._pt = pt = new PropTween(tween._pt, target, plugin.name, 0, 1, plugin.render, plugin, 0, plugin.priority);

          plugin._props.forEach(function (name) {
            ptLookup[name] = pt;
          });

          plugin.priority && (hasPriority = 1);
        }

        if (!harness || harnessVars) {
          for (p in cleanVars) {
            if (_plugins[p] && (plugin = _checkPlugin(p, cleanVars, tween, index, target, fullTargets))) {
              plugin.priority && (hasPriority = 1);
            } else {
              ptLookup[p] = pt = _addPropTween.call(tween, target, p, "get", cleanVars[p], index, fullTargets, 0, vars.stringFilter);
            }
          }
        }

        tween._op && tween._op[i] && tween.kill(target, tween._op[i]);

        if (autoOverwrite && tween._pt) {
          _overwritingTween = tween;

          _globalTimeline.killTweensOf(target, ptLookup, tween.globalTime(time));

          overwritten = !tween.parent;
          _overwritingTween = 0;
        }

        tween._pt && lazy && (_lazyLookup[gsData.id] = 1);
      }

      hasPriority && _sortPropTweensByPriority(tween);
      tween._onInit && tween._onInit(tween);
    }

    tween._onUpdate = onUpdate;
    tween._initted = (!tween._op || tween._pt) && !overwritten;
    keyframes && time <= 0 && tl.render(_bigNum, true, true);
  },
      _updatePropTweens = function _updatePropTweens(tween, property, value, start, startIsRelative, ratio, time) {
    var ptCache = (tween._pt && tween._ptCache || (tween._ptCache = {}))[property],
        pt,
        rootPT,
        lookup,
        i;

    if (!ptCache) {
      ptCache = tween._ptCache[property] = [];
      lookup = tween._ptLookup;
      i = tween._targets.length;

      while (i--) {
        pt = lookup[i][property];

        if (pt && pt.d && pt.d._pt) {
          pt = pt.d._pt;

          while (pt && pt.p !== property && pt.fp !== property) {
            pt = pt._next;
          }
        }

        if (!pt) {
          _forceAllPropTweens = 1;
          tween.vars[property] = "+=0";

          _initTween(tween, time);

          _forceAllPropTweens = 0;
          return 1;
        }

        ptCache.push(pt);
      }
    }

    i = ptCache.length;

    while (i--) {
      rootPT = ptCache[i];
      pt = rootPT._pt || rootPT;
      pt.s = (start || start === 0) && !startIsRelative ? start : pt.s + (start || 0) + ratio * pt.c;
      pt.c = value - pt.s;
      rootPT.e && (rootPT.e = _round(value) + getUnit(rootPT.e));
      rootPT.b && (rootPT.b = pt.s + getUnit(rootPT.b));
    }
  },
      _addAliasesToVars = function _addAliasesToVars(targets, vars) {
    var harness = targets[0] ? _getCache(targets[0]).harness : 0,
        propertyAliases = harness && harness.aliases,
        copy,
        p,
        i,
        aliases;

    if (!propertyAliases) {
      return vars;
    }

    copy = _merge({}, vars);

    for (p in propertyAliases) {
      if (p in copy) {
        aliases = propertyAliases[p].split(",");
        i = aliases.length;

        while (i--) {
          copy[aliases[i]] = copy[p];
        }
      }
    }

    return copy;
  },
      _parseKeyframe = function _parseKeyframe(prop, obj, allProps, easeEach) {
    var ease = obj.ease || easeEach || "power1.inOut",
        p,
        a;

    if (_isArray(obj)) {
      a = allProps[prop] || (allProps[prop] = []);
      obj.forEach(function (value, i) {
        return a.push({
          t: i / (obj.length - 1) * 100,
          v: value,
          e: ease
        });
      });
    } else {
      for (p in obj) {
        a = allProps[p] || (allProps[p] = []);
        p === "ease" || a.push({
          t: parseFloat(prop),
          v: obj[p],
          e: ease
        });
      }
    }
  },
      _parseFuncOrString = function _parseFuncOrString(value, tween, i, target, targets) {
    return _isFunction(value) ? value.call(tween, i, target, targets) : _isString(value) && ~value.indexOf("random(") ? _replaceRandom(value) : value;
  },
      _staggerTweenProps = _callbackNames + "repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase,autoRevert",
      _staggerPropsToSkip = {};

  _forEachName(_staggerTweenProps + ",id,stagger,delay,duration,paused,scrollTrigger", function (name) {
    return _staggerPropsToSkip[name] = 1;
  });

  var Tween = function (_Animation2) {
    _inheritsLoose(Tween, _Animation2);

    function Tween(targets, vars, position, skipInherit) {
      var _this3;

      if (typeof vars === "number") {
        position.duration = vars;
        vars = position;
        position = null;
      }

      _this3 = _Animation2.call(this, skipInherit ? vars : _inheritDefaults(vars)) || this;
      var _this3$vars = _this3.vars,
          duration = _this3$vars.duration,
          delay = _this3$vars.delay,
          immediateRender = _this3$vars.immediateRender,
          stagger = _this3$vars.stagger,
          overwrite = _this3$vars.overwrite,
          keyframes = _this3$vars.keyframes,
          defaults = _this3$vars.defaults,
          scrollTrigger = _this3$vars.scrollTrigger,
          yoyoEase = _this3$vars.yoyoEase,
          parent = vars.parent || _globalTimeline,
          parsedTargets = (_isArray(targets) || _isTypedArray(targets) ? _isNumber(targets[0]) : "length" in vars) ? [targets] : toArray(targets),
          tl,
          i,
          copy,
          l,
          p,
          curTarget,
          staggerFunc,
          staggerVarsToMerge;
      _this3._targets = parsedTargets.length ? _harness(parsedTargets) : _warn("GSAP target " + targets + " not found. https://greensock.com", !_config.nullTargetWarn) || [];
      _this3._ptLookup = [];
      _this3._overwrite = overwrite;

      if (keyframes || stagger || _isFuncOrString(duration) || _isFuncOrString(delay)) {
        vars = _this3.vars;
        tl = _this3.timeline = new Timeline({
          data: "nested",
          defaults: defaults || {},
          targets: parent && parent.data === "nested" ? parent.vars.targets : parsedTargets
        });
        tl.kill();
        tl.parent = tl._dp = _assertThisInitialized(_this3);
        tl._start = 0;

        if (stagger || _isFuncOrString(duration) || _isFuncOrString(delay)) {
          l = parsedTargets.length;
          staggerFunc = stagger && distribute(stagger);

          if (_isObject(stagger)) {
            for (p in stagger) {
              if (~_staggerTweenProps.indexOf(p)) {
                staggerVarsToMerge || (staggerVarsToMerge = {});
                staggerVarsToMerge[p] = stagger[p];
              }
            }
          }

          for (i = 0; i < l; i++) {
            copy = _copyExcluding(vars, _staggerPropsToSkip);
            copy.stagger = 0;
            yoyoEase && (copy.yoyoEase = yoyoEase);
            staggerVarsToMerge && _merge(copy, staggerVarsToMerge);
            curTarget = parsedTargets[i];
            copy.duration = +_parseFuncOrString(duration, _assertThisInitialized(_this3), i, curTarget, parsedTargets);
            copy.delay = (+_parseFuncOrString(delay, _assertThisInitialized(_this3), i, curTarget, parsedTargets) || 0) - _this3._delay;

            if (!stagger && l === 1 && copy.delay) {
              _this3._delay = delay = copy.delay;
              _this3._start += delay;
              copy.delay = 0;
            }

            tl.to(curTarget, copy, staggerFunc ? staggerFunc(i, curTarget, parsedTargets) : 0);
            tl._ease = _easeMap.none;
          }

          tl.duration() ? duration = delay = 0 : _this3.timeline = 0;
        } else if (keyframes) {
          _inheritDefaults(_setDefaults(tl.vars.defaults, {
            ease: "none"
          }));

          tl._ease = _parseEase(keyframes.ease || vars.ease || "none");
          var time = 0,
              a,
              kf,
              v;

          if (_isArray(keyframes)) {
            keyframes.forEach(function (frame) {
              return tl.to(parsedTargets, frame, ">");
            });
            tl.duration();
          } else {
            copy = {};

            for (p in keyframes) {
              p === "ease" || p === "easeEach" || _parseKeyframe(p, keyframes[p], copy, keyframes.easeEach);
            }

            for (p in copy) {
              a = copy[p].sort(function (a, b) {
                return a.t - b.t;
              });
              time = 0;

              for (i = 0; i < a.length; i++) {
                kf = a[i];
                v = {
                  ease: kf.e,
                  duration: (kf.t - (i ? a[i - 1].t : 0)) / 100 * duration
                };
                v[p] = kf.v;
                tl.to(parsedTargets, v, time);
                time += v.duration;
              }
            }

            tl.duration() < duration && tl.to({}, {
              duration: duration - tl.duration()
            });
          }
        }

        duration || _this3.duration(duration = tl.duration());
      } else {
        _this3.timeline = 0;
      }

      if (overwrite === true && !_suppressOverwrites) {
        _overwritingTween = _assertThisInitialized(_this3);

        _globalTimeline.killTweensOf(parsedTargets);

        _overwritingTween = 0;
      }

      _addToTimeline(parent, _assertThisInitialized(_this3), position);

      vars.reversed && _this3.reverse();
      vars.paused && _this3.paused(true);

      if (immediateRender || !duration && !keyframes && _this3._start === _roundPrecise(parent._time) && _isNotFalse(immediateRender) && _hasNoPausedAncestors(_assertThisInitialized(_this3)) && parent.data !== "nested") {
        _this3._tTime = -_tinyNum;

        _this3.render(Math.max(0, -delay) || 0);
      }

      scrollTrigger && _scrollTrigger(_assertThisInitialized(_this3), scrollTrigger);
      return _this3;
    }

    var _proto3 = Tween.prototype;

    _proto3.render = function render(totalTime, suppressEvents, force) {
      var prevTime = this._time,
          tDur = this._tDur,
          dur = this._dur,
          isNegative = totalTime < 0,
          tTime = totalTime > tDur - _tinyNum && !isNegative ? tDur : totalTime < _tinyNum ? 0 : totalTime,
          time,
          pt,
          iteration,
          cycleDuration,
          prevIteration,
          isYoyo,
          ratio,
          timeline,
          yoyoEase;

      if (!dur) {
        _renderZeroDurationTween(this, totalTime, suppressEvents, force);
      } else if (tTime !== this._tTime || !totalTime || force || !this._initted && this._tTime || this._startAt && this._zTime < 0 !== isNegative) {
        time = tTime;
        timeline = this.timeline;

        if (this._repeat) {
          cycleDuration = dur + this._rDelay;

          if (this._repeat < -1 && isNegative) {
            return this.totalTime(cycleDuration * 100 + totalTime, suppressEvents, force);
          }

          time = _roundPrecise(tTime % cycleDuration);

          if (tTime === tDur) {
            iteration = this._repeat;
            time = dur;
          } else {
            iteration = ~~(tTime / cycleDuration);

            if (iteration && iteration === tTime / cycleDuration) {
              time = dur;
              iteration--;
            }

            time > dur && (time = dur);
          }

          isYoyo = this._yoyo && iteration & 1;

          if (isYoyo) {
            yoyoEase = this._yEase;
            time = dur - time;
          }

          prevIteration = _animationCycle(this._tTime, cycleDuration);

          if (time === prevTime && !force && this._initted) {
            this._tTime = tTime;
            return this;
          }

          if (iteration !== prevIteration) {
            timeline && this._yEase && _propagateYoyoEase(timeline, isYoyo);

            if (this.vars.repeatRefresh && !isYoyo && !this._lock) {
              this._lock = force = 1;
              this.render(_roundPrecise(cycleDuration * iteration), true).invalidate()._lock = 0;
            }
          }
        }

        if (!this._initted) {
          if (_attemptInitTween(this, isNegative ? totalTime : time, force, suppressEvents, tTime)) {
            this._tTime = 0;
            return this;
          }

          if (prevTime !== this._time) {
            return this;
          }

          if (dur !== this._dur) {
            return this.render(totalTime, suppressEvents, force);
          }
        }

        this._tTime = tTime;
        this._time = time;

        if (!this._act && this._ts) {
          this._act = 1;
          this._lazy = 0;
        }

        this.ratio = ratio = (yoyoEase || this._ease)(time / dur);

        if (this._from) {
          this.ratio = ratio = 1 - ratio;
        }

        if (time && !prevTime && !suppressEvents && !iteration) {
          _callback(this, "onStart");

          if (this._tTime !== tTime) {
            return this;
          }
        }

        pt = this._pt;

        while (pt) {
          pt.r(ratio, pt.d);
          pt = pt._next;
        }

        timeline && timeline.render(totalTime < 0 ? totalTime : !time && isYoyo ? -_tinyNum : timeline._dur * timeline._ease(time / this._dur), suppressEvents, force) || this._startAt && (this._zTime = totalTime);

        if (this._onUpdate && !suppressEvents) {
          isNegative && _rewindStartAt(this, totalTime, suppressEvents, force);

          _callback(this, "onUpdate");
        }

        this._repeat && iteration !== prevIteration && this.vars.onRepeat && !suppressEvents && this.parent && _callback(this, "onRepeat");

        if ((tTime === this._tDur || !tTime) && this._tTime === tTime) {
          isNegative && !this._onUpdate && _rewindStartAt(this, totalTime, true, true);
          (totalTime || !dur) && (tTime === this._tDur && this._ts > 0 || !tTime && this._ts < 0) && _removeFromParent(this, 1);

          if (!suppressEvents && !(isNegative && !prevTime) && (tTime || prevTime || isYoyo)) {
            _callback(this, tTime === tDur ? "onComplete" : "onReverseComplete", true);

            this._prom && !(tTime < tDur && this.timeScale() > 0) && this._prom();
          }
        }
      }

      return this;
    };

    _proto3.targets = function targets() {
      return this._targets;
    };

    _proto3.invalidate = function invalidate(soft) {
      (!soft || !this.vars.runBackwards) && (this._startAt = 0);
      this._pt = this._op = this._onUpdate = this._lazy = this.ratio = 0;
      this._ptLookup = [];
      this.timeline && this.timeline.invalidate(soft);
      return _Animation2.prototype.invalidate.call(this, soft);
    };

    _proto3.resetTo = function resetTo(property, value, start, startIsRelative) {
      _tickerActive || _ticker.wake();
      this._ts || this.play();
      var time = Math.min(this._dur, (this._dp._time - this._start) * this._ts),
          ratio;
      this._initted || _initTween(this, time);
      ratio = this._ease(time / this._dur);

      if (_updatePropTweens(this, property, value, start, startIsRelative, ratio, time)) {
        return this.resetTo(property, value, start, startIsRelative);
      }

      _alignPlayhead(this, 0);

      this.parent || _addLinkedListItem(this._dp, this, "_first", "_last", this._dp._sort ? "_start" : 0);
      return this.render(0);
    };

    _proto3.kill = function kill(targets, vars) {
      if (vars === void 0) {
        vars = "all";
      }

      if (!targets && (!vars || vars === "all")) {
        this._lazy = this._pt = 0;
        return this.parent ? _interrupt(this) : this;
      }

      if (this.timeline) {
        var tDur = this.timeline.totalDuration();
        this.timeline.killTweensOf(targets, vars, _overwritingTween && _overwritingTween.vars.overwrite !== true)._first || _interrupt(this);
        this.parent && tDur !== this.timeline.totalDuration() && _setDuration(this, this._dur * this.timeline._tDur / tDur, 0, 1);
        return this;
      }

      var parsedTargets = this._targets,
          killingTargets = targets ? toArray(targets) : parsedTargets,
          propTweenLookup = this._ptLookup,
          firstPT = this._pt,
          overwrittenProps,
          curLookup,
          curOverwriteProps,
          props,
          p,
          pt,
          i;

      if ((!vars || vars === "all") && _arraysMatch(parsedTargets, killingTargets)) {
        vars === "all" && (this._pt = 0);
        return _interrupt(this);
      }

      overwrittenProps = this._op = this._op || [];

      if (vars !== "all") {
        if (_isString(vars)) {
          p = {};

          _forEachName(vars, function (name) {
            return p[name] = 1;
          });

          vars = p;
        }

        vars = _addAliasesToVars(parsedTargets, vars);
      }

      i = parsedTargets.length;

      while (i--) {
        if (~killingTargets.indexOf(parsedTargets[i])) {
          curLookup = propTweenLookup[i];

          if (vars === "all") {
            overwrittenProps[i] = vars;
            props = curLookup;
            curOverwriteProps = {};
          } else {
            curOverwriteProps = overwrittenProps[i] = overwrittenProps[i] || {};
            props = vars;
          }

          for (p in props) {
            pt = curLookup && curLookup[p];

            if (pt) {
              if (!("kill" in pt.d) || pt.d.kill(p) === true) {
                _removeLinkedListItem(this, pt, "_pt");
              }

              delete curLookup[p];
            }

            if (curOverwriteProps !== "all") {
              curOverwriteProps[p] = 1;
            }
          }
        }
      }

      this._initted && !this._pt && firstPT && _interrupt(this);
      return this;
    };

    Tween.to = function to(targets, vars) {
      return new Tween(targets, vars, arguments[2]);
    };

    Tween.from = function from(targets, vars) {
      return _createTweenType(1, arguments);
    };

    Tween.delayedCall = function delayedCall(delay, callback, params, scope) {
      return new Tween(callback, 0, {
        immediateRender: false,
        lazy: false,
        overwrite: false,
        delay: delay,
        onComplete: callback,
        onReverseComplete: callback,
        onCompleteParams: params,
        onReverseCompleteParams: params,
        callbackScope: scope
      });
    };

    Tween.fromTo = function fromTo(targets, fromVars, toVars) {
      return _createTweenType(2, arguments);
    };

    Tween.set = function set(targets, vars) {
      vars.duration = 0;
      vars.repeatDelay || (vars.repeat = 0);
      return new Tween(targets, vars);
    };

    Tween.killTweensOf = function killTweensOf(targets, props, onlyActive) {
      return _globalTimeline.killTweensOf(targets, props, onlyActive);
    };

    return Tween;
  }(Animation);

  _setDefaults(Tween.prototype, {
    _targets: [],
    _lazy: 0,
    _startAt: 0,
    _op: 0,
    _onInit: 0
  });

  _forEachName("staggerTo,staggerFrom,staggerFromTo", function (name) {
    Tween[name] = function () {
      var tl = new Timeline(),
          params = _slice.call(arguments, 0);

      params.splice(name === "staggerFromTo" ? 5 : 4, 0, 0);
      return tl[name].apply(tl, params);
    };
  });

  var _setterPlain = function _setterPlain(target, property, value) {
    return target[property] = value;
  },
      _setterFunc = function _setterFunc(target, property, value) {
    return target[property](value);
  },
      _setterFuncWithParam = function _setterFuncWithParam(target, property, value, data) {
    return target[property](data.fp, value);
  },
      _setterAttribute = function _setterAttribute(target, property, value) {
    return target.setAttribute(property, value);
  },
      _getSetter = function _getSetter(target, property) {
    return _isFunction(target[property]) ? _setterFunc : _isUndefined(target[property]) && target.setAttribute ? _setterAttribute : _setterPlain;
  },
      _renderPlain = function _renderPlain(ratio, data) {
    return data.set(data.t, data.p, Math.round((data.s + data.c * ratio) * 1000000) / 1000000, data);
  },
      _renderBoolean = function _renderBoolean(ratio, data) {
    return data.set(data.t, data.p, !!(data.s + data.c * ratio), data);
  },
      _renderComplexString = function _renderComplexString(ratio, data) {
    var pt = data._pt,
        s = "";

    if (!ratio && data.b) {
      s = data.b;
    } else if (ratio === 1 && data.e) {
      s = data.e;
    } else {
      while (pt) {
        s = pt.p + (pt.m ? pt.m(pt.s + pt.c * ratio) : Math.round((pt.s + pt.c * ratio) * 10000) / 10000) + s;
        pt = pt._next;
      }

      s += data.c;
    }

    data.set(data.t, data.p, s, data);
  },
      _renderPropTweens = function _renderPropTweens(ratio, data) {
    var pt = data._pt;

    while (pt) {
      pt.r(ratio, pt.d);
      pt = pt._next;
    }
  },
      _addPluginModifier = function _addPluginModifier(modifier, tween, target, property) {
    var pt = this._pt,
        next;

    while (pt) {
      next = pt._next;
      pt.p === property && pt.modifier(modifier, tween, target);
      pt = next;
    }
  },
      _killPropTweensOf = function _killPropTweensOf(property) {
    var pt = this._pt,
        hasNonDependentRemaining,
        next;

    while (pt) {
      next = pt._next;

      if (pt.p === property && !pt.op || pt.op === property) {
        _removeLinkedListItem(this, pt, "_pt");
      } else if (!pt.dep) {
        hasNonDependentRemaining = 1;
      }

      pt = next;
    }

    return !hasNonDependentRemaining;
  },
      _setterWithModifier = function _setterWithModifier(target, property, value, data) {
    data.mSet(target, property, data.m.call(data.tween, value, data.mt), data);
  },
      _sortPropTweensByPriority = function _sortPropTweensByPriority(parent) {
    var pt = parent._pt,
        next,
        pt2,
        first,
        last;

    while (pt) {
      next = pt._next;
      pt2 = first;

      while (pt2 && pt2.pr > pt.pr) {
        pt2 = pt2._next;
      }

      if (pt._prev = pt2 ? pt2._prev : last) {
        pt._prev._next = pt;
      } else {
        first = pt;
      }

      if (pt._next = pt2) {
        pt2._prev = pt;
      } else {
        last = pt;
      }

      pt = next;
    }

    parent._pt = first;
  };

  var PropTween = function () {
    function PropTween(next, target, prop, start, change, renderer, data, setter, priority) {
      this.t = target;
      this.s = start;
      this.c = change;
      this.p = prop;
      this.r = renderer || _renderPlain;
      this.d = data || this;
      this.set = setter || _setterPlain;
      this.pr = priority || 0;
      this._next = next;

      if (next) {
        next._prev = this;
      }
    }

    var _proto4 = PropTween.prototype;

    _proto4.modifier = function modifier(func, tween, target) {
      this.mSet = this.mSet || this.set;
      this.set = _setterWithModifier;
      this.m = func;
      this.mt = target;
      this.tween = tween;
    };

    return PropTween;
  }();

  _forEachName(_callbackNames + "parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert,scrollTrigger", function (name) {
    return _reservedProps[name] = 1;
  });

  _globals.TweenMax = _globals.TweenLite = Tween;
  _globals.TimelineLite = _globals.TimelineMax = Timeline;
  _globalTimeline = new Timeline({
    sortChildren: false,
    defaults: _defaults,
    autoRemoveChildren: true,
    id: "root",
    smoothChildTiming: true
  });
  _config.stringFilter = _colorStringFilter;

  var _media = [],
      _listeners = {},
      _emptyArray = [],
      _lastMediaTime = 0,
      _dispatch = function _dispatch(type) {
    return (_listeners[type] || _emptyArray).map(function (f) {
      return f();
    });
  },
      _onMediaChange = function _onMediaChange() {
    var time = Date.now(),
        matches = [];

    if (time - _lastMediaTime > 2) {
      _dispatch("matchMediaInit");

      _media.forEach(function (c) {
        var queries = c.queries,
            conditions = c.conditions,
            match,
            p,
            anyMatch,
            toggled;

        for (p in queries) {
          match = _win.matchMedia(queries[p]).matches;
          match && (anyMatch = 1);

          if (match !== conditions[p]) {
            conditions[p] = match;
            toggled = 1;
          }
        }

        if (toggled) {
          c.revert();
          anyMatch && matches.push(c);
        }
      });

      _dispatch("matchMediaRevert");

      matches.forEach(function (c) {
        return c.onMatch(c);
      });
      _lastMediaTime = time;

      _dispatch("matchMedia");
    }
  };

  var Context = function () {
    function Context(func, scope) {
      this.selector = scope && selector(scope);
      this.data = [];
      this._r = [];
      this.isReverted = false;
      func && this.add(func);
    }

    var _proto5 = Context.prototype;

    _proto5.add = function add(name, func, scope) {
      if (_isFunction(name)) {
        scope = func;
        func = name;
        name = _isFunction;
      }

      var self = this,
          f = function f() {
        var prev = _context,
            prevSelector = self.selector,
            result;
        prev && prev !== self && prev.data.push(self);
        scope && (self.selector = selector(scope));
        _context = self;
        result = func.apply(self, arguments);
        _isFunction(result) && self._r.push(result);
        _context = prev;
        self.selector = prevSelector;
        self.isReverted = false;
        return result;
      };

      self.last = f;
      return name === _isFunction ? f(self) : name ? self[name] = f : f;
    };

    _proto5.ignore = function ignore(func) {
      var prev = _context;
      _context = null;
      func(this);
      _context = prev;
    };

    _proto5.getTweens = function getTweens() {
      var a = [];
      this.data.forEach(function (e) {
        return e instanceof Context ? a.push.apply(a, e.getTweens()) : e instanceof Tween && !(e.parent && e.parent.data === "nested") && a.push(e);
      });
      return a;
    };

    _proto5.clear = function clear() {
      this._r.length = this.data.length = 0;
    };

    _proto5.kill = function kill(revert, matchMedia) {
      var _this4 = this;

      if (revert) {
        var tweens = this.getTweens();
        this.data.forEach(function (t) {
          if (t.data === "isFlip") {
            t.revert();
            t.getChildren(true, true, false).forEach(function (tween) {
              return tweens.splice(tweens.indexOf(tween), 1);
            });
          }
        });
        tweens.map(function (t) {
          return {
            g: t.globalTime(0),
            t: t
          };
        }).sort(function (a, b) {
          return b.g - a.g || -1;
        }).forEach(function (o) {
          return o.t.revert(revert);
        });
        this.data.forEach(function (e) {
          return !(e instanceof Animation) && e.revert && e.revert(revert);
        });

        this._r.forEach(function (f) {
          return f(revert, _this4);
        });

        this.isReverted = true;
      } else {
        this.data.forEach(function (e) {
          return e.kill && e.kill();
        });
      }

      this.clear();

      if (matchMedia) {
        var i = _media.indexOf(this);

        !!~i && _media.splice(i, 1);
      }
    };

    _proto5.revert = function revert(config) {
      this.kill(config || {});
    };

    return Context;
  }();

  var MatchMedia = function () {
    function MatchMedia(scope) {
      this.contexts = [];
      this.scope = scope;
    }

    var _proto6 = MatchMedia.prototype;

    _proto6.add = function add(conditions, func, scope) {
      _isObject(conditions) || (conditions = {
        matches: conditions
      });
      var context = new Context(0, scope || this.scope),
          cond = context.conditions = {},
          mq,
          p,
          active;
      this.contexts.push(context);
      func = context.add("onMatch", func);
      context.queries = conditions;

      for (p in conditions) {
        if (p === "all") {
          active = 1;
        } else {
          mq = _win.matchMedia(conditions[p]);

          if (mq) {
            _media.indexOf(context) < 0 && _media.push(context);
            (cond[p] = mq.matches) && (active = 1);
            mq.addListener ? mq.addListener(_onMediaChange) : mq.addEventListener("change", _onMediaChange);
          }
        }
      }

      active && func(context);
      return this;
    };

    _proto6.revert = function revert(config) {
      this.kill(config || {});
    };

    _proto6.kill = function kill(revert) {
      this.contexts.forEach(function (c) {
        return c.kill(revert, true);
      });
    };

    return MatchMedia;
  }();

  var _gsap = {
    registerPlugin: function registerPlugin() {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      args.forEach(function (config) {
        return _createPlugin(config);
      });
    },
    timeline: function timeline(vars) {
      return new Timeline(vars);
    },
    getTweensOf: function getTweensOf(targets, onlyActive) {
      return _globalTimeline.getTweensOf(targets, onlyActive);
    },
    getProperty: function getProperty(target, property, unit, uncache) {
      _isString(target) && (target = toArray(target)[0]);

      var getter = _getCache(target || {}).get,
          format = unit ? _passThrough : _numericIfPossible;

      unit === "native" && (unit = "");
      return !target ? target : !property ? function (property, unit, uncache) {
        return format((_plugins[property] && _plugins[property].get || getter)(target, property, unit, uncache));
      } : format((_plugins[property] && _plugins[property].get || getter)(target, property, unit, uncache));
    },
    quickSetter: function quickSetter(target, property, unit) {
      target = toArray(target);

      if (target.length > 1) {
        var setters = target.map(function (t) {
          return gsap.quickSetter(t, property, unit);
        }),
            l = setters.length;
        return function (value) {
          var i = l;

          while (i--) {
            setters[i](value);
          }
        };
      }

      target = target[0] || {};

      var Plugin = _plugins[property],
          cache = _getCache(target),
          p = cache.harness && (cache.harness.aliases || {})[property] || property,
          setter = Plugin ? function (value) {
        var p = new Plugin();
        _quickTween._pt = 0;
        p.init(target, unit ? value + unit : value, _quickTween, 0, [target]);
        p.render(1, p);
        _quickTween._pt && _renderPropTweens(1, _quickTween);
      } : cache.set(target, p);

      return Plugin ? setter : function (value) {
        return setter(target, p, unit ? value + unit : value, cache, 1);
      };
    },
    quickTo: function quickTo(target, property, vars) {
      var _merge2;

      var tween = gsap.to(target, _merge((_merge2 = {}, _merge2[property] = "+=0.1", _merge2.paused = true, _merge2), vars || {})),
          func = function func(value, start, startIsRelative) {
        return tween.resetTo(property, value, start, startIsRelative);
      };

      func.tween = tween;
      return func;
    },
    isTweening: function isTweening(targets) {
      return _globalTimeline.getTweensOf(targets, true).length > 0;
    },
    defaults: function defaults(value) {
      value && value.ease && (value.ease = _parseEase(value.ease, _defaults.ease));
      return _mergeDeep(_defaults, value || {});
    },
    config: function config(value) {
      return _mergeDeep(_config, value || {});
    },
    registerEffect: function registerEffect(_ref3) {
      var name = _ref3.name,
          effect = _ref3.effect,
          plugins = _ref3.plugins,
          defaults = _ref3.defaults,
          extendTimeline = _ref3.extendTimeline;
      (plugins || "").split(",").forEach(function (pluginName) {
        return pluginName && !_plugins[pluginName] && !_globals[pluginName] && _warn(name + " effect requires " + pluginName + " plugin.");
      });

      _effects[name] = function (targets, vars, tl) {
        return effect(toArray(targets), _setDefaults(vars || {}, defaults), tl);
      };

      if (extendTimeline) {
        Timeline.prototype[name] = function (targets, vars, position) {
          return this.add(_effects[name](targets, _isObject(vars) ? vars : (position = vars) && {}, this), position);
        };
      }
    },
    registerEase: function registerEase(name, ease) {
      _easeMap[name] = _parseEase(ease);
    },
    parseEase: function parseEase(ease, defaultEase) {
      return arguments.length ? _parseEase(ease, defaultEase) : _easeMap;
    },
    getById: function getById(id) {
      return _globalTimeline.getById(id);
    },
    exportRoot: function exportRoot(vars, includeDelayedCalls) {
      if (vars === void 0) {
        vars = {};
      }

      var tl = new Timeline(vars),
          child,
          next;
      tl.smoothChildTiming = _isNotFalse(vars.smoothChildTiming);

      _globalTimeline.remove(tl);

      tl._dp = 0;
      tl._time = tl._tTime = _globalTimeline._time;
      child = _globalTimeline._first;

      while (child) {
        next = child._next;

        if (includeDelayedCalls || !(!child._dur && child instanceof Tween && child.vars.onComplete === child._targets[0])) {
          _addToTimeline(tl, child, child._start - child._delay);
        }

        child = next;
      }

      _addToTimeline(_globalTimeline, tl, 0);

      return tl;
    },
    context: function context(func, scope) {
      return func ? new Context(func, scope) : _context;
    },
    matchMedia: function matchMedia(scope) {
      return new MatchMedia(scope);
    },
    matchMediaRefresh: function matchMediaRefresh() {
      return _media.forEach(function (c) {
        var cond = c.conditions,
            found,
            p;

        for (p in cond) {
          if (cond[p]) {
            cond[p] = false;
            found = 1;
          }
        }

        found && c.revert();
      }) || _onMediaChange();
    },
    addEventListener: function addEventListener(type, callback) {
      var a = _listeners[type] || (_listeners[type] = []);
      ~a.indexOf(callback) || a.push(callback);
    },
    removeEventListener: function removeEventListener(type, callback) {
      var a = _listeners[type],
          i = a && a.indexOf(callback);
      i >= 0 && a.splice(i, 1);
    },
    utils: {
      wrap: wrap,
      wrapYoyo: wrapYoyo,
      distribute: distribute,
      random: random,
      snap: snap,
      normalize: normalize,
      getUnit: getUnit,
      clamp: clamp,
      splitColor: splitColor,
      toArray: toArray,
      selector: selector,
      mapRange: mapRange,
      pipe: pipe,
      unitize: unitize,
      interpolate: interpolate,
      shuffle: shuffle
    },
    install: _install,
    effects: _effects,
    ticker: _ticker,
    updateRoot: Timeline.updateRoot,
    plugins: _plugins,
    globalTimeline: _globalTimeline,
    core: {
      PropTween: PropTween,
      globals: _addGlobal,
      Tween: Tween,
      Timeline: Timeline,
      Animation: Animation,
      getCache: _getCache,
      _removeLinkedListItem: _removeLinkedListItem,
      reverting: function reverting() {
        return _reverting;
      },
      context: function context(toAdd) {
        if (toAdd && _context) {
          _context.data.push(toAdd);

          toAdd._ctx = _context;
        }

        return _context;
      },
      suppressOverwrites: function suppressOverwrites(value) {
        return _suppressOverwrites = value;
      }
    }
  };

  _forEachName("to,from,fromTo,delayedCall,set,killTweensOf", function (name) {
    return _gsap[name] = Tween[name];
  });

  _ticker.add(Timeline.updateRoot);

  _quickTween = _gsap.to({}, {
    duration: 0
  });

  var _getPluginPropTween = function _getPluginPropTween(plugin, prop) {
    var pt = plugin._pt;

    while (pt && pt.p !== prop && pt.op !== prop && pt.fp !== prop) {
      pt = pt._next;
    }

    return pt;
  },
      _addModifiers = function _addModifiers(tween, modifiers) {
    var targets = tween._targets,
        p,
        i,
        pt;

    for (p in modifiers) {
      i = targets.length;

      while (i--) {
        pt = tween._ptLookup[i][p];

        if (pt && (pt = pt.d)) {
          if (pt._pt) {
            pt = _getPluginPropTween(pt, p);
          }

          pt && pt.modifier && pt.modifier(modifiers[p], tween, targets[i], p);
        }
      }
    }
  },
      _buildModifierPlugin = function _buildModifierPlugin(name, modifier) {
    return {
      name: name,
      rawVars: 1,
      init: function init(target, vars, tween) {
        tween._onInit = function (tween) {
          var temp, p;

          if (_isString(vars)) {
            temp = {};

            _forEachName(vars, function (name) {
              return temp[name] = 1;
            });

            vars = temp;
          }

          if (modifier) {
            temp = {};

            for (p in vars) {
              temp[p] = modifier(vars[p]);
            }

            vars = temp;
          }

          _addModifiers(tween, vars);
        };
      }
    };
  };

  var gsap = _gsap.registerPlugin({
    name: "attr",
    init: function init(target, vars, tween, index, targets) {
      var p, pt, v;
      this.tween = tween;

      for (p in vars) {
        v = target.getAttribute(p) || "";
        pt = this.add(target, "setAttribute", (v || 0) + "", vars[p], index, targets, 0, 0, p);
        pt.op = p;
        pt.b = v;

        this._props.push(p);
      }
    },
    render: function render(ratio, data) {
      var pt = data._pt;

      while (pt) {
        _reverting ? pt.set(pt.t, pt.p, pt.b, pt) : pt.r(ratio, pt.d);
        pt = pt._next;
      }
    }
  }, {
    name: "endArray",
    init: function init(target, value) {
      var i = value.length;

      while (i--) {
        this.add(target, i, target[i] || 0, value[i], 0, 0, 0, 0, 0, 1);
      }
    }
  }, _buildModifierPlugin("roundProps", _roundModifier), _buildModifierPlugin("modifiers"), _buildModifierPlugin("snap", snap)) || _gsap;

  Tween.version = Timeline.version = gsap.version = "3.11.5";
  _coreReady = 1;
  _windowExists() && _wake();
  var Power0 = _easeMap.Power0,
      Power1 = _easeMap.Power1,
      Power2 = _easeMap.Power2,
      Power3 = _easeMap.Power3,
      Power4 = _easeMap.Power4,
      Linear = _easeMap.Linear,
      Quad = _easeMap.Quad,
      Cubic = _easeMap.Cubic,
      Quart = _easeMap.Quart,
      Quint = _easeMap.Quint,
      Strong = _easeMap.Strong,
      Elastic = _easeMap.Elastic,
      Back = _easeMap.Back,
      SteppedEase = _easeMap.SteppedEase,
      Bounce = _easeMap.Bounce,
      Sine = _easeMap.Sine,
      Expo = _easeMap.Expo,
      Circ = _easeMap.Circ;

  var _win$1,
      _doc$1,
      _docElement,
      _pluginInitted,
      _tempDiv,
      _tempDivStyler,
      _recentSetterPlugin,
      _reverting$1,
      _windowExists$1 = function _windowExists() {
    return typeof window !== "undefined";
  },
      _transformProps = {},
      _RAD2DEG = 180 / Math.PI,
      _DEG2RAD = Math.PI / 180,
      _atan2 = Math.atan2,
      _bigNum$1 = 1e8,
      _capsExp = /([A-Z])/g,
      _horizontalExp = /(left|right|width|margin|padding|x)/i,
      _complexExp = /[\s,\(]\S/,
      _propertyAliases = {
    autoAlpha: "opacity,visibility",
    scale: "scaleX,scaleY",
    alpha: "opacity"
  },
      _renderCSSProp = function _renderCSSProp(ratio, data) {
    return data.set(data.t, data.p, Math.round((data.s + data.c * ratio) * 10000) / 10000 + data.u, data);
  },
      _renderPropWithEnd = function _renderPropWithEnd(ratio, data) {
    return data.set(data.t, data.p, ratio === 1 ? data.e : Math.round((data.s + data.c * ratio) * 10000) / 10000 + data.u, data);
  },
      _renderCSSPropWithBeginning = function _renderCSSPropWithBeginning(ratio, data) {
    return data.set(data.t, data.p, ratio ? Math.round((data.s + data.c * ratio) * 10000) / 10000 + data.u : data.b, data);
  },
      _renderRoundedCSSProp = function _renderRoundedCSSProp(ratio, data) {
    var value = data.s + data.c * ratio;
    data.set(data.t, data.p, ~~(value + (value < 0 ? -.5 : .5)) + data.u, data);
  },
      _renderNonTweeningValue = function _renderNonTweeningValue(ratio, data) {
    return data.set(data.t, data.p, ratio ? data.e : data.b, data);
  },
      _renderNonTweeningValueOnlyAtEnd = function _renderNonTweeningValueOnlyAtEnd(ratio, data) {
    return data.set(data.t, data.p, ratio !== 1 ? data.b : data.e, data);
  },
      _setterCSSStyle = function _setterCSSStyle(target, property, value) {
    return target.style[property] = value;
  },
      _setterCSSProp = function _setterCSSProp(target, property, value) {
    return target.style.setProperty(property, value);
  },
      _setterTransform = function _setterTransform(target, property, value) {
    return target._gsap[property] = value;
  },
      _setterScale = function _setterScale(target, property, value) {
    return target._gsap.scaleX = target._gsap.scaleY = value;
  },
      _setterScaleWithRender = function _setterScaleWithRender(target, property, value, data, ratio) {
    var cache = target._gsap;
    cache.scaleX = cache.scaleY = value;
    cache.renderTransform(ratio, cache);
  },
      _setterTransformWithRender = function _setterTransformWithRender(target, property, value, data, ratio) {
    var cache = target._gsap;
    cache[property] = value;
    cache.renderTransform(ratio, cache);
  },
      _transformProp = "transform",
      _transformOriginProp = _transformProp + "Origin",
      _saveStyle = function _saveStyle(property, isNotCSS) {
    var _this = this;

    var target = this.target,
        style = target.style;

    if (property in _transformProps) {
      this.tfm = this.tfm || {};

      if (property !== "transform") {
        property = _propertyAliases[property] || property;
        ~property.indexOf(",") ? property.split(",").forEach(function (a) {
          return _this.tfm[a] = _get(target, a);
        }) : this.tfm[property] = target._gsap.x ? target._gsap[property] : _get(target, property);
      } else {
        return _propertyAliases.transform.split(",").forEach(function (p) {
          return _saveStyle.call(_this, p, isNotCSS);
        });
      }

      if (this.props.indexOf(_transformProp) >= 0) {
        return;
      }

      if (target._gsap.svg) {
        this.svgo = target.getAttribute("data-svg-origin");
        this.props.push(_transformOriginProp, isNotCSS, "");
      }

      property = _transformProp;
    }

    (style || isNotCSS) && this.props.push(property, isNotCSS, style[property]);
  },
      _removeIndependentTransforms = function _removeIndependentTransforms(style) {
    if (style.translate) {
      style.removeProperty("translate");
      style.removeProperty("scale");
      style.removeProperty("rotate");
    }
  },
      _revertStyle = function _revertStyle() {
    var props = this.props,
        target = this.target,
        style = target.style,
        cache = target._gsap,
        i,
        p;

    for (i = 0; i < props.length; i += 3) {
      props[i + 1] ? target[props[i]] = props[i + 2] : props[i + 2] ? style[props[i]] = props[i + 2] : style.removeProperty(props[i].substr(0, 2) === "--" ? props[i] : props[i].replace(_capsExp, "-$1").toLowerCase());
    }

    if (this.tfm) {
      for (p in this.tfm) {
        cache[p] = this.tfm[p];
      }

      if (cache.svg) {
        cache.renderTransform();
        target.setAttribute("data-svg-origin", this.svgo || "");
      }

      i = _reverting$1();

      if ((!i || !i.isStart) && !style[_transformProp]) {
        _removeIndependentTransforms(style);

        cache.uncache = 1;
      }
    }
  },
      _getStyleSaver = function _getStyleSaver(target, properties) {
    var saver = {
      target: target,
      props: [],
      revert: _revertStyle,
      save: _saveStyle
    };
    target._gsap || gsap.core.getCache(target);
    properties && properties.split(",").forEach(function (p) {
      return saver.save(p);
    });
    return saver;
  },
      _supports3D,
      _createElement = function _createElement(type, ns) {
    var e = _doc$1.createElementNS ? _doc$1.createElementNS((ns || "http://www.w3.org/1999/xhtml").replace(/^https/, "http"), type) : _doc$1.createElement(type);
    return e.style ? e : _doc$1.createElement(type);
  },
      _getComputedProperty = function _getComputedProperty(target, property, skipPrefixFallback) {
    var cs = getComputedStyle(target);
    return cs[property] || cs.getPropertyValue(property.replace(_capsExp, "-$1").toLowerCase()) || cs.getPropertyValue(property) || !skipPrefixFallback && _getComputedProperty(target, _checkPropPrefix(property) || property, 1) || "";
  },
      _prefixes = "O,Moz,ms,Ms,Webkit".split(","),
      _checkPropPrefix = function _checkPropPrefix(property, element, preferPrefix) {
    var e = element || _tempDiv,
        s = e.style,
        i = 5;

    if (property in s && !preferPrefix) {
      return property;
    }

    property = property.charAt(0).toUpperCase() + property.substr(1);

    while (i-- && !(_prefixes[i] + property in s)) {}

    return i < 0 ? null : (i === 3 ? "ms" : i >= 0 ? _prefixes[i] : "") + property;
  },
      _initCore = function _initCore() {
    if (_windowExists$1() && window.document) {
      _win$1 = window;
      _doc$1 = _win$1.document;
      _docElement = _doc$1.documentElement;
      _tempDiv = _createElement("div") || {
        style: {}
      };
      _tempDivStyler = _createElement("div");
      _transformProp = _checkPropPrefix(_transformProp);
      _transformOriginProp = _transformProp + "Origin";
      _tempDiv.style.cssText = "border-width:0;line-height:0;position:absolute;padding:0";
      _supports3D = !!_checkPropPrefix("perspective");
      _reverting$1 = gsap.core.reverting;
      _pluginInitted = 1;
    }
  },
      _getBBoxHack = function _getBBoxHack(swapIfPossible) {
    var svg = _createElement("svg", this.ownerSVGElement && this.ownerSVGElement.getAttribute("xmlns") || "http://www.w3.org/2000/svg"),
        oldParent = this.parentNode,
        oldSibling = this.nextSibling,
        oldCSS = this.style.cssText,
        bbox;

    _docElement.appendChild(svg);

    svg.appendChild(this);
    this.style.display = "block";

    if (swapIfPossible) {
      try {
        bbox = this.getBBox();
        this._gsapBBox = this.getBBox;
        this.getBBox = _getBBoxHack;
      } catch (e) {}
    } else if (this._gsapBBox) {
      bbox = this._gsapBBox();
    }

    if (oldParent) {
      if (oldSibling) {
        oldParent.insertBefore(this, oldSibling);
      } else {
        oldParent.appendChild(this);
      }
    }

    _docElement.removeChild(svg);

    this.style.cssText = oldCSS;
    return bbox;
  },
      _getAttributeFallbacks = function _getAttributeFallbacks(target, attributesArray) {
    var i = attributesArray.length;

    while (i--) {
      if (target.hasAttribute(attributesArray[i])) {
        return target.getAttribute(attributesArray[i]);
      }
    }
  },
      _getBBox = function _getBBox(target) {
    var bounds;

    try {
      bounds = target.getBBox();
    } catch (error) {
      bounds = _getBBoxHack.call(target, true);
    }

    bounds && (bounds.width || bounds.height) || target.getBBox === _getBBoxHack || (bounds = _getBBoxHack.call(target, true));
    return bounds && !bounds.width && !bounds.x && !bounds.y ? {
      x: +_getAttributeFallbacks(target, ["x", "cx", "x1"]) || 0,
      y: +_getAttributeFallbacks(target, ["y", "cy", "y1"]) || 0,
      width: 0,
      height: 0
    } : bounds;
  },
      _isSVG = function _isSVG(e) {
    return !!(e.getCTM && (!e.parentNode || e.ownerSVGElement) && _getBBox(e));
  },
      _removeProperty = function _removeProperty(target, property) {
    if (property) {
      var style = target.style;

      if (property in _transformProps && property !== _transformOriginProp) {
        property = _transformProp;
      }

      if (style.removeProperty) {
        if (property.substr(0, 2) === "ms" || property.substr(0, 6) === "webkit") {
          property = "-" + property;
        }

        style.removeProperty(property.replace(_capsExp, "-$1").toLowerCase());
      } else {
        style.removeAttribute(property);
      }
    }
  },
      _addNonTweeningPT = function _addNonTweeningPT(plugin, target, property, beginning, end, onlySetAtEnd) {
    var pt = new PropTween(plugin._pt, target, property, 0, 1, onlySetAtEnd ? _renderNonTweeningValueOnlyAtEnd : _renderNonTweeningValue);
    plugin._pt = pt;
    pt.b = beginning;
    pt.e = end;

    plugin._props.push(property);

    return pt;
  },
      _nonConvertibleUnits = {
    deg: 1,
    rad: 1,
    turn: 1
  },
      _nonStandardLayouts = {
    grid: 1,
    flex: 1
  },
      _convertToUnit = function _convertToUnit(target, property, value, unit) {
    var curValue = parseFloat(value) || 0,
        curUnit = (value + "").trim().substr((curValue + "").length) || "px",
        style = _tempDiv.style,
        horizontal = _horizontalExp.test(property),
        isRootSVG = target.tagName.toLowerCase() === "svg",
        measureProperty = (isRootSVG ? "client" : "offset") + (horizontal ? "Width" : "Height"),
        amount = 100,
        toPixels = unit === "px",
        toPercent = unit === "%",
        px,
        parent,
        cache,
        isSVG;

    if (unit === curUnit || !curValue || _nonConvertibleUnits[unit] || _nonConvertibleUnits[curUnit]) {
      return curValue;
    }

    curUnit !== "px" && !toPixels && (curValue = _convertToUnit(target, property, value, "px"));
    isSVG = target.getCTM && _isSVG(target);

    if ((toPercent || curUnit === "%") && (_transformProps[property] || ~property.indexOf("adius"))) {
      px = isSVG ? target.getBBox()[horizontal ? "width" : "height"] : target[measureProperty];
      return _round(toPercent ? curValue / px * amount : curValue / 100 * px);
    }

    style[horizontal ? "width" : "height"] = amount + (toPixels ? curUnit : unit);
    parent = ~property.indexOf("adius") || unit === "em" && target.appendChild && !isRootSVG ? target : target.parentNode;

    if (isSVG) {
      parent = (target.ownerSVGElement || {}).parentNode;
    }

    if (!parent || parent === _doc$1 || !parent.appendChild) {
      parent = _doc$1.body;
    }

    cache = parent._gsap;

    if (cache && toPercent && cache.width && horizontal && cache.time === _ticker.time && !cache.uncache) {
      return _round(curValue / cache.width * amount);
    } else {
      (toPercent || curUnit === "%") && !_nonStandardLayouts[_getComputedProperty(parent, "display")] && (style.position = _getComputedProperty(target, "position"));
      parent === target && (style.position = "static");
      parent.appendChild(_tempDiv);
      px = _tempDiv[measureProperty];
      parent.removeChild(_tempDiv);
      style.position = "absolute";

      if (horizontal && toPercent) {
        cache = _getCache(parent);
        cache.time = _ticker.time;
        cache.width = parent[measureProperty];
      }
    }

    return _round(toPixels ? px * curValue / amount : px && curValue ? amount / px * curValue : 0);
  },
      _get = function _get(target, property, unit, uncache) {
    var value;
    _pluginInitted || _initCore();

    if (property in _propertyAliases && property !== "transform") {
      property = _propertyAliases[property];

      if (~property.indexOf(",")) {
        property = property.split(",")[0];
      }
    }

    if (_transformProps[property] && property !== "transform") {
      value = _parseTransform(target, uncache);
      value = property !== "transformOrigin" ? value[property] : value.svg ? value.origin : _firstTwoOnly(_getComputedProperty(target, _transformOriginProp)) + " " + value.zOrigin + "px";
    } else {
      value = target.style[property];

      if (!value || value === "auto" || uncache || ~(value + "").indexOf("calc(")) {
        value = _specialProps[property] && _specialProps[property](target, property, unit) || _getComputedProperty(target, property) || _getProperty(target, property) || (property === "opacity" ? 1 : 0);
      }
    }

    return unit && !~(value + "").trim().indexOf(" ") ? _convertToUnit(target, property, value, unit) + unit : value;
  },
      _tweenComplexCSSString = function _tweenComplexCSSString(target, prop, start, end) {
    if (!start || start === "none") {
      var p = _checkPropPrefix(prop, target, 1),
          s = p && _getComputedProperty(target, p, 1);

      if (s && s !== start) {
        prop = p;
        start = s;
      } else if (prop === "borderColor") {
        start = _getComputedProperty(target, "borderTopColor");
      }
    }

    var pt = new PropTween(this._pt, target.style, prop, 0, 1, _renderComplexString),
        index = 0,
        matchIndex = 0,
        a,
        result,
        startValues,
        startNum,
        color,
        startValue,
        endValue,
        endNum,
        chunk,
        endUnit,
        startUnit,
        endValues;
    pt.b = start;
    pt.e = end;
    start += "";
    end += "";

    if (end === "auto") {
      target.style[prop] = end;
      end = _getComputedProperty(target, prop) || end;
      target.style[prop] = start;
    }

    a = [start, end];

    _colorStringFilter(a);

    start = a[0];
    end = a[1];
    startValues = start.match(_numWithUnitExp) || [];
    endValues = end.match(_numWithUnitExp) || [];

    if (endValues.length) {
      while (result = _numWithUnitExp.exec(end)) {
        endValue = result[0];
        chunk = end.substring(index, result.index);

        if (color) {
          color = (color + 1) % 5;
        } else if (chunk.substr(-5) === "rgba(" || chunk.substr(-5) === "hsla(") {
          color = 1;
        }

        if (endValue !== (startValue = startValues[matchIndex++] || "")) {
          startNum = parseFloat(startValue) || 0;
          startUnit = startValue.substr((startNum + "").length);
          endValue.charAt(1) === "=" && (endValue = _parseRelative(startNum, endValue) + startUnit);
          endNum = parseFloat(endValue);
          endUnit = endValue.substr((endNum + "").length);
          index = _numWithUnitExp.lastIndex - endUnit.length;

          if (!endUnit) {
            endUnit = endUnit || _config.units[prop] || startUnit;

            if (index === end.length) {
              end += endUnit;
              pt.e += endUnit;
            }
          }

          if (startUnit !== endUnit) {
            startNum = _convertToUnit(target, prop, startValue, endUnit) || 0;
          }

          pt._pt = {
            _next: pt._pt,
            p: chunk || matchIndex === 1 ? chunk : ",",
            s: startNum,
            c: endNum - startNum,
            m: color && color < 4 || prop === "zIndex" ? Math.round : 0
          };
        }
      }

      pt.c = index < end.length ? end.substring(index, end.length) : "";
    } else {
      pt.r = prop === "display" && end === "none" ? _renderNonTweeningValueOnlyAtEnd : _renderNonTweeningValue;
    }

    _relExp.test(end) && (pt.e = 0);
    this._pt = pt;
    return pt;
  },
      _keywordToPercent = {
    top: "0%",
    bottom: "100%",
    left: "0%",
    right: "100%",
    center: "50%"
  },
      _convertKeywordsToPercentages = function _convertKeywordsToPercentages(value) {
    var split = value.split(" "),
        x = split[0],
        y = split[1] || "50%";

    if (x === "top" || x === "bottom" || y === "left" || y === "right") {
      value = x;
      x = y;
      y = value;
    }

    split[0] = _keywordToPercent[x] || x;
    split[1] = _keywordToPercent[y] || y;
    return split.join(" ");
  },
      _renderClearProps = function _renderClearProps(ratio, data) {
    if (data.tween && data.tween._time === data.tween._dur) {
      var target = data.t,
          style = target.style,
          props = data.u,
          cache = target._gsap,
          prop,
          clearTransforms,
          i;

      if (props === "all" || props === true) {
        style.cssText = "";
        clearTransforms = 1;
      } else {
        props = props.split(",");
        i = props.length;

        while (--i > -1) {
          prop = props[i];

          if (_transformProps[prop]) {
            clearTransforms = 1;
            prop = prop === "transformOrigin" ? _transformOriginProp : _transformProp;
          }

          _removeProperty(target, prop);
        }
      }

      if (clearTransforms) {
        _removeProperty(target, _transformProp);

        if (cache) {
          cache.svg && target.removeAttribute("transform");

          _parseTransform(target, 1);

          cache.uncache = 1;

          _removeIndependentTransforms(style);
        }
      }
    }
  },
      _specialProps = {
    clearProps: function clearProps(plugin, target, property, endValue, tween) {
      if (tween.data !== "isFromStart") {
        var pt = plugin._pt = new PropTween(plugin._pt, target, property, 0, 0, _renderClearProps);
        pt.u = endValue;
        pt.pr = -10;
        pt.tween = tween;

        plugin._props.push(property);

        return 1;
      }
    }
  },
      _identity2DMatrix = [1, 0, 0, 1, 0, 0],
      _rotationalProperties = {},
      _isNullTransform = function _isNullTransform(value) {
    return value === "matrix(1, 0, 0, 1, 0, 0)" || value === "none" || !value;
  },
      _getComputedTransformMatrixAsArray = function _getComputedTransformMatrixAsArray(target) {
    var matrixString = _getComputedProperty(target, _transformProp);

    return _isNullTransform(matrixString) ? _identity2DMatrix : matrixString.substr(7).match(_numExp).map(_round);
  },
      _getMatrix = function _getMatrix(target, force2D) {
    var cache = target._gsap || _getCache(target),
        style = target.style,
        matrix = _getComputedTransformMatrixAsArray(target),
        parent,
        nextSibling,
        temp,
        addedToDOM;

    if (cache.svg && target.getAttribute("transform")) {
      temp = target.transform.baseVal.consolidate().matrix;
      matrix = [temp.a, temp.b, temp.c, temp.d, temp.e, temp.f];
      return matrix.join(",") === "1,0,0,1,0,0" ? _identity2DMatrix : matrix;
    } else if (matrix === _identity2DMatrix && !target.offsetParent && target !== _docElement && !cache.svg) {
      temp = style.display;
      style.display = "block";
      parent = target.parentNode;

      if (!parent || !target.offsetParent) {
        addedToDOM = 1;
        nextSibling = target.nextElementSibling;

        _docElement.appendChild(target);
      }

      matrix = _getComputedTransformMatrixAsArray(target);
      temp ? style.display = temp : _removeProperty(target, "display");

      if (addedToDOM) {
        nextSibling ? parent.insertBefore(target, nextSibling) : parent ? parent.appendChild(target) : _docElement.removeChild(target);
      }
    }

    return force2D && matrix.length > 6 ? [matrix[0], matrix[1], matrix[4], matrix[5], matrix[12], matrix[13]] : matrix;
  },
      _applySVGOrigin = function _applySVGOrigin(target, origin, originIsAbsolute, smooth, matrixArray, pluginToAddPropTweensTo) {
    var cache = target._gsap,
        matrix = matrixArray || _getMatrix(target, true),
        xOriginOld = cache.xOrigin || 0,
        yOriginOld = cache.yOrigin || 0,
        xOffsetOld = cache.xOffset || 0,
        yOffsetOld = cache.yOffset || 0,
        a = matrix[0],
        b = matrix[1],
        c = matrix[2],
        d = matrix[3],
        tx = matrix[4],
        ty = matrix[5],
        originSplit = origin.split(" "),
        xOrigin = parseFloat(originSplit[0]) || 0,
        yOrigin = parseFloat(originSplit[1]) || 0,
        bounds,
        determinant,
        x,
        y;

    if (!originIsAbsolute) {
      bounds = _getBBox(target);
      xOrigin = bounds.x + (~originSplit[0].indexOf("%") ? xOrigin / 100 * bounds.width : xOrigin);
      yOrigin = bounds.y + (~(originSplit[1] || originSplit[0]).indexOf("%") ? yOrigin / 100 * bounds.height : yOrigin);
    } else if (matrix !== _identity2DMatrix && (determinant = a * d - b * c)) {
      x = xOrigin * (d / determinant) + yOrigin * (-c / determinant) + (c * ty - d * tx) / determinant;
      y = xOrigin * (-b / determinant) + yOrigin * (a / determinant) - (a * ty - b * tx) / determinant;
      xOrigin = x;
      yOrigin = y;
    }

    if (smooth || smooth !== false && cache.smooth) {
      tx = xOrigin - xOriginOld;
      ty = yOrigin - yOriginOld;
      cache.xOffset = xOffsetOld + (tx * a + ty * c) - tx;
      cache.yOffset = yOffsetOld + (tx * b + ty * d) - ty;
    } else {
      cache.xOffset = cache.yOffset = 0;
    }

    cache.xOrigin = xOrigin;
    cache.yOrigin = yOrigin;
    cache.smooth = !!smooth;
    cache.origin = origin;
    cache.originIsAbsolute = !!originIsAbsolute;
    target.style[_transformOriginProp] = "0px 0px";

    if (pluginToAddPropTweensTo) {
      _addNonTweeningPT(pluginToAddPropTweensTo, cache, "xOrigin", xOriginOld, xOrigin);

      _addNonTweeningPT(pluginToAddPropTweensTo, cache, "yOrigin", yOriginOld, yOrigin);

      _addNonTweeningPT(pluginToAddPropTweensTo, cache, "xOffset", xOffsetOld, cache.xOffset);

      _addNonTweeningPT(pluginToAddPropTweensTo, cache, "yOffset", yOffsetOld, cache.yOffset);
    }

    target.setAttribute("data-svg-origin", xOrigin + " " + yOrigin);
  },
      _parseTransform = function _parseTransform(target, uncache) {
    var cache = target._gsap || new GSCache(target);

    if ("x" in cache && !uncache && !cache.uncache) {
      return cache;
    }

    var style = target.style,
        invertedScaleX = cache.scaleX < 0,
        px = "px",
        deg = "deg",
        cs = getComputedStyle(target),
        origin = _getComputedProperty(target, _transformOriginProp) || "0",
        x,
        y,
        z,
        scaleX,
        scaleY,
        rotation,
        rotationX,
        rotationY,
        skewX,
        skewY,
        perspective,
        xOrigin,
        yOrigin,
        matrix,
        angle,
        cos,
        sin,
        a,
        b,
        c,
        d,
        a12,
        a22,
        t1,
        t2,
        t3,
        a13,
        a23,
        a33,
        a42,
        a43,
        a32;
    x = y = z = rotation = rotationX = rotationY = skewX = skewY = perspective = 0;
    scaleX = scaleY = 1;
    cache.svg = !!(target.getCTM && _isSVG(target));

    if (cs.translate) {
      if (cs.translate !== "none" || cs.scale !== "none" || cs.rotate !== "none") {
        style[_transformProp] = (cs.translate !== "none" ? "translate3d(" + (cs.translate + " 0 0").split(" ").slice(0, 3).join(", ") + ") " : "") + (cs.rotate !== "none" ? "rotate(" + cs.rotate + ") " : "") + (cs.scale !== "none" ? "scale(" + cs.scale.split(" ").join(",") + ") " : "") + (cs[_transformProp] !== "none" ? cs[_transformProp] : "");
      }

      style.scale = style.rotate = style.translate = "none";
    }

    matrix = _getMatrix(target, cache.svg);

    if (cache.svg) {
      if (cache.uncache) {
        t2 = target.getBBox();
        origin = cache.xOrigin - t2.x + "px " + (cache.yOrigin - t2.y) + "px";
        t1 = "";
      } else {
        t1 = !uncache && target.getAttribute("data-svg-origin");
      }

      _applySVGOrigin(target, t1 || origin, !!t1 || cache.originIsAbsolute, cache.smooth !== false, matrix);
    }

    xOrigin = cache.xOrigin || 0;
    yOrigin = cache.yOrigin || 0;

    if (matrix !== _identity2DMatrix) {
      a = matrix[0];
      b = matrix[1];
      c = matrix[2];
      d = matrix[3];
      x = a12 = matrix[4];
      y = a22 = matrix[5];

      if (matrix.length === 6) {
        scaleX = Math.sqrt(a * a + b * b);
        scaleY = Math.sqrt(d * d + c * c);
        rotation = a || b ? _atan2(b, a) * _RAD2DEG : 0;
        skewX = c || d ? _atan2(c, d) * _RAD2DEG + rotation : 0;
        skewX && (scaleY *= Math.abs(Math.cos(skewX * _DEG2RAD)));

        if (cache.svg) {
          x -= xOrigin - (xOrigin * a + yOrigin * c);
          y -= yOrigin - (xOrigin * b + yOrigin * d);
        }
      } else {
        a32 = matrix[6];
        a42 = matrix[7];
        a13 = matrix[8];
        a23 = matrix[9];
        a33 = matrix[10];
        a43 = matrix[11];
        x = matrix[12];
        y = matrix[13];
        z = matrix[14];
        angle = _atan2(a32, a33);
        rotationX = angle * _RAD2DEG;

        if (angle) {
          cos = Math.cos(-angle);
          sin = Math.sin(-angle);
          t1 = a12 * cos + a13 * sin;
          t2 = a22 * cos + a23 * sin;
          t3 = a32 * cos + a33 * sin;
          a13 = a12 * -sin + a13 * cos;
          a23 = a22 * -sin + a23 * cos;
          a33 = a32 * -sin + a33 * cos;
          a43 = a42 * -sin + a43 * cos;
          a12 = t1;
          a22 = t2;
          a32 = t3;
        }

        angle = _atan2(-c, a33);
        rotationY = angle * _RAD2DEG;

        if (angle) {
          cos = Math.cos(-angle);
          sin = Math.sin(-angle);
          t1 = a * cos - a13 * sin;
          t2 = b * cos - a23 * sin;
          t3 = c * cos - a33 * sin;
          a43 = d * sin + a43 * cos;
          a = t1;
          b = t2;
          c = t3;
        }

        angle = _atan2(b, a);
        rotation = angle * _RAD2DEG;

        if (angle) {
          cos = Math.cos(angle);
          sin = Math.sin(angle);
          t1 = a * cos + b * sin;
          t2 = a12 * cos + a22 * sin;
          b = b * cos - a * sin;
          a22 = a22 * cos - a12 * sin;
          a = t1;
          a12 = t2;
        }

        if (rotationX && Math.abs(rotationX) + Math.abs(rotation) > 359.9) {
          rotationX = rotation = 0;
          rotationY = 180 - rotationY;
        }

        scaleX = _round(Math.sqrt(a * a + b * b + c * c));
        scaleY = _round(Math.sqrt(a22 * a22 + a32 * a32));
        angle = _atan2(a12, a22);
        skewX = Math.abs(angle) > 0.0002 ? angle * _RAD2DEG : 0;
        perspective = a43 ? 1 / (a43 < 0 ? -a43 : a43) : 0;
      }

      if (cache.svg) {
        t1 = target.getAttribute("transform");
        cache.forceCSS = target.setAttribute("transform", "") || !_isNullTransform(_getComputedProperty(target, _transformProp));
        t1 && target.setAttribute("transform", t1);
      }
    }

    if (Math.abs(skewX) > 90 && Math.abs(skewX) < 270) {
      if (invertedScaleX) {
        scaleX *= -1;
        skewX += rotation <= 0 ? 180 : -180;
        rotation += rotation <= 0 ? 180 : -180;
      } else {
        scaleY *= -1;
        skewX += skewX <= 0 ? 180 : -180;
      }
    }

    uncache = uncache || cache.uncache;
    cache.x = x - ((cache.xPercent = x && (!uncache && cache.xPercent || (Math.round(target.offsetWidth / 2) === Math.round(-x) ? -50 : 0))) ? target.offsetWidth * cache.xPercent / 100 : 0) + px;
    cache.y = y - ((cache.yPercent = y && (!uncache && cache.yPercent || (Math.round(target.offsetHeight / 2) === Math.round(-y) ? -50 : 0))) ? target.offsetHeight * cache.yPercent / 100 : 0) + px;
    cache.z = z + px;
    cache.scaleX = _round(scaleX);
    cache.scaleY = _round(scaleY);
    cache.rotation = _round(rotation) + deg;
    cache.rotationX = _round(rotationX) + deg;
    cache.rotationY = _round(rotationY) + deg;
    cache.skewX = skewX + deg;
    cache.skewY = skewY + deg;
    cache.transformPerspective = perspective + px;

    if (cache.zOrigin = parseFloat(origin.split(" ")[2]) || 0) {
      style[_transformOriginProp] = _firstTwoOnly(origin);
    }

    cache.xOffset = cache.yOffset = 0;
    cache.force3D = _config.force3D;
    cache.renderTransform = cache.svg ? _renderSVGTransforms : _supports3D ? _renderCSSTransforms : _renderNon3DTransforms;
    cache.uncache = 0;
    return cache;
  },
      _firstTwoOnly = function _firstTwoOnly(value) {
    return (value = value.split(" "))[0] + " " + value[1];
  },
      _addPxTranslate = function _addPxTranslate(target, start, value) {
    var unit = getUnit(start);
    return _round(parseFloat(start) + parseFloat(_convertToUnit(target, "x", value + "px", unit))) + unit;
  },
      _renderNon3DTransforms = function _renderNon3DTransforms(ratio, cache) {
    cache.z = "0px";
    cache.rotationY = cache.rotationX = "0deg";
    cache.force3D = 0;

    _renderCSSTransforms(ratio, cache);
  },
      _zeroDeg = "0deg",
      _zeroPx = "0px",
      _endParenthesis = ") ",
      _renderCSSTransforms = function _renderCSSTransforms(ratio, cache) {
    var _ref = cache || this,
        xPercent = _ref.xPercent,
        yPercent = _ref.yPercent,
        x = _ref.x,
        y = _ref.y,
        z = _ref.z,
        rotation = _ref.rotation,
        rotationY = _ref.rotationY,
        rotationX = _ref.rotationX,
        skewX = _ref.skewX,
        skewY = _ref.skewY,
        scaleX = _ref.scaleX,
        scaleY = _ref.scaleY,
        transformPerspective = _ref.transformPerspective,
        force3D = _ref.force3D,
        target = _ref.target,
        zOrigin = _ref.zOrigin,
        transforms = "",
        use3D = force3D === "auto" && ratio && ratio !== 1 || force3D === true;

    if (zOrigin && (rotationX !== _zeroDeg || rotationY !== _zeroDeg)) {
      var angle = parseFloat(rotationY) * _DEG2RAD,
          a13 = Math.sin(angle),
          a33 = Math.cos(angle),
          cos;

      angle = parseFloat(rotationX) * _DEG2RAD;
      cos = Math.cos(angle);
      x = _addPxTranslate(target, x, a13 * cos * -zOrigin);
      y = _addPxTranslate(target, y, -Math.sin(angle) * -zOrigin);
      z = _addPxTranslate(target, z, a33 * cos * -zOrigin + zOrigin);
    }

    if (transformPerspective !== _zeroPx) {
      transforms += "perspective(" + transformPerspective + _endParenthesis;
    }

    if (xPercent || yPercent) {
      transforms += "translate(" + xPercent + "%, " + yPercent + "%) ";
    }

    if (use3D || x !== _zeroPx || y !== _zeroPx || z !== _zeroPx) {
      transforms += z !== _zeroPx || use3D ? "translate3d(" + x + ", " + y + ", " + z + ") " : "translate(" + x + ", " + y + _endParenthesis;
    }

    if (rotation !== _zeroDeg) {
      transforms += "rotate(" + rotation + _endParenthesis;
    }

    if (rotationY !== _zeroDeg) {
      transforms += "rotateY(" + rotationY + _endParenthesis;
    }

    if (rotationX !== _zeroDeg) {
      transforms += "rotateX(" + rotationX + _endParenthesis;
    }

    if (skewX !== _zeroDeg || skewY !== _zeroDeg) {
      transforms += "skew(" + skewX + ", " + skewY + _endParenthesis;
    }

    if (scaleX !== 1 || scaleY !== 1) {
      transforms += "scale(" + scaleX + ", " + scaleY + _endParenthesis;
    }

    target.style[_transformProp] = transforms || "translate(0, 0)";
  },
      _renderSVGTransforms = function _renderSVGTransforms(ratio, cache) {
    var _ref2 = cache || this,
        xPercent = _ref2.xPercent,
        yPercent = _ref2.yPercent,
        x = _ref2.x,
        y = _ref2.y,
        rotation = _ref2.rotation,
        skewX = _ref2.skewX,
        skewY = _ref2.skewY,
        scaleX = _ref2.scaleX,
        scaleY = _ref2.scaleY,
        target = _ref2.target,
        xOrigin = _ref2.xOrigin,
        yOrigin = _ref2.yOrigin,
        xOffset = _ref2.xOffset,
        yOffset = _ref2.yOffset,
        forceCSS = _ref2.forceCSS,
        tx = parseFloat(x),
        ty = parseFloat(y),
        a11,
        a21,
        a12,
        a22,
        temp;

    rotation = parseFloat(rotation);
    skewX = parseFloat(skewX);
    skewY = parseFloat(skewY);

    if (skewY) {
      skewY = parseFloat(skewY);
      skewX += skewY;
      rotation += skewY;
    }

    if (rotation || skewX) {
      rotation *= _DEG2RAD;
      skewX *= _DEG2RAD;
      a11 = Math.cos(rotation) * scaleX;
      a21 = Math.sin(rotation) * scaleX;
      a12 = Math.sin(rotation - skewX) * -scaleY;
      a22 = Math.cos(rotation - skewX) * scaleY;

      if (skewX) {
        skewY *= _DEG2RAD;
        temp = Math.tan(skewX - skewY);
        temp = Math.sqrt(1 + temp * temp);
        a12 *= temp;
        a22 *= temp;

        if (skewY) {
          temp = Math.tan(skewY);
          temp = Math.sqrt(1 + temp * temp);
          a11 *= temp;
          a21 *= temp;
        }
      }

      a11 = _round(a11);
      a21 = _round(a21);
      a12 = _round(a12);
      a22 = _round(a22);
    } else {
      a11 = scaleX;
      a22 = scaleY;
      a21 = a12 = 0;
    }

    if (tx && !~(x + "").indexOf("px") || ty && !~(y + "").indexOf("px")) {
      tx = _convertToUnit(target, "x", x, "px");
      ty = _convertToUnit(target, "y", y, "px");
    }

    if (xOrigin || yOrigin || xOffset || yOffset) {
      tx = _round(tx + xOrigin - (xOrigin * a11 + yOrigin * a12) + xOffset);
      ty = _round(ty + yOrigin - (xOrigin * a21 + yOrigin * a22) + yOffset);
    }

    if (xPercent || yPercent) {
      temp = target.getBBox();
      tx = _round(tx + xPercent / 100 * temp.width);
      ty = _round(ty + yPercent / 100 * temp.height);
    }

    temp = "matrix(" + a11 + "," + a21 + "," + a12 + "," + a22 + "," + tx + "," + ty + ")";
    target.setAttribute("transform", temp);
    forceCSS && (target.style[_transformProp] = temp);
  },
      _addRotationalPropTween = function _addRotationalPropTween(plugin, target, property, startNum, endValue) {
    var cap = 360,
        isString = _isString(endValue),
        endNum = parseFloat(endValue) * (isString && ~endValue.indexOf("rad") ? _RAD2DEG : 1),
        change = endNum - startNum,
        finalValue = startNum + change + "deg",
        direction,
        pt;

    if (isString) {
      direction = endValue.split("_")[1];

      if (direction === "short") {
        change %= cap;

        if (change !== change % (cap / 2)) {
          change += change < 0 ? cap : -cap;
        }
      }

      if (direction === "cw" && change < 0) {
        change = (change + cap * _bigNum$1) % cap - ~~(change / cap) * cap;
      } else if (direction === "ccw" && change > 0) {
        change = (change - cap * _bigNum$1) % cap - ~~(change / cap) * cap;
      }
    }

    plugin._pt = pt = new PropTween(plugin._pt, target, property, startNum, change, _renderPropWithEnd);
    pt.e = finalValue;
    pt.u = "deg";

    plugin._props.push(property);

    return pt;
  },
      _assign = function _assign(target, source) {
    for (var p in source) {
      target[p] = source[p];
    }

    return target;
  },
      _addRawTransformPTs = function _addRawTransformPTs(plugin, transforms, target) {
    var startCache = _assign({}, target._gsap),
        exclude = "perspective,force3D,transformOrigin,svgOrigin",
        style = target.style,
        endCache,
        p,
        startValue,
        endValue,
        startNum,
        endNum,
        startUnit,
        endUnit;

    if (startCache.svg) {
      startValue = target.getAttribute("transform");
      target.setAttribute("transform", "");
      style[_transformProp] = transforms;
      endCache = _parseTransform(target, 1);

      _removeProperty(target, _transformProp);

      target.setAttribute("transform", startValue);
    } else {
      startValue = getComputedStyle(target)[_transformProp];
      style[_transformProp] = transforms;
      endCache = _parseTransform(target, 1);
      style[_transformProp] = startValue;
    }

    for (p in _transformProps) {
      startValue = startCache[p];
      endValue = endCache[p];

      if (startValue !== endValue && exclude.indexOf(p) < 0) {
        startUnit = getUnit(startValue);
        endUnit = getUnit(endValue);
        startNum = startUnit !== endUnit ? _convertToUnit(target, p, startValue, endUnit) : parseFloat(startValue);
        endNum = parseFloat(endValue);
        plugin._pt = new PropTween(plugin._pt, endCache, p, startNum, endNum - startNum, _renderCSSProp);
        plugin._pt.u = endUnit || 0;

        plugin._props.push(p);
      }
    }

    _assign(endCache, startCache);
  };

  _forEachName("padding,margin,Width,Radius", function (name, index) {
    var t = "Top",
        r = "Right",
        b = "Bottom",
        l = "Left",
        props = (index < 3 ? [t, r, b, l] : [t + l, t + r, b + r, b + l]).map(function (side) {
      return index < 2 ? name + side : "border" + side + name;
    });

    _specialProps[index > 1 ? "border" + name : name] = function (plugin, target, property, endValue, tween) {
      var a, vars;

      if (arguments.length < 4) {
        a = props.map(function (prop) {
          return _get(plugin, prop, property);
        });
        vars = a.join(" ");
        return vars.split(a[0]).length === 5 ? a[0] : vars;
      }

      a = (endValue + "").split(" ");
      vars = {};
      props.forEach(function (prop, i) {
        return vars[prop] = a[i] = a[i] || a[(i - 1) / 2 | 0];
      });
      plugin.init(target, vars, tween);
    };
  });

  var CSSPlugin = {
    name: "css",
    register: _initCore,
    targetTest: function targetTest(target) {
      return target.style && target.nodeType;
    },
    init: function init(target, vars, tween, index, targets) {
      var props = this._props,
          style = target.style,
          startAt = tween.vars.startAt,
          startValue,
          endValue,
          endNum,
          startNum,
          type,
          specialProp,
          p,
          startUnit,
          endUnit,
          relative,
          isTransformRelated,
          transformPropTween,
          cache,
          smooth,
          hasPriority,
          inlineProps;
      _pluginInitted || _initCore();
      this.styles = this.styles || _getStyleSaver(target);
      inlineProps = this.styles.props;
      this.tween = tween;

      for (p in vars) {
        if (p === "autoRound") {
          continue;
        }

        endValue = vars[p];

        if (_plugins[p] && _checkPlugin(p, vars, tween, index, target, targets)) {
          continue;
        }

        type = _typeof(endValue);
        specialProp = _specialProps[p];

        if (type === "function") {
          endValue = endValue.call(tween, index, target, targets);
          type = _typeof(endValue);
        }

        if (type === "string" && ~endValue.indexOf("random(")) {
          endValue = _replaceRandom(endValue);
        }

        if (specialProp) {
          specialProp(this, target, p, endValue, tween) && (hasPriority = 1);
        } else if (p.substr(0, 2) === "--") {
          startValue = (getComputedStyle(target).getPropertyValue(p) + "").trim();
          endValue += "";
          _colorExp.lastIndex = 0;

          if (!_colorExp.test(startValue)) {
            startUnit = getUnit(startValue);
            endUnit = getUnit(endValue);
          }

          endUnit ? startUnit !== endUnit && (startValue = _convertToUnit(target, p, startValue, endUnit) + endUnit) : startUnit && (endValue += startUnit);
          this.add(style, "setProperty", startValue, endValue, index, targets, 0, 0, p);
          props.push(p);
          inlineProps.push(p, 0, style[p]);
        } else if (type !== "undefined") {
          if (startAt && p in startAt) {
            startValue = typeof startAt[p] === "function" ? startAt[p].call(tween, index, target, targets) : startAt[p];
            _isString(startValue) && ~startValue.indexOf("random(") && (startValue = _replaceRandom(startValue));
            getUnit(startValue + "") || (startValue += _config.units[p] || getUnit(_get(target, p)) || "");
            (startValue + "").charAt(1) === "=" && (startValue = _get(target, p));
          } else {
            startValue = _get(target, p);
          }

          startNum = parseFloat(startValue);
          relative = type === "string" && endValue.charAt(1) === "=" && endValue.substr(0, 2);
          relative && (endValue = endValue.substr(2));
          endNum = parseFloat(endValue);

          if (p in _propertyAliases) {
            if (p === "autoAlpha") {
              if (startNum === 1 && _get(target, "visibility") === "hidden" && endNum) {
                startNum = 0;
              }

              inlineProps.push("visibility", 0, style.visibility);

              _addNonTweeningPT(this, style, "visibility", startNum ? "inherit" : "hidden", endNum ? "inherit" : "hidden", !endNum);
            }

            if (p !== "scale" && p !== "transform") {
              p = _propertyAliases[p];
              ~p.indexOf(",") && (p = p.split(",")[0]);
            }
          }

          isTransformRelated = p in _transformProps;

          if (isTransformRelated) {
            this.styles.save(p);

            if (!transformPropTween) {
              cache = target._gsap;
              cache.renderTransform && !vars.parseTransform || _parseTransform(target, vars.parseTransform);
              smooth = vars.smoothOrigin !== false && cache.smooth;
              transformPropTween = this._pt = new PropTween(this._pt, style, _transformProp, 0, 1, cache.renderTransform, cache, 0, -1);
              transformPropTween.dep = 1;
            }

            if (p === "scale") {
              this._pt = new PropTween(this._pt, cache, "scaleY", cache.scaleY, (relative ? _parseRelative(cache.scaleY, relative + endNum) : endNum) - cache.scaleY || 0, _renderCSSProp);
              this._pt.u = 0;
              props.push("scaleY", p);
              p += "X";
            } else if (p === "transformOrigin") {
              inlineProps.push(_transformOriginProp, 0, style[_transformOriginProp]);
              endValue = _convertKeywordsToPercentages(endValue);

              if (cache.svg) {
                _applySVGOrigin(target, endValue, 0, smooth, 0, this);
              } else {
                endUnit = parseFloat(endValue.split(" ")[2]) || 0;
                endUnit !== cache.zOrigin && _addNonTweeningPT(this, cache, "zOrigin", cache.zOrigin, endUnit);

                _addNonTweeningPT(this, style, p, _firstTwoOnly(startValue), _firstTwoOnly(endValue));
              }

              continue;
            } else if (p === "svgOrigin") {
              _applySVGOrigin(target, endValue, 1, smooth, 0, this);

              continue;
            } else if (p in _rotationalProperties) {
              _addRotationalPropTween(this, cache, p, startNum, relative ? _parseRelative(startNum, relative + endValue) : endValue);

              continue;
            } else if (p === "smoothOrigin") {
              _addNonTweeningPT(this, cache, "smooth", cache.smooth, endValue);

              continue;
            } else if (p === "force3D") {
              cache[p] = endValue;
              continue;
            } else if (p === "transform") {
              _addRawTransformPTs(this, endValue, target);

              continue;
            }
          } else if (!(p in style)) {
            p = _checkPropPrefix(p) || p;
          }

          if (isTransformRelated || (endNum || endNum === 0) && (startNum || startNum === 0) && !_complexExp.test(endValue) && p in style) {
            startUnit = (startValue + "").substr((startNum + "").length);
            endNum || (endNum = 0);
            endUnit = getUnit(endValue) || (p in _config.units ? _config.units[p] : startUnit);
            startUnit !== endUnit && (startNum = _convertToUnit(target, p, startValue, endUnit));
            this._pt = new PropTween(this._pt, isTransformRelated ? cache : style, p, startNum, (relative ? _parseRelative(startNum, relative + endNum) : endNum) - startNum, !isTransformRelated && (endUnit === "px" || p === "zIndex") && vars.autoRound !== false ? _renderRoundedCSSProp : _renderCSSProp);
            this._pt.u = endUnit || 0;

            if (startUnit !== endUnit && endUnit !== "%") {
              this._pt.b = startValue;
              this._pt.r = _renderCSSPropWithBeginning;
            }
          } else if (!(p in style)) {
            if (p in target) {
              this.add(target, p, startValue || target[p], relative ? relative + endValue : endValue, index, targets);
            } else if (p !== "parseTransform") {
              _missingPlugin(p, endValue);

              continue;
            }
          } else {
            _tweenComplexCSSString.call(this, target, p, startValue, relative ? relative + endValue : endValue);
          }

          isTransformRelated || (p in style ? inlineProps.push(p, 0, style[p]) : inlineProps.push(p, 1, startValue || target[p]));
          props.push(p);
        }
      }

      hasPriority && _sortPropTweensByPriority(this);
    },
    render: function render(ratio, data) {
      if (data.tween._time || !_reverting$1()) {
        var pt = data._pt;

        while (pt) {
          pt.r(ratio, pt.d);
          pt = pt._next;
        }
      } else {
        data.styles.revert();
      }
    },
    get: _get,
    aliases: _propertyAliases,
    getSetter: function getSetter(target, property, plugin) {
      var p = _propertyAliases[property];
      p && p.indexOf(",") < 0 && (property = p);
      return property in _transformProps && property !== _transformOriginProp && (target._gsap.x || _get(target, "x")) ? plugin && _recentSetterPlugin === plugin ? property === "scale" ? _setterScale : _setterTransform : (_recentSetterPlugin = plugin || {}) && (property === "scale" ? _setterScaleWithRender : _setterTransformWithRender) : target.style && !_isUndefined(target.style[property]) ? _setterCSSStyle : ~property.indexOf("-") ? _setterCSSProp : _getSetter(target, property);
    },
    core: {
      _removeProperty: _removeProperty,
      _getMatrix: _getMatrix
    }
  };
  gsap.utils.checkPrefix = _checkPropPrefix;
  gsap.core.getStyleSaver = _getStyleSaver;

  (function (positionAndScale, rotation, others, aliases) {
    var all = _forEachName(positionAndScale + "," + rotation + "," + others, function (name) {
      _transformProps[name] = 1;
    });

    _forEachName(rotation, function (name) {
      _config.units[name] = "deg";
      _rotationalProperties[name] = 1;
    });

    _propertyAliases[all[13]] = positionAndScale + "," + rotation;

    _forEachName(aliases, function (name) {
      var split = name.split(":");
      _propertyAliases[split[1]] = all[split[0]];
    });
  })("x,y,z,scale,scaleX,scaleY,xPercent,yPercent", "rotation,rotationX,rotationY,skewX,skewY", "transform,transformOrigin,svgOrigin,force3D,smoothOrigin,transformPerspective", "0:translateX,1:translateY,2:translateZ,8:rotate,8:rotationZ,8:rotateZ,9:rotateX,10:rotateY");

  _forEachName("x,y,z,top,right,bottom,left,width,height,fontSize,padding,margin,perspective", function (name) {
    _config.units[name] = "px";
  });

  gsap.registerPlugin(CSSPlugin);
  var gsapWithCSS = gsap.registerPlugin(CSSPlugin) || gsap,
      TweenMaxWithCSS = gsapWithCSS.core.Tween;
  exports.Back = Back;
  exports.Bounce = Bounce;
  exports.CSSPlugin = CSSPlugin;
  exports.Circ = Circ;
  exports.Cubic = Cubic;
  exports.Elastic = Elastic;
  exports.Expo = Expo;
  exports.Linear = Linear;
  exports.Power0 = Power0;
  exports.Power1 = Power1;
  exports.Power2 = Power2;
  exports.Power3 = Power3;
  exports.Power4 = Power4;
  exports.Quad = Quad;
  exports.Quart = Quart;
  exports.Quint = Quint;
  exports.Sine = Sine;
  exports.SteppedEase = SteppedEase;
  exports.Strong = Strong;
  exports.TimelineLite = Timeline;
  exports.TimelineMax = Timeline;
  exports.TweenLite = Tween;
  exports.TweenMax = TweenMaxWithCSS;
  exports.default = gsapWithCSS;
  exports.gsap = gsapWithCSS;

  if (typeof window === 'undefined' || window !== exports) {
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
  } else {
    delete window.default;
  }
});

/***/ }),

/***/ "./js/vendor/swiper.js":
/*!*****************************!*\
  !*** ./js/vendor/swiper.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(module) {var _this = undefined;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }

function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

var swiper = function swiper() {
  /**
  * Swiper 7.4.1
  * Most modern mobile touch slider and framework with hardware accelerated transitions
  * https://swiperjs.com
  *
  * Copyright 2014-2021 Vladimir Kharlampidi
  *
  * Released under the MIT License
  *
  * Released on: December 24, 2021
  */
  (function (global, factory) {
    (typeof exports === "undefined" ? "undefined" : _typeof(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && __webpack_require__(/*! !webpack amd options */ "../node_modules/webpack/buildin/amd-options.js") ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Swiper = factory());
  })(_this, function () {
    'use strict';
    /**
     * SSR Window 4.0.2
     * Better handling for window object in SSR environment
     * https://github.com/nolimits4web/ssr-window
     *
     * Copyright 2021, Vladimir Kharlampidi
     *
     * Licensed under MIT
     *
     * Released on: December 13, 2021
     */

    /* eslint-disable no-param-reassign */

    function isObject$1(obj) {
      return obj !== null && _typeof(obj) === 'object' && 'constructor' in obj && obj.constructor === Object;
    }

    function extend$1() {
      var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var src = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      Object.keys(src).forEach(function (key) {
        if (typeof target[key] === 'undefined') target[key] = src[key];else if (isObject$1(src[key]) && isObject$1(target[key]) && Object.keys(src[key]).length > 0) {
          extend$1(target[key], src[key]);
        }
      });
    }

    var ssrDocument = {
      body: {},
      addEventListener: function addEventListener() {},
      removeEventListener: function removeEventListener() {},
      activeElement: {
        blur: function blur() {},
        nodeName: ''
      },
      querySelector: function querySelector() {
        return null;
      },
      querySelectorAll: function querySelectorAll() {
        return [];
      },
      getElementById: function getElementById() {
        return null;
      },
      createEvent: function createEvent() {
        return {
          initEvent: function initEvent() {}
        };
      },
      createElement: function createElement() {
        return {
          children: [],
          childNodes: [],
          style: {},
          setAttribute: function setAttribute() {},
          getElementsByTagName: function getElementsByTagName() {
            return [];
          }
        };
      },
      createElementNS: function createElementNS() {
        return {};
      },
      importNode: function importNode() {
        return null;
      },
      location: {
        hash: '',
        host: '',
        hostname: '',
        href: '',
        origin: '',
        pathname: '',
        protocol: '',
        search: ''
      }
    };

    function getDocument() {
      var doc = typeof document !== 'undefined' ? document : {};
      extend$1(doc, ssrDocument);
      return doc;
    }

    var ssrWindow = {
      document: ssrDocument,
      navigator: {
        userAgent: ''
      },
      location: {
        hash: '',
        host: '',
        hostname: '',
        href: '',
        origin: '',
        pathname: '',
        protocol: '',
        search: ''
      },
      history: {
        replaceState: function replaceState() {},
        pushState: function pushState() {},
        go: function go() {},
        back: function back() {}
      },
      CustomEvent: function CustomEvent() {
        return this;
      },
      addEventListener: function addEventListener() {},
      removeEventListener: function removeEventListener() {},
      getComputedStyle: function getComputedStyle() {
        return {
          getPropertyValue: function getPropertyValue() {
            return '';
          }
        };
      },
      Image: function Image() {},
      Date: function Date() {},
      screen: {},
      setTimeout: function setTimeout() {},
      clearTimeout: function clearTimeout() {},
      matchMedia: function matchMedia() {
        return {};
      },
      requestAnimationFrame: function requestAnimationFrame(callback) {
        if (typeof setTimeout === 'undefined') {
          callback();
          return null;
        }

        return setTimeout(callback, 0);
      },
      cancelAnimationFrame: function cancelAnimationFrame(id) {
        if (typeof setTimeout === 'undefined') {
          return;
        }

        clearTimeout(id);
      }
    };

    function getWindow() {
      var win = typeof window !== 'undefined' ? window : {};
      extend$1(win, ssrWindow);
      return win;
    }
    /**
     * Dom7 4.0.2
     * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API
     * https://framework7.io/docs/dom7.html
     *
     * Copyright 2021, Vladimir Kharlampidi
     *
     * Licensed under MIT
     *
     * Released on: December 13, 2021
     */

    /* eslint-disable no-proto */


    function makeReactive(obj) {
      var proto = obj.__proto__;
      Object.defineProperty(obj, '__proto__', {
        get: function get() {
          return proto;
        },
        set: function set(value) {
          proto.__proto__ = value;
        }
      });
    }

    var Dom7 = /*#__PURE__*/function (_Array) {
      _inherits(Dom7, _Array);

      var _super = _createSuper(Dom7);

      function Dom7(items) {
        var _this2;

        _classCallCheck(this, Dom7);

        _this2 = _super.call.apply(_super, [this].concat(_toConsumableArray(items || [])));
        makeReactive(_assertThisInitialized(_this2));
        return _this2;
      }

      return _createClass(Dom7);
    }( /*#__PURE__*/_wrapNativeSuper(Array));

    function arrayFlat() {
      var arr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
      var res = [];
      arr.forEach(function (el) {
        if (Array.isArray(el)) {
          res.push.apply(res, _toConsumableArray(arrayFlat(el)));
        } else {
          res.push(el);
        }
      });
      return res;
    }

    function arrayFilter(arr, callback) {
      return Array.prototype.filter.call(arr, callback);
    }

    function arrayUnique(arr) {
      var uniqueArray = [];

      for (var i = 0; i < arr.length; i += 1) {
        if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);
      }

      return uniqueArray;
    }

    function qsa(selector, context) {
      if (typeof selector !== 'string') {
        return [selector];
      }

      var a = [];
      var res = context.querySelectorAll(selector);

      for (var i = 0; i < res.length; i += 1) {
        a.push(res[i]);
      }

      return a;
    }

    function $(selector, context) {
      var window = getWindow();
      var document = getDocument();
      var arr = [];

      if (!context && selector instanceof Dom7) {
        return selector;
      }

      if (!selector) {
        return new Dom7(arr);
      }

      if (typeof selector === 'string') {
        var _html = selector.trim();

        if (_html.indexOf('<') >= 0 && _html.indexOf('>') >= 0) {
          var toCreate = 'div';
          if (_html.indexOf('<li') === 0) toCreate = 'ul';
          if (_html.indexOf('<tr') === 0) toCreate = 'tbody';
          if (_html.indexOf('<td') === 0 || _html.indexOf('<th') === 0) toCreate = 'tr';
          if (_html.indexOf('<tbody') === 0) toCreate = 'table';
          if (_html.indexOf('<option') === 0) toCreate = 'select';
          var tempParent = document.createElement(toCreate);
          tempParent.innerHTML = _html;

          for (var i = 0; i < tempParent.childNodes.length; i += 1) {
            arr.push(tempParent.childNodes[i]);
          }
        } else {
          arr = qsa(selector.trim(), context || document);
        } // arr = qsa(selector, document);

      } else if (selector.nodeType || selector === window || selector === document) {
        arr.push(selector);
      } else if (Array.isArray(selector)) {
        if (selector instanceof Dom7) return selector;
        arr = selector;
      }

      return new Dom7(arrayUnique(arr));
    }

    $.fn = Dom7.prototype; // eslint-disable-next-line

    function addClass() {
      for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {
        classes[_key] = arguments[_key];
      }

      var classNames = arrayFlat(classes.map(function (c) {
        return c.split(' ');
      }));
      this.forEach(function (el) {
        var _el$classList;

        (_el$classList = el.classList).add.apply(_el$classList, _toConsumableArray(classNames));
      });
      return this;
    }

    function removeClass() {
      for (var _len2 = arguments.length, classes = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        classes[_key2] = arguments[_key2];
      }

      var classNames = arrayFlat(classes.map(function (c) {
        return c.split(' ');
      }));
      this.forEach(function (el) {
        var _el$classList2;

        (_el$classList2 = el.classList).remove.apply(_el$classList2, _toConsumableArray(classNames));
      });
      return this;
    }

    function toggleClass() {
      for (var _len3 = arguments.length, classes = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        classes[_key3] = arguments[_key3];
      }

      var classNames = arrayFlat(classes.map(function (c) {
        return c.split(' ');
      }));
      this.forEach(function (el) {
        classNames.forEach(function (className) {
          el.classList.toggle(className);
        });
      });
    }

    function hasClass() {
      for (var _len4 = arguments.length, classes = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        classes[_key4] = arguments[_key4];
      }

      var classNames = arrayFlat(classes.map(function (c) {
        return c.split(' ');
      }));
      return arrayFilter(this, function (el) {
        return classNames.filter(function (className) {
          return el.classList.contains(className);
        }).length > 0;
      }).length > 0;
    }

    function attr(attrs, value) {
      if (arguments.length === 1 && typeof attrs === 'string') {
        // Get attr
        if (this[0]) return this[0].getAttribute(attrs);
        return undefined;
      } // Set attrs


      for (var i = 0; i < this.length; i += 1) {
        if (arguments.length === 2) {
          // String
          this[i].setAttribute(attrs, value);
        } else {
          // Object
          for (var attrName in attrs) {
            this[i][attrName] = attrs[attrName];
            this[i].setAttribute(attrName, attrs[attrName]);
          }
        }
      }

      return this;
    }

    function removeAttr(attr) {
      for (var i = 0; i < this.length; i += 1) {
        this[i].removeAttribute(attr);
      }

      return this;
    }

    function transform(transform) {
      for (var i = 0; i < this.length; i += 1) {
        this[i].style.transform = transform;
      }

      return this;
    }

    function transition$1(duration) {
      for (var i = 0; i < this.length; i += 1) {
        this[i].style.transitionDuration = typeof duration !== 'string' ? "".concat(duration, "ms") : duration;
      }

      return this;
    }

    function on() {
      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }

      var eventType = args[0],
          targetSelector = args[1],
          listener = args[2],
          capture = args[3];

      if (typeof args[1] === 'function') {
        eventType = args[0];
        listener = args[1];
        capture = args[2];
        targetSelector = undefined;
      }

      if (!capture) capture = false;

      function handleLiveEvent(e) {
        var target = e.target;
        if (!target) return;
        var eventData = e.target.dom7EventData || [];

        if (eventData.indexOf(e) < 0) {
          eventData.unshift(e);
        }

        if ($(target).is(targetSelector)) listener.apply(target, eventData);else {
          var _parents = $(target).parents(); // eslint-disable-line


          for (var k = 0; k < _parents.length; k += 1) {
            if ($(_parents[k]).is(targetSelector)) listener.apply(_parents[k], eventData);
          }
        }
      }

      function handleEvent(e) {
        var eventData = e && e.target ? e.target.dom7EventData || [] : [];

        if (eventData.indexOf(e) < 0) {
          eventData.unshift(e);
        }

        listener.apply(this, eventData);
      }

      var events = eventType.split(' ');
      var j;

      for (var i = 0; i < this.length; i += 1) {
        var el = this[i];

        if (!targetSelector) {
          for (j = 0; j < events.length; j += 1) {
            var _event = events[j];
            if (!el.dom7Listeners) el.dom7Listeners = {};
            if (!el.dom7Listeners[_event]) el.dom7Listeners[_event] = [];

            el.dom7Listeners[_event].push({
              listener: listener,
              proxyListener: handleEvent
            });

            el.addEventListener(_event, handleEvent, capture);
          }
        } else {
          // Live events
          for (j = 0; j < events.length; j += 1) {
            var _event2 = events[j];
            if (!el.dom7LiveListeners) el.dom7LiveListeners = {};
            if (!el.dom7LiveListeners[_event2]) el.dom7LiveListeners[_event2] = [];

            el.dom7LiveListeners[_event2].push({
              listener: listener,
              proxyListener: handleLiveEvent
            });

            el.addEventListener(_event2, handleLiveEvent, capture);
          }
        }
      }

      return this;
    }

    function off() {
      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        args[_key6] = arguments[_key6];
      }

      var eventType = args[0],
          targetSelector = args[1],
          listener = args[2],
          capture = args[3];

      if (typeof args[1] === 'function') {
        eventType = args[0];
        listener = args[1];
        capture = args[2];
        targetSelector = undefined;
      }

      if (!capture) capture = false;
      var events = eventType.split(' ');

      for (var i = 0; i < events.length; i += 1) {
        var _event3 = events[i];

        for (var j = 0; j < this.length; j += 1) {
          var el = this[j];
          var handlers = void 0;

          if (!targetSelector && el.dom7Listeners) {
            handlers = el.dom7Listeners[_event3];
          } else if (targetSelector && el.dom7LiveListeners) {
            handlers = el.dom7LiveListeners[_event3];
          }

          if (handlers && handlers.length) {
            for (var k = handlers.length - 1; k >= 0; k -= 1) {
              var handler = handlers[k];

              if (listener && handler.listener === listener) {
                el.removeEventListener(_event3, handler.proxyListener, capture);
                handlers.splice(k, 1);
              } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {
                el.removeEventListener(_event3, handler.proxyListener, capture);
                handlers.splice(k, 1);
              } else if (!listener) {
                el.removeEventListener(_event3, handler.proxyListener, capture);
                handlers.splice(k, 1);
              }
            }
          }
        }
      }

      return this;
    }

    function trigger() {
      var window = getWindow();

      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        args[_key7] = arguments[_key7];
      }

      var events = args[0].split(' ');
      var eventData = args[1];

      for (var i = 0; i < events.length; i += 1) {
        var _event4 = events[i];

        for (var j = 0; j < this.length; j += 1) {
          var el = this[j];

          if (window.CustomEvent) {
            var evt = new window.CustomEvent(_event4, {
              detail: eventData,
              bubbles: true,
              cancelable: true
            });
            el.dom7EventData = args.filter(function (data, dataIndex) {
              return dataIndex > 0;
            });
            el.dispatchEvent(evt);
            el.dom7EventData = [];
            delete el.dom7EventData;
          }
        }
      }

      return this;
    }

    function transitionEnd$1(callback) {
      var dom = this;

      function fireCallBack(e) {
        if (e.target !== this) return;
        callback.call(this, e);
        dom.off('transitionend', fireCallBack);
      }

      if (callback) {
        dom.on('transitionend', fireCallBack);
      }

      return this;
    }

    function outerWidth(includeMargins) {
      if (this.length > 0) {
        if (includeMargins) {
          var _styles = this.styles();

          return this[0].offsetWidth + parseFloat(_styles.getPropertyValue('margin-right')) + parseFloat(_styles.getPropertyValue('margin-left'));
        }

        return this[0].offsetWidth;
      }

      return null;
    }

    function outerHeight(includeMargins) {
      if (this.length > 0) {
        if (includeMargins) {
          var _styles2 = this.styles();

          return this[0].offsetHeight + parseFloat(_styles2.getPropertyValue('margin-top')) + parseFloat(_styles2.getPropertyValue('margin-bottom'));
        }

        return this[0].offsetHeight;
      }

      return null;
    }

    function offset() {
      if (this.length > 0) {
        var _window = getWindow();

        var _document = getDocument();

        var el = this[0];
        var box = el.getBoundingClientRect();
        var body = _document.body;
        var clientTop = el.clientTop || body.clientTop || 0;
        var clientLeft = el.clientLeft || body.clientLeft || 0;
        var scrollTop = el === _window ? _window.scrollY : el.scrollTop;
        var scrollLeft = el === _window ? _window.scrollX : el.scrollLeft;
        return {
          top: box.top + scrollTop - clientTop,
          left: box.left + scrollLeft - clientLeft
        };
      }

      return null;
    }

    function styles() {
      var window = getWindow();
      if (this[0]) return window.getComputedStyle(this[0], null);
      return {};
    }

    function css(props, value) {
      var window = getWindow();
      var i;

      if (arguments.length === 1) {
        if (typeof props === 'string') {
          // .css('width')
          if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);
        } else {
          // .css({ width: '100px' })
          for (i = 0; i < this.length; i += 1) {
            for (var prop in props) {
              this[i].style[prop] = props[prop];
            }
          }

          return this;
        }
      }

      if (arguments.length === 2 && typeof props === 'string') {
        // .css('width', '100px')
        for (i = 0; i < this.length; i += 1) {
          this[i].style[props] = value;
        }

        return this;
      }

      return this;
    }

    function each(callback) {
      if (!callback) return this;
      this.forEach(function (el, index) {
        callback.apply(el, [el, index]);
      });
      return this;
    }

    function filter(callback) {
      var result = arrayFilter(this, callback);
      return $(result);
    }

    function html(html) {
      if (typeof html === 'undefined') {
        return this[0] ? this[0].innerHTML : null;
      }

      for (var i = 0; i < this.length; i += 1) {
        this[i].innerHTML = html;
      }

      return this;
    }

    function text(text) {
      if (typeof text === 'undefined') {
        return this[0] ? this[0].textContent.trim() : null;
      }

      for (var i = 0; i < this.length; i += 1) {
        this[i].textContent = text;
      }

      return this;
    }

    function is(selector) {
      var window = getWindow();
      var document = getDocument();
      var el = this[0];
      var compareWith;
      var i;
      if (!el || typeof selector === 'undefined') return false;

      if (typeof selector === 'string') {
        if (el.matches) return el.matches(selector);
        if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);
        if (el.msMatchesSelector) return el.msMatchesSelector(selector);
        compareWith = $(selector);

        for (i = 0; i < compareWith.length; i += 1) {
          if (compareWith[i] === el) return true;
        }

        return false;
      }

      if (selector === document) {
        return el === document;
      }

      if (selector === window) {
        return el === window;
      }

      if (selector.nodeType || selector instanceof Dom7) {
        compareWith = selector.nodeType ? [selector] : selector;

        for (i = 0; i < compareWith.length; i += 1) {
          if (compareWith[i] === el) return true;
        }

        return false;
      }

      return false;
    }

    function index() {
      var child = this[0];
      var i;

      if (child) {
        i = 0; // eslint-disable-next-line

        while ((child = child.previousSibling) !== null) {
          if (child.nodeType === 1) i += 1;
        }

        return i;
      }

      return undefined;
    }

    function eq(index) {
      if (typeof index === 'undefined') return this;
      var length = this.length;

      if (index > length - 1) {
        return $([]);
      }

      if (index < 0) {
        var returnIndex = length + index;
        if (returnIndex < 0) return $([]);
        return $([this[returnIndex]]);
      }

      return $([this[index]]);
    }

    function append() {
      var newChild;
      var document = getDocument();

      for (var k = 0; k < arguments.length; k += 1) {
        newChild = k < 0 || arguments.length <= k ? undefined : arguments[k];

        for (var i = 0; i < this.length; i += 1) {
          if (typeof newChild === 'string') {
            var tempDiv = document.createElement('div');
            tempDiv.innerHTML = newChild;

            while (tempDiv.firstChild) {
              this[i].appendChild(tempDiv.firstChild);
            }
          } else if (newChild instanceof Dom7) {
            for (var j = 0; j < newChild.length; j += 1) {
              this[i].appendChild(newChild[j]);
            }
          } else {
            this[i].appendChild(newChild);
          }
        }
      }

      return this;
    }

    function prepend(newChild) {
      var document = getDocument();
      var i;
      var j;

      for (i = 0; i < this.length; i += 1) {
        if (typeof newChild === 'string') {
          var tempDiv = document.createElement('div');
          tempDiv.innerHTML = newChild;

          for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {
            this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);
          }
        } else if (newChild instanceof Dom7) {
          for (j = 0; j < newChild.length; j += 1) {
            this[i].insertBefore(newChild[j], this[i].childNodes[0]);
          }
        } else {
          this[i].insertBefore(newChild, this[i].childNodes[0]);
        }
      }

      return this;
    }

    function next(selector) {
      if (this.length > 0) {
        if (selector) {
          if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {
            return $([this[0].nextElementSibling]);
          }

          return $([]);
        }

        if (this[0].nextElementSibling) return $([this[0].nextElementSibling]);
        return $([]);
      }

      return $([]);
    }

    function nextAll(selector) {
      var nextEls = [];
      var el = this[0];
      if (!el) return $([]);

      while (el.nextElementSibling) {
        var _next = el.nextElementSibling; // eslint-disable-line

        if (selector) {
          if ($(_next).is(selector)) nextEls.push(_next);
        } else nextEls.push(_next);

        el = _next;
      }

      return $(nextEls);
    }

    function prev(selector) {
      if (this.length > 0) {
        var el = this[0];

        if (selector) {
          if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {
            return $([el.previousElementSibling]);
          }

          return $([]);
        }

        if (el.previousElementSibling) return $([el.previousElementSibling]);
        return $([]);
      }

      return $([]);
    }

    function prevAll(selector) {
      var prevEls = [];
      var el = this[0];
      if (!el) return $([]);

      while (el.previousElementSibling) {
        var _prev = el.previousElementSibling; // eslint-disable-line

        if (selector) {
          if ($(_prev).is(selector)) prevEls.push(_prev);
        } else prevEls.push(_prev);

        el = _prev;
      }

      return $(prevEls);
    }

    function parent(selector) {
      var parents = []; // eslint-disable-line

      for (var i = 0; i < this.length; i += 1) {
        if (this[i].parentNode !== null) {
          if (selector) {
            if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);
          } else {
            parents.push(this[i].parentNode);
          }
        }
      }

      return $(parents);
    }

    function parents(selector) {
      var parents = []; // eslint-disable-line

      for (var i = 0; i < this.length; i += 1) {
        var _parent = this[i].parentNode; // eslint-disable-line

        while (_parent) {
          if (selector) {
            if ($(_parent).is(selector)) parents.push(_parent);
          } else {
            parents.push(_parent);
          }

          _parent = _parent.parentNode;
        }
      }

      return $(parents);
    }

    function closest(selector) {
      var closest = this; // eslint-disable-line

      if (typeof selector === 'undefined') {
        return $([]);
      }

      if (!closest.is(selector)) {
        closest = closest.parents(selector).eq(0);
      }

      return closest;
    }

    function find(selector) {
      var foundElements = [];

      for (var i = 0; i < this.length; i += 1) {
        var found = this[i].querySelectorAll(selector);

        for (var j = 0; j < found.length; j += 1) {
          foundElements.push(found[j]);
        }
      }

      return $(foundElements);
    }

    function children(selector) {
      var children = []; // eslint-disable-line

      for (var i = 0; i < this.length; i += 1) {
        var childNodes = this[i].children;

        for (var j = 0; j < childNodes.length; j += 1) {
          if (!selector || $(childNodes[j]).is(selector)) {
            children.push(childNodes[j]);
          }
        }
      }

      return $(children);
    }

    function remove() {
      for (var i = 0; i < this.length; i += 1) {
        if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);
      }

      return this;
    }

    var Methods = {
      addClass: addClass,
      removeClass: removeClass,
      hasClass: hasClass,
      toggleClass: toggleClass,
      attr: attr,
      removeAttr: removeAttr,
      transform: transform,
      transition: transition$1,
      on: on,
      off: off,
      trigger: trigger,
      transitionEnd: transitionEnd$1,
      outerWidth: outerWidth,
      outerHeight: outerHeight,
      styles: styles,
      offset: offset,
      css: css,
      each: each,
      html: html,
      text: text,
      is: is,
      index: index,
      eq: eq,
      append: append,
      prepend: prepend,
      next: next,
      nextAll: nextAll,
      prev: prev,
      prevAll: prevAll,
      parent: parent,
      parents: parents,
      closest: closest,
      find: find,
      children: children,
      filter: filter,
      remove: remove
    };
    Object.keys(Methods).forEach(function (methodName) {
      Object.defineProperty($.fn, methodName, {
        value: Methods[methodName],
        writable: true
      });
    });

    function deleteProps(obj) {
      var object = obj;
      Object.keys(object).forEach(function (key) {
        try {
          object[key] = null;
        } catch (e) {// no getter for object
        }

        try {
          delete object[key];
        } catch (e) {// something got wrong
        }
      });
    }

    function nextTick(callback) {
      var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      return setTimeout(callback, delay);
    }

    function now() {
      return Date.now();
    }

    function getComputedStyle$1(el) {
      var window = getWindow();
      var style;

      if (window.getComputedStyle) {
        style = window.getComputedStyle(el, null);
      }

      if (!style && el.currentStyle) {
        style = el.currentStyle;
      }

      if (!style) {
        style = el.style;
      }

      return style;
    }

    function getTranslate(el) {
      var axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'x';
      var window = getWindow();
      var matrix;
      var curTransform;
      var transformMatrix;
      var curStyle = getComputedStyle$1(el);

      if (window.WebKitCSSMatrix) {
        curTransform = curStyle.transform || curStyle.webkitTransform;

        if (curTransform.split(',').length > 6) {
          curTransform = curTransform.split(', ').map(function (a) {
            return a.replace(',', '.');
          }).join(', ');
        } // Some old versions of Webkit choke when 'none' is passed; pass
        // empty string instead in this case


        transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);
      } else {
        transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');
        matrix = transformMatrix.toString().split(',');
      }

      if (axis === 'x') {
        // Latest Chrome and webkits Fix
        if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41; // Crazy IE10 Matrix
        else if (matrix.length === 16) curTransform = parseFloat(matrix[12]); // Normal Browsers
        else curTransform = parseFloat(matrix[4]);
      }

      if (axis === 'y') {
        // Latest Chrome and webkits Fix
        if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42; // Crazy IE10 Matrix
        else if (matrix.length === 16) curTransform = parseFloat(matrix[13]); // Normal Browsers
        else curTransform = parseFloat(matrix[5]);
      }

      return curTransform || 0;
    }

    function isObject(o) {
      return _typeof(o) === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';
    }

    function isNode(node) {
      // eslint-disable-next-line
      if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {
        return node instanceof HTMLElement;
      }

      return node && (node.nodeType === 1 || node.nodeType === 11);
    }

    function extend() {
      var to = Object(arguments.length <= 0 ? undefined : arguments[0]);
      var noExtend = ['__proto__', 'constructor', 'prototype'];

      for (var i = 1; i < arguments.length; i += 1) {
        var nextSource = i < 0 || arguments.length <= i ? undefined : arguments[i];

        if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {
          var keysArray = Object.keys(Object(nextSource)).filter(function (key) {
            return noExtend.indexOf(key) < 0;
          });

          for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {
            var nextKey = keysArray[nextIndex];
            var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);

            if (desc !== undefined && desc.enumerable) {
              if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {
                if (nextSource[nextKey].__swiper__) {
                  to[nextKey] = nextSource[nextKey];
                } else {
                  extend(to[nextKey], nextSource[nextKey]);
                }
              } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {
                to[nextKey] = {};

                if (nextSource[nextKey].__swiper__) {
                  to[nextKey] = nextSource[nextKey];
                } else {
                  extend(to[nextKey], nextSource[nextKey]);
                }
              } else {
                to[nextKey] = nextSource[nextKey];
              }
            }
          }
        }
      }

      return to;
    }

    function setCSSProperty(el, varName, varValue) {
      el.style.setProperty(varName, varValue);
    }

    function animateCSSModeScroll(_ref) {
      var swiper = _ref.swiper,
          targetPosition = _ref.targetPosition,
          side = _ref.side;
      var window = getWindow();
      var startPosition = -swiper.translate;
      var startTime = null;
      var time;
      var duration = swiper.params.speed;
      swiper.wrapperEl.style.scrollSnapType = 'none';
      window.cancelAnimationFrame(swiper.cssModeFrameID);
      var dir = targetPosition > startPosition ? 'next' : 'prev';

      var isOutOfBound = function isOutOfBound(current, target) {
        return dir === 'next' && current >= target || dir === 'prev' && current <= target;
      };

      var animate = function animate() {
        time = new Date().getTime();

        if (startTime === null) {
          startTime = time;
        }

        var progress = Math.max(Math.min((time - startTime) / duration, 1), 0);
        var easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;
        var currentPosition = startPosition + easeProgress * (targetPosition - startPosition);

        if (isOutOfBound(currentPosition, targetPosition)) {
          currentPosition = targetPosition;
        }

        swiper.wrapperEl.scrollTo(_defineProperty({}, side, currentPosition));

        if (isOutOfBound(currentPosition, targetPosition)) {
          swiper.wrapperEl.style.overflow = 'hidden';
          swiper.wrapperEl.style.scrollSnapType = '';
          setTimeout(function () {
            swiper.wrapperEl.style.overflow = '';
            swiper.wrapperEl.scrollTo(_defineProperty({}, side, currentPosition));
          });
          window.cancelAnimationFrame(swiper.cssModeFrameID);
          return;
        }

        swiper.cssModeFrameID = window.requestAnimationFrame(animate);
      };

      animate();
    }

    var support;

    function calcSupport() {
      var window = getWindow();
      var document = getDocument();
      return {
        smoothScroll: document.documentElement && 'scrollBehavior' in document.documentElement.style,
        touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch),
        passiveListener: function checkPassiveListener() {
          var supportsPassive = false;

          try {
            var opts = Object.defineProperty({}, 'passive', {
              // eslint-disable-next-line
              get: function get() {
                supportsPassive = true;
              }
            });
            window.addEventListener('testPassiveListener', null, opts);
          } catch (e) {// No support
          }

          return supportsPassive;
        }(),
        gestures: function checkGestures() {
          return 'ongesturestart' in window;
        }()
      };
    }

    function getSupport() {
      if (!support) {
        support = calcSupport();
      }

      return support;
    }

    var deviceCached;

    function calcDevice() {
      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
          userAgent = _ref2.userAgent;

      var support = getSupport();
      var window = getWindow();
      var platform = window.navigator.platform;
      var ua = userAgent || window.navigator.userAgent;
      var device = {
        ios: false,
        android: false
      };
      var screenWidth = window.screen.width;
      var screenHeight = window.screen.height;
      var android = ua.match(/(Android);?[\s\/]+([\d.]+)?/); // eslint-disable-line

      var ipad = ua.match(/(iPad).*OS\s([\d_]+)/);
      var ipod = ua.match(/(iPod)(.*OS\s([\d_]+))?/);
      var iphone = !ipad && ua.match(/(iPhone\sOS|iOS)\s([\d_]+)/);
      var windows = platform === 'Win32';
      var macos = platform === 'MacIntel'; // iPadOs 13 fix

      var iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];

      if (!ipad && macos && support.touch && iPadScreens.indexOf("".concat(screenWidth, "x").concat(screenHeight)) >= 0) {
        ipad = ua.match(/(Version)\/([\d.]+)/);
        if (!ipad) ipad = [0, 1, '13_0_0'];
        macos = false;
      } // Android


      if (android && !windows) {
        device.os = 'android';
        device.android = true;
      }

      if (ipad || iphone || ipod) {
        device.os = 'ios';
        device.ios = true;
      } // Export object


      return device;
    }

    function getDevice() {
      var overrides = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      if (!deviceCached) {
        deviceCached = calcDevice(overrides);
      }

      return deviceCached;
    }

    var browser;

    function calcBrowser() {
      var window = getWindow();

      function isSafari() {
        var ua = window.navigator.userAgent.toLowerCase();
        return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;
      }

      return {
        isSafari: isSafari(),
        isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)
      };
    }

    function getBrowser() {
      if (!browser) {
        browser = calcBrowser();
      }

      return browser;
    }

    function Resize(_ref3) {
      var swiper = _ref3.swiper,
          on = _ref3.on,
          emit = _ref3.emit;
      var window = getWindow();
      var observer = null;

      var resizeHandler = function resizeHandler() {
        if (!swiper || swiper.destroyed || !swiper.initialized) return;
        emit('beforeResize');
        emit('resize');
      };

      var createObserver = function createObserver() {
        if (!swiper || swiper.destroyed || !swiper.initialized) return;
        observer = new ResizeObserver(function (entries) {
          var width = swiper.width,
              height = swiper.height;
          var newWidth = width;
          var newHeight = height;
          entries.forEach(function (_ref4) {
            var contentBoxSize = _ref4.contentBoxSize,
                contentRect = _ref4.contentRect,
                target = _ref4.target;
            if (target && target !== swiper.el) return;
            newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;
            newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;
          });

          if (newWidth !== width || newHeight !== height) {
            resizeHandler();
          }
        });
        observer.observe(swiper.el);
      };

      var removeObserver = function removeObserver() {
        if (observer && observer.unobserve && swiper.el) {
          observer.unobserve(swiper.el);
          observer = null;
        }
      };

      var orientationChangeHandler = function orientationChangeHandler() {
        if (!swiper || swiper.destroyed || !swiper.initialized) return;
        emit('orientationchange');
      };

      on('init', function () {
        if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {
          createObserver();
          return;
        }

        window.addEventListener('resize', resizeHandler);
        window.addEventListener('orientationchange', orientationChangeHandler);
      });
      on('destroy', function () {
        removeObserver();
        window.removeEventListener('resize', resizeHandler);
        window.removeEventListener('orientationchange', orientationChangeHandler);
      });
    }

    function Observer(_ref5) {
      var swiper = _ref5.swiper,
          extendParams = _ref5.extendParams,
          on = _ref5.on,
          emit = _ref5.emit;
      var observers = [];
      var window = getWindow();

      var attach = function attach(target) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;
        var observer = new ObserverFunc(function (mutations) {
          // The observerUpdate event should only be triggered
          // once despite the number of mutations.  Additional
          // triggers are redundant and are very costly
          if (mutations.length === 1) {
            emit('observerUpdate', mutations[0]);
            return;
          }

          var observerUpdate = function observerUpdate() {
            emit('observerUpdate', mutations[0]);
          };

          if (window.requestAnimationFrame) {
            window.requestAnimationFrame(observerUpdate);
          } else {
            window.setTimeout(observerUpdate, 0);
          }
        });
        observer.observe(target, {
          attributes: typeof options.attributes === 'undefined' ? true : options.attributes,
          childList: typeof options.childList === 'undefined' ? true : options.childList,
          characterData: typeof options.characterData === 'undefined' ? true : options.characterData
        });
        observers.push(observer);
      };

      var init = function init() {
        if (!swiper.params.observer) return;

        if (swiper.params.observeParents) {
          var containerParents = swiper.$el.parents();

          for (var i = 0; i < containerParents.length; i += 1) {
            attach(containerParents[i]);
          }
        } // Observe container


        attach(swiper.$el[0], {
          childList: swiper.params.observeSlideChildren
        }); // Observe wrapper

        attach(swiper.$wrapperEl[0], {
          attributes: false
        });
      };

      var destroy = function destroy() {
        observers.forEach(function (observer) {
          observer.disconnect();
        });
        observers.splice(0, observers.length);
      };

      extendParams({
        observer: false,
        observeParents: false,
        observeSlideChildren: false
      });
      on('init', init);
      on('destroy', destroy);
    }
    /* eslint-disable no-underscore-dangle */


    var eventsEmitter = {
      on: function on(events, handler, priority) {
        var self = this;
        if (typeof handler !== 'function') return self;
        var method = priority ? 'unshift' : 'push';
        events.split(' ').forEach(function (event) {
          if (!self.eventsListeners[event]) self.eventsListeners[event] = [];
          self.eventsListeners[event][method](handler);
        });
        return self;
      },
      once: function once(events, handler, priority) {
        var self = this;
        if (typeof handler !== 'function') return self;

        function onceHandler() {
          self.off(events, onceHandler);

          if (onceHandler.__emitterProxy) {
            delete onceHandler.__emitterProxy;
          }

          for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
            args[_key8] = arguments[_key8];
          }

          handler.apply(self, args);
        }

        onceHandler.__emitterProxy = handler;
        return self.on(events, onceHandler, priority);
      },
      onAny: function onAny(handler, priority) {
        var self = this;
        if (typeof handler !== 'function') return self;
        var method = priority ? 'unshift' : 'push';

        if (self.eventsAnyListeners.indexOf(handler) < 0) {
          self.eventsAnyListeners[method](handler);
        }

        return self;
      },
      offAny: function offAny(handler) {
        var self = this;
        if (!self.eventsAnyListeners) return self;
        var index = self.eventsAnyListeners.indexOf(handler);

        if (index >= 0) {
          self.eventsAnyListeners.splice(index, 1);
        }

        return self;
      },
      off: function off(events, handler) {
        var self = this;
        if (!self.eventsListeners) return self;
        events.split(' ').forEach(function (event) {
          if (typeof handler === 'undefined') {
            self.eventsListeners[event] = [];
          } else if (self.eventsListeners[event]) {
            self.eventsListeners[event].forEach(function (eventHandler, index) {
              if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {
                self.eventsListeners[event].splice(index, 1);
              }
            });
          }
        });
        return self;
      },
      emit: function emit() {
        var self = this;
        if (!self.eventsListeners) return self;
        var events;
        var data;
        var context;

        for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {
          args[_key9] = arguments[_key9];
        }

        if (typeof args[0] === 'string' || Array.isArray(args[0])) {
          events = args[0];
          data = args.slice(1, args.length);
          context = self;
        } else {
          events = args[0].events;
          data = args[0].data;
          context = args[0].context || self;
        }

        data.unshift(context);
        var eventsArray = Array.isArray(events) ? events : events.split(' ');
        eventsArray.forEach(function (event) {
          if (self.eventsAnyListeners && self.eventsAnyListeners.length) {
            self.eventsAnyListeners.forEach(function (eventHandler) {
              eventHandler.apply(context, [event].concat(_toConsumableArray(data)));
            });
          }

          if (self.eventsListeners && self.eventsListeners[event]) {
            self.eventsListeners[event].forEach(function (eventHandler) {
              eventHandler.apply(context, data);
            });
          }
        });
        return self;
      }
    };

    function updateSize() {
      var swiper = this;
      var width;
      var height;
      var $el = swiper.$el;

      if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {
        width = swiper.params.width;
      } else {
        width = $el[0].clientWidth;
      }

      if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {
        height = swiper.params.height;
      } else {
        height = $el[0].clientHeight;
      }

      if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {
        return;
      } // Subtract paddings


      width = width - parseInt($el.css('padding-left') || 0, 10) - parseInt($el.css('padding-right') || 0, 10);
      height = height - parseInt($el.css('padding-top') || 0, 10) - parseInt($el.css('padding-bottom') || 0, 10);
      if (Number.isNaN(width)) width = 0;
      if (Number.isNaN(height)) height = 0;
      Object.assign(swiper, {
        width: width,
        height: height,
        size: swiper.isHorizontal() ? width : height
      });
    }

    function updateSlides() {
      var swiper = this;

      function getDirectionLabel(property) {
        if (swiper.isHorizontal()) {
          return property;
        } // prettier-ignore


        return {
          'width': 'height',
          'margin-top': 'margin-left',
          'margin-bottom ': 'margin-right',
          'margin-left': 'margin-top',
          'margin-right': 'margin-bottom',
          'padding-left': 'padding-top',
          'padding-right': 'padding-bottom',
          'marginRight': 'marginBottom'
        }[property];
      }

      function getDirectionPropertyValue(node, label) {
        return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);
      }

      var params = swiper.params;
      var $wrapperEl = swiper.$wrapperEl,
          swiperSize = swiper.size,
          rtl = swiper.rtlTranslate,
          wrongRTL = swiper.wrongRTL;
      var isVirtual = swiper.virtual && params.virtual.enabled;
      var previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;
      var slides = $wrapperEl.children(".".concat(swiper.params.slideClass));
      var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;
      var snapGrid = [];
      var slidesGrid = [];
      var slidesSizesGrid = [];
      var offsetBefore = params.slidesOffsetBefore;

      if (typeof offsetBefore === 'function') {
        offsetBefore = params.slidesOffsetBefore.call(swiper);
      }

      var offsetAfter = params.slidesOffsetAfter;

      if (typeof offsetAfter === 'function') {
        offsetAfter = params.slidesOffsetAfter.call(swiper);
      }

      var previousSnapGridLength = swiper.snapGrid.length;
      var previousSlidesGridLength = swiper.slidesGrid.length;
      var spaceBetween = params.spaceBetween;
      var slidePosition = -offsetBefore;
      var prevSlideSize = 0;
      var index = 0;

      if (typeof swiperSize === 'undefined') {
        return;
      }

      if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {
        spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;
      }

      swiper.virtualSize = -spaceBetween; // reset margins

      if (rtl) slides.css({
        marginLeft: '',
        marginBottom: '',
        marginTop: ''
      });else slides.css({
        marginRight: '',
        marginBottom: '',
        marginTop: ''
      }); // reset cssMode offsets

      if (params.centeredSlides && params.cssMode) {
        setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-before', '');
        setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-after', '');
      }

      var gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;

      if (gridEnabled) {
        swiper.grid.initSlides(slidesLength);
      } // Calc slides


      var slideSize;
      var shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(function (key) {
        return typeof params.breakpoints[key].slidesPerView !== 'undefined';
      }).length > 0;

      for (var i = 0; i < slidesLength; i += 1) {
        slideSize = 0;

        var _slide = slides.eq(i);

        if (gridEnabled) {
          swiper.grid.updateSlide(i, _slide, slidesLength, getDirectionLabel);
        }

        if (_slide.css('display') === 'none') continue; // eslint-disable-line

        if (params.slidesPerView === 'auto') {
          if (shouldResetSlideSize) {
            slides[i].style[getDirectionLabel('width')] = "";
          }

          var slideStyles = getComputedStyle(_slide[0]);
          var currentTransform = _slide[0].style.transform;
          var currentWebKitTransform = _slide[0].style.webkitTransform;

          if (currentTransform) {
            _slide[0].style.transform = 'none';
          }

          if (currentWebKitTransform) {
            _slide[0].style.webkitTransform = 'none';
          }

          if (params.roundLengths) {
            slideSize = swiper.isHorizontal() ? _slide.outerWidth(true) : _slide.outerHeight(true);
          } else {
            // eslint-disable-next-line
            var width = getDirectionPropertyValue(slideStyles, 'width');
            var paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');
            var paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');
            var marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');
            var marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');
            var boxSizing = slideStyles.getPropertyValue('box-sizing');

            if (boxSizing && boxSizing === 'border-box') {
              slideSize = width + marginLeft + marginRight;
            } else {
              var _slide$ = _slide[0],
                  clientWidth = _slide$.clientWidth,
                  offsetWidth = _slide$.offsetWidth;
              slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);
            }
          }

          if (currentTransform) {
            _slide[0].style.transform = currentTransform;
          }

          if (currentWebKitTransform) {
            _slide[0].style.webkitTransform = currentWebKitTransform;
          }

          if (params.roundLengths) slideSize = Math.floor(slideSize);
        } else {
          slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;
          if (params.roundLengths) slideSize = Math.floor(slideSize);

          if (slides[i]) {
            slides[i].style[getDirectionLabel('width')] = "".concat(slideSize, "px");
          }
        }

        if (slides[i]) {
          slides[i].swiperSlideSize = slideSize;
        }

        slidesSizesGrid.push(slideSize);

        if (params.centeredSlides) {
          slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;
          if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;
          if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;
          if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;
          if (params.roundLengths) slidePosition = Math.floor(slidePosition);
          if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);
          slidesGrid.push(slidePosition);
        } else {
          if (params.roundLengths) slidePosition = Math.floor(slidePosition);
          if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);
          slidesGrid.push(slidePosition);
          slidePosition = slidePosition + slideSize + spaceBetween;
        }

        swiper.virtualSize += slideSize + spaceBetween;
        prevSlideSize = slideSize;
        index += 1;
      }

      swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;

      if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {
        $wrapperEl.css({
          width: "".concat(swiper.virtualSize + params.spaceBetween, "px")
        });
      }

      if (params.setWrapperSize) {
        $wrapperEl.css(_defineProperty({}, getDirectionLabel('width'), "".concat(swiper.virtualSize + params.spaceBetween, "px")));
      }

      if (gridEnabled) {
        swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);
      } // Remove last grid elements depending on width


      if (!params.centeredSlides) {
        var newSlidesGrid = [];

        for (var _i = 0; _i < snapGrid.length; _i += 1) {
          var slidesGridItem = snapGrid[_i];
          if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);

          if (snapGrid[_i] <= swiper.virtualSize - swiperSize) {
            newSlidesGrid.push(slidesGridItem);
          }
        }

        snapGrid = newSlidesGrid;

        if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {
          snapGrid.push(swiper.virtualSize - swiperSize);
        }
      }

      if (snapGrid.length === 0) snapGrid = [0];

      if (params.spaceBetween !== 0) {
        var key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');
        slides.filter(function (_, slideIndex) {
          if (!params.cssMode) return true;

          if (slideIndex === slides.length - 1) {
            return false;
          }

          return true;
        }).css(_defineProperty({}, key, "".concat(spaceBetween, "px")));
      }

      if (params.centeredSlides && params.centeredSlidesBounds) {
        var allSlidesSize = 0;
        slidesSizesGrid.forEach(function (slideSizeValue) {
          allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);
        });
        allSlidesSize -= params.spaceBetween;
        var maxSnap = allSlidesSize - swiperSize;
        snapGrid = snapGrid.map(function (snap) {
          if (snap < 0) return -offsetBefore;
          if (snap > maxSnap) return maxSnap + offsetAfter;
          return snap;
        });
      }

      if (params.centerInsufficientSlides) {
        var _allSlidesSize = 0;
        slidesSizesGrid.forEach(function (slideSizeValue) {
          _allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);
        });
        _allSlidesSize -= params.spaceBetween;

        if (_allSlidesSize < swiperSize) {
          var allSlidesOffset = (swiperSize - _allSlidesSize) / 2;
          snapGrid.forEach(function (snap, snapIndex) {
            snapGrid[snapIndex] = snap - allSlidesOffset;
          });
          slidesGrid.forEach(function (snap, snapIndex) {
            slidesGrid[snapIndex] = snap + allSlidesOffset;
          });
        }
      }

      Object.assign(swiper, {
        slides: slides,
        snapGrid: snapGrid,
        slidesGrid: slidesGrid,
        slidesSizesGrid: slidesSizesGrid
      });

      if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {
        setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-before', "".concat(-snapGrid[0], "px"));
        setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-after', "".concat(swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2, "px"));
        var addToSnapGrid = -swiper.snapGrid[0];
        var addToSlidesGrid = -swiper.slidesGrid[0];
        swiper.snapGrid = swiper.snapGrid.map(function (v) {
          return v + addToSnapGrid;
        });
        swiper.slidesGrid = swiper.slidesGrid.map(function (v) {
          return v + addToSlidesGrid;
        });
      }

      if (slidesLength !== previousSlidesLength) {
        swiper.emit('slidesLengthChange');
      }

      if (snapGrid.length !== previousSnapGridLength) {
        if (swiper.params.watchOverflow) swiper.checkOverflow();
        swiper.emit('snapGridLengthChange');
      }

      if (slidesGrid.length !== previousSlidesGridLength) {
        swiper.emit('slidesGridLengthChange');
      }

      if (params.watchSlidesProgress) {
        swiper.updateSlidesOffset();
      }
    }

    function updateAutoHeight(speed) {
      var swiper = this;
      var activeSlides = [];
      var isVirtual = swiper.virtual && swiper.params.virtual.enabled;
      var newHeight = 0;
      var i;

      if (typeof speed === 'number') {
        swiper.setTransition(speed);
      } else if (speed === true) {
        swiper.setTransition(swiper.params.speed);
      }

      var getSlideByIndex = function getSlideByIndex(index) {
        if (isVirtual) {
          return swiper.slides.filter(function (el) {
            return parseInt(el.getAttribute('data-swiper-slide-index'), 10) === index;
          })[0];
        }

        return swiper.slides.eq(index)[0];
      }; // Find slides currently in view


      if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {
        if (swiper.params.centeredSlides) {
          swiper.visibleSlides.each(function (slide) {
            activeSlides.push(slide);
          });
        } else {
          for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {
            var _index = swiper.activeIndex + i;

            if (_index > swiper.slides.length && !isVirtual) break;
            activeSlides.push(getSlideByIndex(_index));
          }
        }
      } else {
        activeSlides.push(getSlideByIndex(swiper.activeIndex));
      } // Find new height from highest slide in view


      for (i = 0; i < activeSlides.length; i += 1) {
        if (typeof activeSlides[i] !== 'undefined') {
          var height = activeSlides[i].offsetHeight;
          newHeight = height > newHeight ? height : newHeight;
        }
      } // Update Height


      if (newHeight || newHeight === 0) swiper.$wrapperEl.css('height', "".concat(newHeight, "px"));
    }

    function updateSlidesOffset() {
      var swiper = this;
      var slides = swiper.slides;

      for (var i = 0; i < slides.length; i += 1) {
        slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;
      }
    }

    function updateSlidesProgress() {
      var translate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this && this.translate || 0;
      var swiper = this;
      var params = swiper.params;
      var slides = swiper.slides,
          rtl = swiper.rtlTranslate,
          snapGrid = swiper.snapGrid;
      if (slides.length === 0) return;
      if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();
      var offsetCenter = -translate;
      if (rtl) offsetCenter = translate; // Visible Slides

      slides.removeClass(params.slideVisibleClass);
      swiper.visibleSlidesIndexes = [];
      swiper.visibleSlides = [];

      for (var i = 0; i < slides.length; i += 1) {
        var _slide2 = slides[i];
        var slideOffset = _slide2.swiperSlideOffset;

        if (params.cssMode && params.centeredSlides) {
          slideOffset -= slides[0].swiperSlideOffset;
        }

        var slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (_slide2.swiperSlideSize + params.spaceBetween);
        var originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (_slide2.swiperSlideSize + params.spaceBetween);
        var slideBefore = -(offsetCenter - slideOffset);
        var slideAfter = slideBefore + swiper.slidesSizesGrid[i];
        var isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;

        if (isVisible) {
          swiper.visibleSlides.push(_slide2);
          swiper.visibleSlidesIndexes.push(i);
          slides.eq(i).addClass(params.slideVisibleClass);
        }

        _slide2.progress = rtl ? -slideProgress : slideProgress;
        _slide2.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;
      }

      swiper.visibleSlides = $(swiper.visibleSlides);
    }

    function updateProgress(translate) {
      var swiper = this;

      if (typeof translate === 'undefined') {
        var multiplier = swiper.rtlTranslate ? -1 : 1; // eslint-disable-next-line

        translate = swiper && swiper.translate && swiper.translate * multiplier || 0;
      }

      var params = swiper.params;
      var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();
      var progress = swiper.progress,
          isBeginning = swiper.isBeginning,
          isEnd = swiper.isEnd;
      var wasBeginning = isBeginning;
      var wasEnd = isEnd;

      if (translatesDiff === 0) {
        progress = 0;
        isBeginning = true;
        isEnd = true;
      } else {
        progress = (translate - swiper.minTranslate()) / translatesDiff;
        isBeginning = progress <= 0;
        isEnd = progress >= 1;
      }

      Object.assign(swiper, {
        progress: progress,
        isBeginning: isBeginning,
        isEnd: isEnd
      });
      if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);

      if (isBeginning && !wasBeginning) {
        swiper.emit('reachBeginning toEdge');
      }

      if (isEnd && !wasEnd) {
        swiper.emit('reachEnd toEdge');
      }

      if (wasBeginning && !isBeginning || wasEnd && !isEnd) {
        swiper.emit('fromEdge');
      }

      swiper.emit('progress', progress);
    }

    function updateSlidesClasses() {
      var swiper = this;
      var slides = swiper.slides,
          params = swiper.params,
          $wrapperEl = swiper.$wrapperEl,
          activeIndex = swiper.activeIndex,
          realIndex = swiper.realIndex;
      var isVirtual = swiper.virtual && params.virtual.enabled;
      slides.removeClass("".concat(params.slideActiveClass, " ").concat(params.slideNextClass, " ").concat(params.slidePrevClass, " ").concat(params.slideDuplicateActiveClass, " ").concat(params.slideDuplicateNextClass, " ").concat(params.slideDuplicatePrevClass));
      var activeSlide;

      if (isVirtual) {
        activeSlide = swiper.$wrapperEl.find(".".concat(params.slideClass, "[data-swiper-slide-index=\"").concat(activeIndex, "\"]"));
      } else {
        activeSlide = slides.eq(activeIndex);
      } // Active classes


      activeSlide.addClass(params.slideActiveClass);

      if (params.loop) {
        // Duplicate to all looped slides
        if (activeSlide.hasClass(params.slideDuplicateClass)) {
          $wrapperEl.children(".".concat(params.slideClass, ":not(.").concat(params.slideDuplicateClass, ")[data-swiper-slide-index=\"").concat(realIndex, "\"]")).addClass(params.slideDuplicateActiveClass);
        } else {
          $wrapperEl.children(".".concat(params.slideClass, ".").concat(params.slideDuplicateClass, "[data-swiper-slide-index=\"").concat(realIndex, "\"]")).addClass(params.slideDuplicateActiveClass);
        }
      } // Next Slide


      var nextSlide = activeSlide.nextAll(".".concat(params.slideClass)).eq(0).addClass(params.slideNextClass);

      if (params.loop && nextSlide.length === 0) {
        nextSlide = slides.eq(0);
        nextSlide.addClass(params.slideNextClass);
      } // Prev Slide


      var prevSlide = activeSlide.prevAll(".".concat(params.slideClass)).eq(0).addClass(params.slidePrevClass);

      if (params.loop && prevSlide.length === 0) {
        prevSlide = slides.eq(-1);
        prevSlide.addClass(params.slidePrevClass);
      }

      if (params.loop) {
        // Duplicate to all looped slides
        if (nextSlide.hasClass(params.slideDuplicateClass)) {
          $wrapperEl.children(".".concat(params.slideClass, ":not(.").concat(params.slideDuplicateClass, ")[data-swiper-slide-index=\"").concat(nextSlide.attr('data-swiper-slide-index'), "\"]")).addClass(params.slideDuplicateNextClass);
        } else {
          $wrapperEl.children(".".concat(params.slideClass, ".").concat(params.slideDuplicateClass, "[data-swiper-slide-index=\"").concat(nextSlide.attr('data-swiper-slide-index'), "\"]")).addClass(params.slideDuplicateNextClass);
        }

        if (prevSlide.hasClass(params.slideDuplicateClass)) {
          $wrapperEl.children(".".concat(params.slideClass, ":not(.").concat(params.slideDuplicateClass, ")[data-swiper-slide-index=\"").concat(prevSlide.attr('data-swiper-slide-index'), "\"]")).addClass(params.slideDuplicatePrevClass);
        } else {
          $wrapperEl.children(".".concat(params.slideClass, ".").concat(params.slideDuplicateClass, "[data-swiper-slide-index=\"").concat(prevSlide.attr('data-swiper-slide-index'), "\"]")).addClass(params.slideDuplicatePrevClass);
        }
      }

      swiper.emitSlidesClasses();
    }

    function updateActiveIndex(newActiveIndex) {
      var swiper = this;
      var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;
      var slidesGrid = swiper.slidesGrid,
          snapGrid = swiper.snapGrid,
          params = swiper.params,
          previousIndex = swiper.activeIndex,
          previousRealIndex = swiper.realIndex,
          previousSnapIndex = swiper.snapIndex;
      var activeIndex = newActiveIndex;
      var snapIndex;

      if (typeof activeIndex === 'undefined') {
        for (var i = 0; i < slidesGrid.length; i += 1) {
          if (typeof slidesGrid[i + 1] !== 'undefined') {
            if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {
              activeIndex = i;
            } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {
              activeIndex = i + 1;
            }
          } else if (translate >= slidesGrid[i]) {
            activeIndex = i;
          }
        } // Normalize slideIndex


        if (params.normalizeSlideIndex) {
          if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;
        }
      }

      if (snapGrid.indexOf(translate) >= 0) {
        snapIndex = snapGrid.indexOf(translate);
      } else {
        var skip = Math.min(params.slidesPerGroupSkip, activeIndex);
        snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);
      }

      if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;

      if (activeIndex === previousIndex) {
        if (snapIndex !== previousSnapIndex) {
          swiper.snapIndex = snapIndex;
          swiper.emit('snapIndexChange');
        }

        return;
      } // Get real index


      var realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);
      Object.assign(swiper, {
        snapIndex: snapIndex,
        realIndex: realIndex,
        previousIndex: previousIndex,
        activeIndex: activeIndex
      });
      swiper.emit('activeIndexChange');
      swiper.emit('snapIndexChange');

      if (previousRealIndex !== realIndex) {
        swiper.emit('realIndexChange');
      }

      if (swiper.initialized || swiper.params.runCallbacksOnInit) {
        swiper.emit('slideChange');
      }
    }

    function updateClickedSlide(e) {
      var swiper = this;
      var params = swiper.params;
      var slide = $(e).closest(".".concat(params.slideClass))[0];
      var slideFound = false;
      var slideIndex;

      if (slide) {
        for (var i = 0; i < swiper.slides.length; i += 1) {
          if (swiper.slides[i] === slide) {
            slideFound = true;
            slideIndex = i;
            break;
          }
        }
      }

      if (slide && slideFound) {
        swiper.clickedSlide = slide;

        if (swiper.virtual && swiper.params.virtual.enabled) {
          swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);
        } else {
          swiper.clickedIndex = slideIndex;
        }
      } else {
        swiper.clickedSlide = undefined;
        swiper.clickedIndex = undefined;
        return;
      }

      if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {
        swiper.slideToClickedSlide();
      }
    }

    var update = {
      updateSize: updateSize,
      updateSlides: updateSlides,
      updateAutoHeight: updateAutoHeight,
      updateSlidesOffset: updateSlidesOffset,
      updateSlidesProgress: updateSlidesProgress,
      updateProgress: updateProgress,
      updateSlidesClasses: updateSlidesClasses,
      updateActiveIndex: updateActiveIndex,
      updateClickedSlide: updateClickedSlide
    };

    function getSwiperTranslate() {
      var axis = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.isHorizontal() ? 'x' : 'y';
      var swiper = this;
      var params = swiper.params,
          rtl = swiper.rtlTranslate,
          translate = swiper.translate,
          $wrapperEl = swiper.$wrapperEl;

      if (params.virtualTranslate) {
        return rtl ? -translate : translate;
      }

      if (params.cssMode) {
        return translate;
      }

      var currentTranslate = getTranslate($wrapperEl[0], axis);
      if (rtl) currentTranslate = -currentTranslate;
      return currentTranslate || 0;
    }

    function setTranslate(translate, byController) {
      var swiper = this;
      var rtl = swiper.rtlTranslate,
          params = swiper.params,
          $wrapperEl = swiper.$wrapperEl,
          wrapperEl = swiper.wrapperEl,
          progress = swiper.progress;
      var x = 0;
      var y = 0;
      var z = 0;

      if (swiper.isHorizontal()) {
        x = rtl ? -translate : translate;
      } else {
        y = translate;
      }

      if (params.roundLengths) {
        x = Math.floor(x);
        y = Math.floor(y);
      }

      if (params.cssMode) {
        wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;
      } else if (!params.virtualTranslate) {
        $wrapperEl.transform("translate3d(".concat(x, "px, ").concat(y, "px, ").concat(z, "px)"));
      }

      swiper.previousTranslate = swiper.translate;
      swiper.translate = swiper.isHorizontal() ? x : y; // Check if we need to update progress

      var newProgress;
      var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();

      if (translatesDiff === 0) {
        newProgress = 0;
      } else {
        newProgress = (translate - swiper.minTranslate()) / translatesDiff;
      }

      if (newProgress !== progress) {
        swiper.updateProgress(translate);
      }

      swiper.emit('setTranslate', swiper.translate, byController);
    }

    function minTranslate() {
      return -this.snapGrid[0];
    }

    function maxTranslate() {
      return -this.snapGrid[this.snapGrid.length - 1];
    }

    function translateTo() {
      var translate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
      var speed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.params.speed;
      var runCallbacks = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
      var translateBounds = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;
      var internal = arguments.length > 4 ? arguments[4] : undefined;
      var swiper = this;
      var params = swiper.params,
          wrapperEl = swiper.wrapperEl;

      if (swiper.animating && params.preventInteractionOnTransition) {
        return false;
      }

      var minTranslate = swiper.minTranslate();
      var maxTranslate = swiper.maxTranslate();
      var newTranslate;
      if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate; // Update progress

      swiper.updateProgress(newTranslate);

      if (params.cssMode) {
        var isH = swiper.isHorizontal();

        if (speed === 0) {
          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;
        } else {
          var _wrapperEl$scrollTo;

          if (!swiper.support.smoothScroll) {
            animateCSSModeScroll({
              swiper: swiper,
              targetPosition: -newTranslate,
              side: isH ? 'left' : 'top'
            });
            return true;
          }

          wrapperEl.scrollTo((_wrapperEl$scrollTo = {}, _defineProperty(_wrapperEl$scrollTo, isH ? 'left' : 'top', -newTranslate), _defineProperty(_wrapperEl$scrollTo, "behavior", 'smooth'), _wrapperEl$scrollTo));
        }

        return true;
      }

      if (speed === 0) {
        swiper.setTransition(0);
        swiper.setTranslate(newTranslate);

        if (runCallbacks) {
          swiper.emit('beforeTransitionStart', speed, internal);
          swiper.emit('transitionEnd');
        }
      } else {
        swiper.setTransition(speed);
        swiper.setTranslate(newTranslate);

        if (runCallbacks) {
          swiper.emit('beforeTransitionStart', speed, internal);
          swiper.emit('transitionStart');
        }

        if (!swiper.animating) {
          swiper.animating = true;

          if (!swiper.onTranslateToWrapperTransitionEnd) {
            swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {
              if (!swiper || swiper.destroyed) return;
              if (e.target !== this) return;
              swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);
              swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);
              swiper.onTranslateToWrapperTransitionEnd = null;
              delete swiper.onTranslateToWrapperTransitionEnd;

              if (runCallbacks) {
                swiper.emit('transitionEnd');
              }
            };
          }

          swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);
          swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);
        }
      }

      return true;
    }

    var translate = {
      getTranslate: getSwiperTranslate,
      setTranslate: setTranslate,
      minTranslate: minTranslate,
      maxTranslate: maxTranslate,
      translateTo: translateTo
    };

    function setTransition(duration, byController) {
      var swiper = this;

      if (!swiper.params.cssMode) {
        swiper.$wrapperEl.transition(duration);
      }

      swiper.emit('setTransition', duration, byController);
    }

    function transitionEmit(_ref6) {
      var swiper = _ref6.swiper,
          runCallbacks = _ref6.runCallbacks,
          direction = _ref6.direction,
          step = _ref6.step;
      var activeIndex = swiper.activeIndex,
          previousIndex = swiper.previousIndex;
      var dir = direction;

      if (!dir) {
        if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';
      }

      swiper.emit("transition".concat(step));

      if (runCallbacks && activeIndex !== previousIndex) {
        if (dir === 'reset') {
          swiper.emit("slideResetTransition".concat(step));
          return;
        }

        swiper.emit("slideChangeTransition".concat(step));

        if (dir === 'next') {
          swiper.emit("slideNextTransition".concat(step));
        } else {
          swiper.emit("slidePrevTransition".concat(step));
        }
      }
    }

    function transitionStart() {
      var runCallbacks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      var direction = arguments.length > 1 ? arguments[1] : undefined;
      var swiper = this;
      var params = swiper.params;
      if (params.cssMode) return;

      if (params.autoHeight) {
        swiper.updateAutoHeight();
      }

      transitionEmit({
        swiper: swiper,
        runCallbacks: runCallbacks,
        direction: direction,
        step: 'Start'
      });
    }

    function transitionEnd() {
      var runCallbacks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      var direction = arguments.length > 1 ? arguments[1] : undefined;
      var swiper = this;
      var params = swiper.params;
      swiper.animating = false;
      if (params.cssMode) return;
      swiper.setTransition(0);
      transitionEmit({
        swiper: swiper,
        runCallbacks: runCallbacks,
        direction: direction,
        step: 'End'
      });
    }

    var transition = {
      setTransition: setTransition,
      transitionStart: transitionStart,
      transitionEnd: transitionEnd
    };

    function slideTo() {
      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
      var speed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.params.speed;
      var runCallbacks = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
      var internal = arguments.length > 3 ? arguments[3] : undefined;
      var initial = arguments.length > 4 ? arguments[4] : undefined;

      if (typeof index !== 'number' && typeof index !== 'string') {
        throw new Error("The 'index' argument cannot have type other than 'number' or 'string'. [".concat(_typeof(index), "] given."));
      }

      if (typeof index === 'string') {
        /**
         * The `index` argument converted from `string` to `number`.
         * @type {number}
         */
        var indexAsNumber = parseInt(index, 10);
        /**
         * Determines whether the `index` argument is a valid `number`
         * after being converted from the `string` type.
         * @type {boolean}
         */

        var isValidNumber = isFinite(indexAsNumber);

        if (!isValidNumber) {
          throw new Error("The passed-in 'index' (string) couldn't be converted to 'number'. [".concat(index, "] given."));
        } // Knowing that the converted `index` is a valid number,
        // we can update the original argument's value.


        index = indexAsNumber;
      }

      var swiper = this;
      var slideIndex = index;
      if (slideIndex < 0) slideIndex = 0;
      var params = swiper.params,
          snapGrid = swiper.snapGrid,
          slidesGrid = swiper.slidesGrid,
          previousIndex = swiper.previousIndex,
          activeIndex = swiper.activeIndex,
          rtl = swiper.rtlTranslate,
          wrapperEl = swiper.wrapperEl,
          enabled = swiper.enabled;

      if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {
        return false;
      }

      var skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);
      var snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);
      if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;

      if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {
        swiper.emit('beforeSlideChangeStart');
      }

      var translate = -snapGrid[snapIndex]; // Update progress

      swiper.updateProgress(translate); // Normalize slideIndex

      if (params.normalizeSlideIndex) {
        for (var i = 0; i < slidesGrid.length; i += 1) {
          var normalizedTranslate = -Math.floor(translate * 100);
          var normalizedGrid = Math.floor(slidesGrid[i] * 100);
          var normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);

          if (typeof slidesGrid[i + 1] !== 'undefined') {
            if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {
              slideIndex = i;
            } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {
              slideIndex = i + 1;
            }
          } else if (normalizedTranslate >= normalizedGrid) {
            slideIndex = i;
          }
        }
      } // Directions locks


      if (swiper.initialized && slideIndex !== activeIndex) {
        if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {
          return false;
        }

        if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {
          if ((activeIndex || 0) !== slideIndex) return false;
        }
      }

      var direction;
      if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset'; // Update Index

      if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {
        swiper.updateActiveIndex(slideIndex); // Update Height

        if (params.autoHeight) {
          swiper.updateAutoHeight();
        }

        swiper.updateSlidesClasses();

        if (params.effect !== 'slide') {
          swiper.setTranslate(translate);
        }

        if (direction !== 'reset') {
          swiper.transitionStart(runCallbacks, direction);
          swiper.transitionEnd(runCallbacks, direction);
        }

        return false;
      }

      if (params.cssMode) {
        var isH = swiper.isHorizontal();
        var t = rtl ? translate : -translate;

        if (speed === 0) {
          var isVirtual = swiper.virtual && swiper.params.virtual.enabled;

          if (isVirtual) {
            swiper.wrapperEl.style.scrollSnapType = 'none';
            swiper._immediateVirtual = true;
          }

          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;

          if (isVirtual) {
            requestAnimationFrame(function () {
              swiper.wrapperEl.style.scrollSnapType = '';
              swiper._swiperImmediateVirtual = false;
            });
          }
        } else {
          var _wrapperEl$scrollTo2;

          if (!swiper.support.smoothScroll) {
            animateCSSModeScroll({
              swiper: swiper,
              targetPosition: t,
              side: isH ? 'left' : 'top'
            });
            return true;
          }

          wrapperEl.scrollTo((_wrapperEl$scrollTo2 = {}, _defineProperty(_wrapperEl$scrollTo2, isH ? 'left' : 'top', t), _defineProperty(_wrapperEl$scrollTo2, "behavior", 'smooth'), _wrapperEl$scrollTo2));
        }

        return true;
      }

      swiper.setTransition(speed);
      swiper.setTranslate(translate);
      swiper.updateActiveIndex(slideIndex);
      swiper.updateSlidesClasses();
      swiper.emit('beforeTransitionStart', speed, internal);
      swiper.transitionStart(runCallbacks, direction);

      if (speed === 0) {
        swiper.transitionEnd(runCallbacks, direction);
      } else if (!swiper.animating) {
        swiper.animating = true;

        if (!swiper.onSlideToWrapperTransitionEnd) {
          swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {
            if (!swiper || swiper.destroyed) return;
            if (e.target !== this) return;
            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);
            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);
            swiper.onSlideToWrapperTransitionEnd = null;
            delete swiper.onSlideToWrapperTransitionEnd;
            swiper.transitionEnd(runCallbacks, direction);
          };
        }

        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);
        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);
      }

      return true;
    }

    function slideToLoop() {
      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
      var speed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.params.speed;
      var runCallbacks = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
      var internal = arguments.length > 3 ? arguments[3] : undefined;
      var swiper = this;
      var newIndex = index;

      if (swiper.params.loop) {
        newIndex += swiper.loopedSlides;
      }

      return swiper.slideTo(newIndex, speed, runCallbacks, internal);
    }
    /* eslint no-unused-vars: "off" */


    function slideNext() {
      var speed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.params.speed;
      var runCallbacks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      var internal = arguments.length > 2 ? arguments[2] : undefined;
      var swiper = this;
      var animating = swiper.animating,
          enabled = swiper.enabled,
          params = swiper.params;
      if (!enabled) return swiper;
      var perGroup = params.slidesPerGroup;

      if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {
        perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);
      }

      var increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;

      if (params.loop) {
        if (animating && params.loopPreventsSlide) return false;
        swiper.loopFix(); // eslint-disable-next-line

        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;
      }

      if (params.rewind && swiper.isEnd) {
        return swiper.slideTo(0, speed, runCallbacks, internal);
      }

      return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);
    }
    /* eslint no-unused-vars: "off" */


    function slidePrev() {
      var speed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.params.speed;
      var runCallbacks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      var internal = arguments.length > 2 ? arguments[2] : undefined;
      var swiper = this;
      var params = swiper.params,
          animating = swiper.animating,
          snapGrid = swiper.snapGrid,
          slidesGrid = swiper.slidesGrid,
          rtlTranslate = swiper.rtlTranslate,
          enabled = swiper.enabled;
      if (!enabled) return swiper;

      if (params.loop) {
        if (animating && params.loopPreventsSlide) return false;
        swiper.loopFix(); // eslint-disable-next-line

        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;
      }

      var translate = rtlTranslate ? swiper.translate : -swiper.translate;

      function normalize(val) {
        if (val < 0) return -Math.floor(Math.abs(val));
        return Math.floor(val);
      }

      var normalizedTranslate = normalize(translate);
      var normalizedSnapGrid = snapGrid.map(function (val) {
        return normalize(val);
      });
      var prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];

      if (typeof prevSnap === 'undefined' && params.cssMode) {
        var prevSnapIndex;
        snapGrid.forEach(function (snap, snapIndex) {
          if (normalizedTranslate >= snap) {
            // prevSnap = snap;
            prevSnapIndex = snapIndex;
          }
        });

        if (typeof prevSnapIndex !== 'undefined') {
          prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];
        }
      }

      var prevIndex = 0;

      if (typeof prevSnap !== 'undefined') {
        prevIndex = slidesGrid.indexOf(prevSnap);
        if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;

        if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {
          prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;
          prevIndex = Math.max(prevIndex, 0);
        }
      }

      if (params.rewind && swiper.isBeginning) {
        return swiper.slideTo(swiper.slides.length - 1, speed, runCallbacks, internal);
      }

      return swiper.slideTo(prevIndex, speed, runCallbacks, internal);
    }
    /* eslint no-unused-vars: "off" */


    function slideReset() {
      var speed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.params.speed;
      var runCallbacks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      var internal = arguments.length > 2 ? arguments[2] : undefined;
      var swiper = this;
      return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);
    }
    /* eslint no-unused-vars: "off" */


    function slideToClosest() {
      var speed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.params.speed;
      var runCallbacks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      var internal = arguments.length > 2 ? arguments[2] : undefined;
      var threshold = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.5;
      var swiper = this;
      var index = swiper.activeIndex;
      var skip = Math.min(swiper.params.slidesPerGroupSkip, index);
      var snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);
      var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;

      if (translate >= swiper.snapGrid[snapIndex]) {
        // The current translate is on or after the current snap index, so the choice
        // is between the current index and the one after it.
        var currentSnap = swiper.snapGrid[snapIndex];
        var nextSnap = swiper.snapGrid[snapIndex + 1];

        if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {
          index += swiper.params.slidesPerGroup;
        }
      } else {
        // The current translate is before the current snap index, so the choice
        // is between the current index and the one before it.
        var prevSnap = swiper.snapGrid[snapIndex - 1];
        var _currentSnap = swiper.snapGrid[snapIndex];

        if (translate - prevSnap <= (_currentSnap - prevSnap) * threshold) {
          index -= swiper.params.slidesPerGroup;
        }
      }

      index = Math.max(index, 0);
      index = Math.min(index, swiper.slidesGrid.length - 1);
      return swiper.slideTo(index, speed, runCallbacks, internal);
    }

    function slideToClickedSlide() {
      var swiper = this;
      var params = swiper.params,
          $wrapperEl = swiper.$wrapperEl;
      var slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;
      var slideToIndex = swiper.clickedIndex;
      var realIndex;

      if (params.loop) {
        if (swiper.animating) return;
        realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);

        if (params.centeredSlides) {
          if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {
            swiper.loopFix();
            slideToIndex = $wrapperEl.children(".".concat(params.slideClass, "[data-swiper-slide-index=\"").concat(realIndex, "\"]:not(.").concat(params.slideDuplicateClass, ")")).eq(0).index();
            nextTick(function () {
              swiper.slideTo(slideToIndex);
            });
          } else {
            swiper.slideTo(slideToIndex);
          }
        } else if (slideToIndex > swiper.slides.length - slidesPerView) {
          swiper.loopFix();
          slideToIndex = $wrapperEl.children(".".concat(params.slideClass, "[data-swiper-slide-index=\"").concat(realIndex, "\"]:not(.").concat(params.slideDuplicateClass, ")")).eq(0).index();
          nextTick(function () {
            swiper.slideTo(slideToIndex);
          });
        } else {
          swiper.slideTo(slideToIndex);
        }
      } else {
        swiper.slideTo(slideToIndex);
      }
    }

    var slide = {
      slideTo: slideTo,
      slideToLoop: slideToLoop,
      slideNext: slideNext,
      slidePrev: slidePrev,
      slideReset: slideReset,
      slideToClosest: slideToClosest,
      slideToClickedSlide: slideToClickedSlide
    };

    function loopCreate() {
      var swiper = this;
      var document = getDocument();
      var params = swiper.params,
          $wrapperEl = swiper.$wrapperEl; // Remove duplicated slides

      var $selector = $wrapperEl.children().length > 0 ? $($wrapperEl.children()[0].parentNode) : $wrapperEl;
      $selector.children(".".concat(params.slideClass, ".").concat(params.slideDuplicateClass)).remove();
      var slides = $selector.children(".".concat(params.slideClass));

      if (params.loopFillGroupWithBlank) {
        var blankSlidesNum = params.slidesPerGroup - slides.length % params.slidesPerGroup;

        if (blankSlidesNum !== params.slidesPerGroup) {
          for (var i = 0; i < blankSlidesNum; i += 1) {
            var blankNode = $(document.createElement('div')).addClass("".concat(params.slideClass, " ").concat(params.slideBlankClass));
            $selector.append(blankNode);
          }

          slides = $selector.children(".".concat(params.slideClass));
        }
      }

      if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;
      swiper.loopedSlides = Math.ceil(parseFloat(params.loopedSlides || params.slidesPerView, 10));
      swiper.loopedSlides += params.loopAdditionalSlides;

      if (swiper.loopedSlides > slides.length) {
        swiper.loopedSlides = slides.length;
      }

      var prependSlides = [];
      var appendSlides = [];
      slides.each(function (el, index) {
        var slide = $(el);

        if (index < swiper.loopedSlides) {
          appendSlides.push(el);
        }

        if (index < slides.length && index >= slides.length - swiper.loopedSlides) {
          prependSlides.push(el);
        }

        slide.attr('data-swiper-slide-index', index);
      });

      for (var _i2 = 0; _i2 < appendSlides.length; _i2 += 1) {
        $selector.append($(appendSlides[_i2].cloneNode(true)).addClass(params.slideDuplicateClass));
      }

      for (var _i3 = prependSlides.length - 1; _i3 >= 0; _i3 -= 1) {
        $selector.prepend($(prependSlides[_i3].cloneNode(true)).addClass(params.slideDuplicateClass));
      }
    }

    function loopFix() {
      var swiper = this;
      swiper.emit('beforeLoopFix');
      var activeIndex = swiper.activeIndex,
          slides = swiper.slides,
          loopedSlides = swiper.loopedSlides,
          allowSlidePrev = swiper.allowSlidePrev,
          allowSlideNext = swiper.allowSlideNext,
          snapGrid = swiper.snapGrid,
          rtl = swiper.rtlTranslate;
      var newIndex;
      swiper.allowSlidePrev = true;
      swiper.allowSlideNext = true;
      var snapTranslate = -snapGrid[activeIndex];
      var diff = snapTranslate - swiper.getTranslate(); // Fix For Negative Oversliding

      if (activeIndex < loopedSlides) {
        newIndex = slides.length - loopedSlides * 3 + activeIndex;
        newIndex += loopedSlides;
        var slideChanged = swiper.slideTo(newIndex, 0, false, true);

        if (slideChanged && diff !== 0) {
          swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);
        }
      } else if (activeIndex >= slides.length - loopedSlides) {
        // Fix For Positive Oversliding
        newIndex = -slides.length + activeIndex + loopedSlides;
        newIndex += loopedSlides;

        var _slideChanged = swiper.slideTo(newIndex, 0, false, true);

        if (_slideChanged && diff !== 0) {
          swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);
        }
      }

      swiper.allowSlidePrev = allowSlidePrev;
      swiper.allowSlideNext = allowSlideNext;
      swiper.emit('loopFix');
    }

    function loopDestroy() {
      var swiper = this;
      var $wrapperEl = swiper.$wrapperEl,
          params = swiper.params,
          slides = swiper.slides;
      $wrapperEl.children(".".concat(params.slideClass, ".").concat(params.slideDuplicateClass, ",.").concat(params.slideClass, ".").concat(params.slideBlankClass)).remove();
      slides.removeAttr('data-swiper-slide-index');
    }

    var loop = {
      loopCreate: loopCreate,
      loopFix: loopFix,
      loopDestroy: loopDestroy
    };

    function setGrabCursor(moving) {
      var swiper = this;
      if (swiper.support.touch || !swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;
      var el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;
      el.style.cursor = 'move';
      el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';
      el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';
      el.style.cursor = moving ? 'grabbing' : 'grab';
    }

    function unsetGrabCursor() {
      var swiper = this;

      if (swiper.support.touch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {
        return;
      }

      swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';
    }

    var grabCursor = {
      setGrabCursor: setGrabCursor,
      unsetGrabCursor: unsetGrabCursor
    };

    function closestElement(selector) {
      var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this;

      function __closestFrom(el) {
        if (!el || el === getDocument() || el === getWindow()) return null;
        if (el.assignedSlot) el = el.assignedSlot;
        var found = el.closest(selector);
        return found || __closestFrom(el.getRootNode().host);
      }

      return __closestFrom(base);
    }

    function onTouchStart(event) {
      var swiper = this;
      var document = getDocument();
      var window = getWindow();
      var data = swiper.touchEventsData;
      var params = swiper.params,
          touches = swiper.touches,
          enabled = swiper.enabled;
      if (!enabled) return;

      if (swiper.animating && params.preventInteractionOnTransition) {
        return;
      }

      if (!swiper.animating && params.cssMode && params.loop) {
        swiper.loopFix();
      }

      var e = event;
      if (e.originalEvent) e = e.originalEvent;
      var $targetEl = $(e.target);

      if (params.touchEventsTarget === 'wrapper') {
        if (!$targetEl.closest(swiper.wrapperEl).length) return;
      }

      data.isTouchEvent = e.type === 'touchstart';
      if (!data.isTouchEvent && 'which' in e && e.which === 3) return;
      if (!data.isTouchEvent && 'button' in e && e.button > 0) return;
      if (data.isTouched && data.isMoved) return; // change target el for shadow root component

      var swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';

      if (swipingClassHasValue && e.target && e.target.shadowRoot && event.path && event.path[0]) {
        $targetEl = $(event.path[0]);
      }

      var noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : ".".concat(params.noSwipingClass);
      var isTargetShadow = !!(e.target && e.target.shadowRoot); // use closestElement for shadow root element to get the actual closest for nested shadow root element

      if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, e.target) : $targetEl.closest(noSwipingSelector)[0])) {
        swiper.allowClick = true;
        return;
      }

      if (params.swipeHandler) {
        if (!$targetEl.closest(params.swipeHandler)[0]) return;
      }

      touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;
      touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;
      var startX = touches.currentX;
      var startY = touches.currentY; // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore

      var edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;
      var edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;

      if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {
        if (edgeSwipeDetection === 'prevent') {
          event.preventDefault();
        } else {
          return;
        }
      }

      Object.assign(data, {
        isTouched: true,
        isMoved: false,
        allowTouchCallbacks: true,
        isScrolling: undefined,
        startMoving: undefined
      });
      touches.startX = startX;
      touches.startY = startY;
      data.touchStartTime = now();
      swiper.allowClick = true;
      swiper.updateSize();
      swiper.swipeDirection = undefined;
      if (params.threshold > 0) data.allowThresholdMove = false;

      if (e.type !== 'touchstart') {
        var preventDefault = true;
        if ($targetEl.is(data.focusableElements)) preventDefault = false;

        if (document.activeElement && $(document.activeElement).is(data.focusableElements) && document.activeElement !== $targetEl[0]) {
          document.activeElement.blur();
        }

        var shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;

        if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !$targetEl[0].isContentEditable) {
          e.preventDefault();
        }
      }

      swiper.emit('touchStart', e);
    }

    function onTouchMove(event) {
      var document = getDocument();
      var swiper = this;
      var data = swiper.touchEventsData;
      var params = swiper.params,
          touches = swiper.touches,
          rtl = swiper.rtlTranslate,
          enabled = swiper.enabled;
      if (!enabled) return;
      var e = event;
      if (e.originalEvent) e = e.originalEvent;

      if (!data.isTouched) {
        if (data.startMoving && data.isScrolling) {
          swiper.emit('touchMoveOpposite', e);
        }

        return;
      }

      if (data.isTouchEvent && e.type !== 'touchmove') return;
      var targetTouch = e.type === 'touchmove' && e.targetTouches && (e.targetTouches[0] || e.changedTouches[0]);
      var pageX = e.type === 'touchmove' ? targetTouch.pageX : e.pageX;
      var pageY = e.type === 'touchmove' ? targetTouch.pageY : e.pageY;

      if (e.preventedByNestedSwiper) {
        touches.startX = pageX;
        touches.startY = pageY;
        return;
      }

      if (!swiper.allowTouchMove) {
        // isMoved = true;
        swiper.allowClick = false;

        if (data.isTouched) {
          Object.assign(touches, {
            startX: pageX,
            startY: pageY,
            currentX: pageX,
            currentY: pageY
          });
          data.touchStartTime = now();
        }

        return;
      }

      if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {
        if (swiper.isVertical()) {
          // Vertical
          if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {
            data.isTouched = false;
            data.isMoved = false;
            return;
          }
        } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {
          return;
        }
      }

      if (data.isTouchEvent && document.activeElement) {
        if (e.target === document.activeElement && $(e.target).is(data.focusableElements)) {
          data.isMoved = true;
          swiper.allowClick = false;
          return;
        }
      }

      if (data.allowTouchCallbacks) {
        swiper.emit('touchMove', e);
      }

      if (e.targetTouches && e.targetTouches.length > 1) return;
      touches.currentX = pageX;
      touches.currentY = pageY;
      var diffX = touches.currentX - touches.startX;
      var diffY = touches.currentY - touches.startY;
      if (swiper.params.threshold && Math.sqrt(Math.pow(diffX, 2) + Math.pow(diffY, 2)) < swiper.params.threshold) return;

      if (typeof data.isScrolling === 'undefined') {
        var touchAngle;

        if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {
          data.isScrolling = false;
        } else {
          // eslint-disable-next-line
          if (diffX * diffX + diffY * diffY >= 25) {
            touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;
            data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;
          }
        }
      }

      if (data.isScrolling) {
        swiper.emit('touchMoveOpposite', e);
      }

      if (typeof data.startMoving === 'undefined') {
        if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {
          data.startMoving = true;
        }
      }

      if (data.isScrolling) {
        data.isTouched = false;
        return;
      }

      if (!data.startMoving) {
        return;
      }

      swiper.allowClick = false;

      if (!params.cssMode && e.cancelable) {
        e.preventDefault();
      }

      if (params.touchMoveStopPropagation && !params.nested) {
        e.stopPropagation();
      }

      if (!data.isMoved) {
        if (params.loop && !params.cssMode) {
          swiper.loopFix();
        }

        data.startTranslate = swiper.getTranslate();
        swiper.setTransition(0);

        if (swiper.animating) {
          swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');
        }

        data.allowMomentumBounce = false; // Grab Cursor

        if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {
          swiper.setGrabCursor(true);
        }

        swiper.emit('sliderFirstMove', e);
      }

      swiper.emit('sliderMove', e);
      data.isMoved = true;
      var diff = swiper.isHorizontal() ? diffX : diffY;
      touches.diff = diff;
      diff *= params.touchRatio;
      if (rtl) diff = -diff;
      swiper.swipeDirection = diff > 0 ? 'prev' : 'next';
      data.currentTranslate = diff + data.startTranslate;
      var disableParentSwiper = true;
      var resistanceRatio = params.resistanceRatio;

      if (params.touchReleaseOnEdges) {
        resistanceRatio = 0;
      }

      if (diff > 0 && data.currentTranslate > swiper.minTranslate()) {
        disableParentSwiper = false;
        if (params.resistance) data.currentTranslate = swiper.minTranslate() - 1 + Math.pow(-swiper.minTranslate() + data.startTranslate + diff, resistanceRatio);
      } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {
        disableParentSwiper = false;
        if (params.resistance) data.currentTranslate = swiper.maxTranslate() + 1 - Math.pow(swiper.maxTranslate() - data.startTranslate - diff, resistanceRatio);
      }

      if (disableParentSwiper) {
        e.preventedByNestedSwiper = true;
      } // Directions locks


      if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {
        data.currentTranslate = data.startTranslate;
      }

      if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {
        data.currentTranslate = data.startTranslate;
      }

      if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {
        data.currentTranslate = data.startTranslate;
      } // Threshold


      if (params.threshold > 0) {
        if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {
          if (!data.allowThresholdMove) {
            data.allowThresholdMove = true;
            touches.startX = touches.currentX;
            touches.startY = touches.currentY;
            data.currentTranslate = data.startTranslate;
            touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;
            return;
          }
        } else {
          data.currentTranslate = data.startTranslate;
          return;
        }
      }

      if (!params.followFinger || params.cssMode) return; // Update active index in free mode

      if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {
        swiper.updateActiveIndex();
        swiper.updateSlidesClasses();
      }

      if (swiper.params.freeMode && params.freeMode.enabled && swiper.freeMode) {
        swiper.freeMode.onTouchMove();
      } // Update progress


      swiper.updateProgress(data.currentTranslate); // Update translate

      swiper.setTranslate(data.currentTranslate);
    }

    function onTouchEnd(event) {
      var swiper = this;
      var data = swiper.touchEventsData;
      var params = swiper.params,
          touches = swiper.touches,
          rtl = swiper.rtlTranslate,
          slidesGrid = swiper.slidesGrid,
          enabled = swiper.enabled;
      if (!enabled) return;
      var e = event;
      if (e.originalEvent) e = e.originalEvent;

      if (data.allowTouchCallbacks) {
        swiper.emit('touchEnd', e);
      }

      data.allowTouchCallbacks = false;

      if (!data.isTouched) {
        if (data.isMoved && params.grabCursor) {
          swiper.setGrabCursor(false);
        }

        data.isMoved = false;
        data.startMoving = false;
        return;
      } // Return Grab Cursor


      if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {
        swiper.setGrabCursor(false);
      } // Time diff


      var touchEndTime = now();
      var timeDiff = touchEndTime - data.touchStartTime; // Tap, doubleTap, Click

      if (swiper.allowClick) {
        var pathTree = e.path || e.composedPath && e.composedPath();
        swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);
        swiper.emit('tap click', e);

        if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {
          swiper.emit('doubleTap doubleClick', e);
        }
      }

      data.lastClickTime = now();
      nextTick(function () {
        if (!swiper.destroyed) swiper.allowClick = true;
      });

      if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {
        data.isTouched = false;
        data.isMoved = false;
        data.startMoving = false;
        return;
      }

      data.isTouched = false;
      data.isMoved = false;
      data.startMoving = false;
      var currentPos;

      if (params.followFinger) {
        currentPos = rtl ? swiper.translate : -swiper.translate;
      } else {
        currentPos = -data.currentTranslate;
      }

      if (params.cssMode) {
        return;
      }

      if (swiper.params.freeMode && params.freeMode.enabled) {
        swiper.freeMode.onTouchEnd({
          currentPos: currentPos
        });
        return;
      } // Find current slide


      var stopIndex = 0;
      var groupSize = swiper.slidesSizesGrid[0];

      for (var i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {
        var _increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;

        if (typeof slidesGrid[i + _increment] !== 'undefined') {
          if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + _increment]) {
            stopIndex = i;
            groupSize = slidesGrid[i + _increment] - slidesGrid[i];
          }
        } else if (currentPos >= slidesGrid[i]) {
          stopIndex = i;
          groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];
        }
      } // Find current slide size


      var ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;
      var increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;

      if (timeDiff > params.longSwipesMs) {
        // Long touches
        if (!params.longSwipes) {
          swiper.slideTo(swiper.activeIndex);
          return;
        }

        if (swiper.swipeDirection === 'next') {
          if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + increment);else swiper.slideTo(stopIndex);
        }

        if (swiper.swipeDirection === 'prev') {
          if (ratio > 1 - params.longSwipesRatio) swiper.slideTo(stopIndex + increment);else swiper.slideTo(stopIndex);
        }
      } else {
        // Short swipes
        if (!params.shortSwipes) {
          swiper.slideTo(swiper.activeIndex);
          return;
        }

        var isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);

        if (!isNavButtonTarget) {
          if (swiper.swipeDirection === 'next') {
            swiper.slideTo(stopIndex + increment);
          }

          if (swiper.swipeDirection === 'prev') {
            swiper.slideTo(stopIndex);
          }
        } else if (e.target === swiper.navigation.nextEl) {
          swiper.slideTo(stopIndex + increment);
        } else {
          swiper.slideTo(stopIndex);
        }
      }
    }

    function onResize() {
      var swiper = this;
      var params = swiper.params,
          el = swiper.el;
      if (el && el.offsetWidth === 0) return; // Breakpoints

      if (params.breakpoints) {
        swiper.setBreakpoint();
      } // Save locks


      var allowSlideNext = swiper.allowSlideNext,
          allowSlidePrev = swiper.allowSlidePrev,
          snapGrid = swiper.snapGrid; // Disable locks on resize

      swiper.allowSlideNext = true;
      swiper.allowSlidePrev = true;
      swiper.updateSize();
      swiper.updateSlides();
      swiper.updateSlidesClasses();

      if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides) {
        swiper.slideTo(swiper.slides.length - 1, 0, false, true);
      } else {
        swiper.slideTo(swiper.activeIndex, 0, false, true);
      }

      if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {
        swiper.autoplay.run();
      } // Return locks after resize


      swiper.allowSlidePrev = allowSlidePrev;
      swiper.allowSlideNext = allowSlideNext;

      if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {
        swiper.checkOverflow();
      }
    }

    function onClick(e) {
      var swiper = this;
      if (!swiper.enabled) return;

      if (!swiper.allowClick) {
        if (swiper.params.preventClicks) e.preventDefault();

        if (swiper.params.preventClicksPropagation && swiper.animating) {
          e.stopPropagation();
          e.stopImmediatePropagation();
        }
      }
    }

    function onScroll() {
      var swiper = this;
      var wrapperEl = swiper.wrapperEl,
          rtlTranslate = swiper.rtlTranslate,
          enabled = swiper.enabled;
      if (!enabled) return;
      swiper.previousTranslate = swiper.translate;

      if (swiper.isHorizontal()) {
        swiper.translate = -wrapperEl.scrollLeft;
      } else {
        swiper.translate = -wrapperEl.scrollTop;
      } // eslint-disable-next-line


      if (swiper.translate === -0) swiper.translate = 0;
      swiper.updateActiveIndex();
      swiper.updateSlidesClasses();
      var newProgress;
      var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();

      if (translatesDiff === 0) {
        newProgress = 0;
      } else {
        newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;
      }

      if (newProgress !== swiper.progress) {
        swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);
      }

      swiper.emit('setTranslate', swiper.translate, false);
    }

    var dummyEventAttached = false;

    function dummyEventListener() {}

    var events = function events(swiper, method) {
      var document = getDocument();
      var params = swiper.params,
          touchEvents = swiper.touchEvents,
          el = swiper.el,
          wrapperEl = swiper.wrapperEl,
          device = swiper.device,
          support = swiper.support;
      var capture = !!params.nested;
      var domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';
      var swiperMethod = method; // Touch Events

      if (!support.touch) {
        el[domMethod](touchEvents.start, swiper.onTouchStart, false);
        document[domMethod](touchEvents.move, swiper.onTouchMove, capture);
        document[domMethod](touchEvents.end, swiper.onTouchEnd, false);
      } else {
        var passiveListener = touchEvents.start === 'touchstart' && support.passiveListener && params.passiveListeners ? {
          passive: true,
          capture: false
        } : false;
        el[domMethod](touchEvents.start, swiper.onTouchStart, passiveListener);
        el[domMethod](touchEvents.move, swiper.onTouchMove, support.passiveListener ? {
          passive: false,
          capture: capture
        } : capture);
        el[domMethod](touchEvents.end, swiper.onTouchEnd, passiveListener);

        if (touchEvents.cancel) {
          el[domMethod](touchEvents.cancel, swiper.onTouchEnd, passiveListener);
        }
      } // Prevent Links Clicks


      if (params.preventClicks || params.preventClicksPropagation) {
        el[domMethod]('click', swiper.onClick, true);
      }

      if (params.cssMode) {
        wrapperEl[domMethod]('scroll', swiper.onScroll);
      } // Resize handler


      if (params.updateOnWindowResize) {
        swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);
      } else {
        swiper[swiperMethod]('observerUpdate', onResize, true);
      }
    };

    function attachEvents() {
      var swiper = this;
      var document = getDocument();
      var params = swiper.params,
          support = swiper.support;
      swiper.onTouchStart = onTouchStart.bind(swiper);
      swiper.onTouchMove = onTouchMove.bind(swiper);
      swiper.onTouchEnd = onTouchEnd.bind(swiper);

      if (params.cssMode) {
        swiper.onScroll = onScroll.bind(swiper);
      }

      swiper.onClick = onClick.bind(swiper);

      if (support.touch && !dummyEventAttached) {
        document.addEventListener('touchstart', dummyEventListener);
        dummyEventAttached = true;
      }

      events(swiper, 'on');
    }

    function detachEvents() {
      var swiper = this;
      events(swiper, 'off');
    }

    var events$1 = {
      attachEvents: attachEvents,
      detachEvents: detachEvents
    };

    var isGridEnabled = function isGridEnabled(swiper, params) {
      return swiper.grid && params.grid && params.grid.rows > 1;
    };

    function setBreakpoint() {
      var swiper = this;
      var activeIndex = swiper.activeIndex,
          initialized = swiper.initialized,
          _swiper$loopedSlides = swiper.loopedSlides,
          loopedSlides = _swiper$loopedSlides === void 0 ? 0 : _swiper$loopedSlides,
          params = swiper.params,
          $el = swiper.$el;
      var breakpoints = params.breakpoints;
      if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return; // Get breakpoint for window width and update parameters

      var breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);
      if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;
      var breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;
      var breakpointParams = breakpointOnlyParams || swiper.originalParams;
      var wasMultiRow = isGridEnabled(swiper, params);
      var isMultiRow = isGridEnabled(swiper, breakpointParams);
      var wasEnabled = params.enabled;

      if (wasMultiRow && !isMultiRow) {
        $el.removeClass("".concat(params.containerModifierClass, "grid ").concat(params.containerModifierClass, "grid-column"));
        swiper.emitContainerClasses();
      } else if (!wasMultiRow && isMultiRow) {
        $el.addClass("".concat(params.containerModifierClass, "grid"));

        if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {
          $el.addClass("".concat(params.containerModifierClass, "grid-column"));
        }

        swiper.emitContainerClasses();
      }

      var directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;
      var needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);

      if (directionChanged && initialized) {
        swiper.changeDirection();
      }

      extend(swiper.params, breakpointParams);
      var isEnabled = swiper.params.enabled;
      Object.assign(swiper, {
        allowTouchMove: swiper.params.allowTouchMove,
        allowSlideNext: swiper.params.allowSlideNext,
        allowSlidePrev: swiper.params.allowSlidePrev
      });

      if (wasEnabled && !isEnabled) {
        swiper.disable();
      } else if (!wasEnabled && isEnabled) {
        swiper.enable();
      }

      swiper.currentBreakpoint = breakpoint;
      swiper.emit('_beforeBreakpoint', breakpointParams);

      if (needsReLoop && initialized) {
        swiper.loopDestroy();
        swiper.loopCreate();
        swiper.updateSlides();
        swiper.slideTo(activeIndex - loopedSlides + swiper.loopedSlides, 0, false);
      }

      swiper.emit('breakpoint', breakpointParams);
    }

    function getBreakpoint(breakpoints) {
      var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'window';
      var containerEl = arguments.length > 2 ? arguments[2] : undefined;
      if (!breakpoints || base === 'container' && !containerEl) return undefined;
      var breakpoint = false;
      var window = getWindow();
      var currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;
      var points = Object.keys(breakpoints).map(function (point) {
        if (typeof point === 'string' && point.indexOf('@') === 0) {
          var minRatio = parseFloat(point.substr(1));
          var value = currentHeight * minRatio;
          return {
            value: value,
            point: point
          };
        }

        return {
          value: point,
          point: point
        };
      });
      points.sort(function (a, b) {
        return parseInt(a.value, 10) - parseInt(b.value, 10);
      });

      for (var i = 0; i < points.length; i += 1) {
        var _points$i = points[i],
            point = _points$i.point,
            value = _points$i.value;

        if (base === 'window') {
          if (window.matchMedia("(min-width: ".concat(value, "px)")).matches) {
            breakpoint = point;
          }
        } else if (value <= containerEl.clientWidth) {
          breakpoint = point;
        }
      }

      return breakpoint || 'max';
    }

    var breakpoints = {
      setBreakpoint: setBreakpoint,
      getBreakpoint: getBreakpoint
    };

    function prepareClasses(entries, prefix) {
      var resultClasses = [];
      entries.forEach(function (item) {
        if (_typeof(item) === 'object') {
          Object.keys(item).forEach(function (classNames) {
            if (item[classNames]) {
              resultClasses.push(prefix + classNames);
            }
          });
        } else if (typeof item === 'string') {
          resultClasses.push(prefix + item);
        }
      });
      return resultClasses;
    }

    function addClasses() {
      var swiper = this;
      var classNames = swiper.classNames,
          params = swiper.params,
          rtl = swiper.rtl,
          $el = swiper.$el,
          device = swiper.device,
          support = swiper.support; // prettier-ignore

      var suffixes = prepareClasses(['initialized', params.direction, {
        'pointer-events': !support.touch
      }, {
        'free-mode': swiper.params.freeMode && params.freeMode.enabled
      }, {
        'autoheight': params.autoHeight
      }, {
        'rtl': rtl
      }, {
        'grid': params.grid && params.grid.rows > 1
      }, {
        'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'
      }, {
        'android': device.android
      }, {
        'ios': device.ios
      }, {
        'css-mode': params.cssMode
      }, {
        'centered': params.cssMode && params.centeredSlides
      }], params.containerModifierClass);
      classNames.push.apply(classNames, _toConsumableArray(suffixes));
      $el.addClass(_toConsumableArray(classNames).join(' '));
      swiper.emitContainerClasses();
    }

    function removeClasses() {
      var swiper = this;
      var $el = swiper.$el,
          classNames = swiper.classNames;
      $el.removeClass(classNames.join(' '));
      swiper.emitContainerClasses();
    }

    var classes = {
      addClasses: addClasses,
      removeClasses: removeClasses
    };

    function loadImage(imageEl, src, srcset, sizes, checkForComplete, callback) {
      var window = getWindow();
      var image;

      function onReady() {
        if (callback) callback();
      }

      var isPicture = $(imageEl).parent('picture')[0];

      if (!isPicture && (!imageEl.complete || !checkForComplete)) {
        if (src) {
          image = new window.Image();
          image.onload = onReady;
          image.onerror = onReady;

          if (sizes) {
            image.sizes = sizes;
          }

          if (srcset) {
            image.srcset = srcset;
          }

          if (src) {
            image.src = src;
          }
        } else {
          onReady();
        }
      } else {
        // image already loaded...
        onReady();
      }
    }

    function preloadImages() {
      var swiper = this;
      swiper.imagesToLoad = swiper.$el.find('img');

      function onReady() {
        if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;
        if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;

        if (swiper.imagesLoaded === swiper.imagesToLoad.length) {
          if (swiper.params.updateOnImagesReady) swiper.update();
          swiper.emit('imagesReady');
        }
      }

      for (var i = 0; i < swiper.imagesToLoad.length; i += 1) {
        var imageEl = swiper.imagesToLoad[i];
        swiper.loadImage(imageEl, imageEl.currentSrc || imageEl.getAttribute('src'), imageEl.srcset || imageEl.getAttribute('srcset'), imageEl.sizes || imageEl.getAttribute('sizes'), true, onReady);
      }
    }

    var images = {
      loadImage: loadImage,
      preloadImages: preloadImages
    };

    function checkOverflow() {
      var swiper = this;
      var wasLocked = swiper.isLocked,
          params = swiper.params;
      var slidesOffsetBefore = params.slidesOffsetBefore;

      if (slidesOffsetBefore) {
        var lastSlideIndex = swiper.slides.length - 1;
        var lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;
        swiper.isLocked = swiper.size > lastSlideRightEdge;
      } else {
        swiper.isLocked = swiper.snapGrid.length === 1;
      }

      if (params.allowSlideNext === true) {
        swiper.allowSlideNext = !swiper.isLocked;
      }

      if (params.allowSlidePrev === true) {
        swiper.allowSlidePrev = !swiper.isLocked;
      }

      if (wasLocked && wasLocked !== swiper.isLocked) {
        swiper.isEnd = false;
      }

      if (wasLocked !== swiper.isLocked) {
        swiper.emit(swiper.isLocked ? 'lock' : 'unlock');
      }
    }

    var checkOverflow$1 = {
      checkOverflow: checkOverflow
    };
    var defaults = {
      init: true,
      direction: 'horizontal',
      touchEventsTarget: 'wrapper',
      initialSlide: 0,
      speed: 300,
      cssMode: false,
      updateOnWindowResize: true,
      resizeObserver: true,
      nested: false,
      createElements: false,
      enabled: true,
      focusableElements: 'input, select, option, textarea, button, video, label',
      // Overrides
      width: null,
      height: null,
      //
      preventInteractionOnTransition: false,
      // ssr
      userAgent: null,
      url: null,
      // To support iOS's swipe-to-go-back gesture (when being used in-app).
      edgeSwipeDetection: false,
      edgeSwipeThreshold: 20,
      // Autoheight
      autoHeight: false,
      // Set wrapper width
      setWrapperSize: false,
      // Virtual Translate
      virtualTranslate: false,
      // Effects
      effect: 'slide',
      // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'
      // Breakpoints
      breakpoints: undefined,
      breakpointsBase: 'window',
      // Slides grid
      spaceBetween: 0,
      slidesPerView: 1,
      slidesPerGroup: 1,
      slidesPerGroupSkip: 0,
      slidesPerGroupAuto: false,
      centeredSlides: false,
      centeredSlidesBounds: false,
      slidesOffsetBefore: 0,
      // in px
      slidesOffsetAfter: 0,
      // in px
      normalizeSlideIndex: true,
      centerInsufficientSlides: false,
      // Disable swiper and hide navigation when container not overflow
      watchOverflow: true,
      // Round length
      roundLengths: false,
      // Touches
      touchRatio: 1,
      touchAngle: 45,
      simulateTouch: true,
      shortSwipes: true,
      longSwipes: true,
      longSwipesRatio: 0.5,
      longSwipesMs: 300,
      followFinger: true,
      allowTouchMove: true,
      threshold: 0,
      touchMoveStopPropagation: false,
      touchStartPreventDefault: true,
      touchStartForcePreventDefault: false,
      touchReleaseOnEdges: false,
      // Unique Navigation Elements
      uniqueNavElements: true,
      // Resistance
      resistance: true,
      resistanceRatio: 0.85,
      // Progress
      watchSlidesProgress: false,
      // Cursor
      grabCursor: false,
      // Clicks
      preventClicks: true,
      preventClicksPropagation: true,
      slideToClickedSlide: false,
      // Images
      preloadImages: true,
      updateOnImagesReady: true,
      // loop
      loop: false,
      loopAdditionalSlides: 0,
      loopedSlides: null,
      loopFillGroupWithBlank: false,
      loopPreventsSlide: true,
      // rewind
      rewind: false,
      // Swiping/no swiping
      allowSlidePrev: true,
      allowSlideNext: true,
      swipeHandler: null,
      // '.swipe-handler',
      noSwiping: true,
      noSwipingClass: 'swiper-no-swiping',
      noSwipingSelector: null,
      // Passive Listeners
      passiveListeners: true,
      // NS
      containerModifierClass: 'swiper-',
      // NEW
      slideClass: 'swiper-slide',
      slideBlankClass: 'swiper-slide-invisible-blank',
      slideActiveClass: 'swiper-slide-active',
      slideDuplicateActiveClass: 'swiper-slide-duplicate-active',
      slideVisibleClass: 'swiper-slide-visible',
      slideDuplicateClass: 'swiper-slide-duplicate',
      slideNextClass: 'swiper-slide-next',
      slideDuplicateNextClass: 'swiper-slide-duplicate-next',
      slidePrevClass: 'swiper-slide-prev',
      slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',
      wrapperClass: 'swiper-wrapper',
      // Callbacks
      runCallbacksOnInit: true,
      // Internals
      _emitClasses: false
    };

    function moduleExtendParams(params, allModulesParams) {
      return function extendParams() {
        var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var moduleParamName = Object.keys(obj)[0];
        var moduleParams = obj[moduleParamName];

        if (_typeof(moduleParams) !== 'object' || moduleParams === null) {
          extend(allModulesParams, obj);
          return;
        }

        if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {
          params[moduleParamName] = {
            auto: true
          };
        }

        if (!(moduleParamName in params && 'enabled' in moduleParams)) {
          extend(allModulesParams, obj);
          return;
        }

        if (params[moduleParamName] === true) {
          params[moduleParamName] = {
            enabled: true
          };
        }

        if (_typeof(params[moduleParamName]) === 'object' && !('enabled' in params[moduleParamName])) {
          params[moduleParamName].enabled = true;
        }

        if (!params[moduleParamName]) params[moduleParamName] = {
          enabled: false
        };
        extend(allModulesParams, obj);
      };
    }
    /* eslint no-param-reassign: "off" */


    var prototypes = {
      eventsEmitter: eventsEmitter,
      update: update,
      translate: translate,
      transition: transition,
      slide: slide,
      loop: loop,
      grabCursor: grabCursor,
      events: events$1,
      breakpoints: breakpoints,
      checkOverflow: checkOverflow$1,
      classes: classes,
      images: images
    };
    var extendedDefaults = {};

    var Swiper = /*#__PURE__*/function () {
      function Swiper() {
        _classCallCheck(this, Swiper);

        var el;
        var params;

        for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {
          args[_key10] = arguments[_key10];
        }

        if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {
          params = args[0];
        } else {
          el = args[0];
          params = args[1];
        }

        if (!params) params = {};
        params = extend({}, params);
        if (el && !params.el) params.el = el;

        if (params.el && $(params.el).length > 1) {
          var swipers = [];
          $(params.el).each(function (containerEl) {
            var newParams = extend({}, params, {
              el: containerEl
            });
            swipers.push(new Swiper(newParams));
          });
          return swipers;
        } // Swiper Instance


        var swiper = this;
        swiper.__swiper__ = true;
        swiper.support = getSupport();
        swiper.device = getDevice({
          userAgent: params.userAgent
        });
        swiper.browser = getBrowser();
        swiper.eventsListeners = {};
        swiper.eventsAnyListeners = [];
        swiper.modules = _toConsumableArray(swiper.__modules__);

        if (params.modules && Array.isArray(params.modules)) {
          var _swiper$modules;

          (_swiper$modules = swiper.modules).push.apply(_swiper$modules, _toConsumableArray(params.modules));
        }

        var allModulesParams = {};
        swiper.modules.forEach(function (mod) {
          mod({
            swiper: swiper,
            extendParams: moduleExtendParams(params, allModulesParams),
            on: swiper.on.bind(swiper),
            once: swiper.once.bind(swiper),
            off: swiper.off.bind(swiper),
            emit: swiper.emit.bind(swiper)
          });
        }); // Extend defaults with modules params

        var swiperParams = extend({}, defaults, allModulesParams); // Extend defaults with passed params

        swiper.params = extend({}, swiperParams, extendedDefaults, params);
        swiper.originalParams = extend({}, swiper.params);
        swiper.passedParams = extend({}, params); // add event listeners

        if (swiper.params && swiper.params.on) {
          Object.keys(swiper.params.on).forEach(function (eventName) {
            swiper.on(eventName, swiper.params.on[eventName]);
          });
        }

        if (swiper.params && swiper.params.onAny) {
          swiper.onAny(swiper.params.onAny);
        } // Save Dom lib


        swiper.$ = $; // Extend Swiper

        Object.assign(swiper, {
          enabled: swiper.params.enabled,
          el: el,
          // Classes
          classNames: [],
          // Slides
          slides: $(),
          slidesGrid: [],
          snapGrid: [],
          slidesSizesGrid: [],
          // isDirection
          isHorizontal: function isHorizontal() {
            return swiper.params.direction === 'horizontal';
          },
          isVertical: function isVertical() {
            return swiper.params.direction === 'vertical';
          },
          // Indexes
          activeIndex: 0,
          realIndex: 0,
          //
          isBeginning: true,
          isEnd: false,
          // Props
          translate: 0,
          previousTranslate: 0,
          progress: 0,
          velocity: 0,
          animating: false,
          // Locks
          allowSlideNext: swiper.params.allowSlideNext,
          allowSlidePrev: swiper.params.allowSlidePrev,
          // Touch Events
          touchEvents: function touchEvents() {
            var touch = ['touchstart', 'touchmove', 'touchend', 'touchcancel'];
            var desktop = ['pointerdown', 'pointermove', 'pointerup'];
            swiper.touchEventsTouch = {
              start: touch[0],
              move: touch[1],
              end: touch[2],
              cancel: touch[3]
            };
            swiper.touchEventsDesktop = {
              start: desktop[0],
              move: desktop[1],
              end: desktop[2]
            };
            return swiper.support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;
          }(),
          touchEventsData: {
            isTouched: undefined,
            isMoved: undefined,
            allowTouchCallbacks: undefined,
            touchStartTime: undefined,
            isScrolling: undefined,
            currentTranslate: undefined,
            startTranslate: undefined,
            allowThresholdMove: undefined,
            // Form elements to match
            focusableElements: swiper.params.focusableElements,
            // Last click time
            lastClickTime: now(),
            clickTimeout: undefined,
            // Velocities
            velocities: [],
            allowMomentumBounce: undefined,
            isTouchEvent: undefined,
            startMoving: undefined
          },
          // Clicks
          allowClick: true,
          // Touches
          allowTouchMove: swiper.params.allowTouchMove,
          touches: {
            startX: 0,
            startY: 0,
            currentX: 0,
            currentY: 0,
            diff: 0
          },
          // Images
          imagesToLoad: [],
          imagesLoaded: 0
        });
        swiper.emit('_swiper'); // Init

        if (swiper.params.init) {
          swiper.init();
        } // Return app instance


        return swiper;
      }

      _createClass(Swiper, [{
        key: "enable",
        value: function enable() {
          var swiper = this;
          if (swiper.enabled) return;
          swiper.enabled = true;

          if (swiper.params.grabCursor) {
            swiper.setGrabCursor();
          }

          swiper.emit('enable');
        }
      }, {
        key: "disable",
        value: function disable() {
          var swiper = this;
          if (!swiper.enabled) return;
          swiper.enabled = false;

          if (swiper.params.grabCursor) {
            swiper.unsetGrabCursor();
          }

          swiper.emit('disable');
        }
      }, {
        key: "setProgress",
        value: function setProgress(progress, speed) {
          var swiper = this;
          progress = Math.min(Math.max(progress, 0), 1);
          var min = swiper.minTranslate();
          var max = swiper.maxTranslate();
          var current = (max - min) * progress + min;
          swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);
          swiper.updateActiveIndex();
          swiper.updateSlidesClasses();
        }
      }, {
        key: "emitContainerClasses",
        value: function emitContainerClasses() {
          var swiper = this;
          if (!swiper.params._emitClasses || !swiper.el) return;
          var cls = swiper.el.className.split(' ').filter(function (className) {
            return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;
          });
          swiper.emit('_containerClasses', cls.join(' '));
        }
      }, {
        key: "getSlideClasses",
        value: function getSlideClasses(slideEl) {
          var swiper = this;
          return slideEl.className.split(' ').filter(function (className) {
            return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;
          }).join(' ');
        }
      }, {
        key: "emitSlidesClasses",
        value: function emitSlidesClasses() {
          var swiper = this;
          if (!swiper.params._emitClasses || !swiper.el) return;
          var updates = [];
          swiper.slides.each(function (slideEl) {
            var classNames = swiper.getSlideClasses(slideEl);
            updates.push({
              slideEl: slideEl,
              classNames: classNames
            });
            swiper.emit('_slideClass', slideEl, classNames);
          });
          swiper.emit('_slideClasses', updates);
        }
      }, {
        key: "slidesPerViewDynamic",
        value: function slidesPerViewDynamic() {
          var view = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'current';
          var exact = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
          var swiper = this;
          var params = swiper.params,
              slides = swiper.slides,
              slidesGrid = swiper.slidesGrid,
              slidesSizesGrid = swiper.slidesSizesGrid,
              swiperSize = swiper.size,
              activeIndex = swiper.activeIndex;
          var spv = 1;

          if (params.centeredSlides) {
            var slideSize = slides[activeIndex].swiperSlideSize;
            var breakLoop;

            for (var i = activeIndex + 1; i < slides.length; i += 1) {
              if (slides[i] && !breakLoop) {
                slideSize += slides[i].swiperSlideSize;
                spv += 1;
                if (slideSize > swiperSize) breakLoop = true;
              }
            }

            for (var _i4 = activeIndex - 1; _i4 >= 0; _i4 -= 1) {
              if (slides[_i4] && !breakLoop) {
                slideSize += slides[_i4].swiperSlideSize;
                spv += 1;
                if (slideSize > swiperSize) breakLoop = true;
              }
            }
          } else {
            // eslint-disable-next-line
            if (view === 'current') {
              for (var _i5 = activeIndex + 1; _i5 < slides.length; _i5 += 1) {
                var slideInView = exact ? slidesGrid[_i5] + slidesSizesGrid[_i5] - slidesGrid[activeIndex] < swiperSize : slidesGrid[_i5] - slidesGrid[activeIndex] < swiperSize;

                if (slideInView) {
                  spv += 1;
                }
              }
            } else {
              // previous
              for (var _i6 = activeIndex - 1; _i6 >= 0; _i6 -= 1) {
                var _slideInView = slidesGrid[activeIndex] - slidesGrid[_i6] < swiperSize;

                if (_slideInView) {
                  spv += 1;
                }
              }
            }
          }

          return spv;
        }
      }, {
        key: "update",
        value: function update() {
          var swiper = this;
          if (!swiper || swiper.destroyed) return;
          var snapGrid = swiper.snapGrid,
              params = swiper.params; // Breakpoints

          if (params.breakpoints) {
            swiper.setBreakpoint();
          }

          swiper.updateSize();
          swiper.updateSlides();
          swiper.updateProgress();
          swiper.updateSlidesClasses();

          function setTranslate() {
            var translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;
            var newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());
            swiper.setTranslate(newTranslate);
            swiper.updateActiveIndex();
            swiper.updateSlidesClasses();
          }

          var translated;

          if (swiper.params.freeMode && swiper.params.freeMode.enabled) {
            setTranslate();

            if (swiper.params.autoHeight) {
              swiper.updateAutoHeight();
            }
          } else {
            if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {
              translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);
            } else {
              translated = swiper.slideTo(swiper.activeIndex, 0, false, true);
            }

            if (!translated) {
              setTranslate();
            }
          }

          if (params.watchOverflow && snapGrid !== swiper.snapGrid) {
            swiper.checkOverflow();
          }

          swiper.emit('update');
        }
      }, {
        key: "changeDirection",
        value: function changeDirection(newDirection) {
          var needUpdate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
          var swiper = this;
          var currentDirection = swiper.params.direction;

          if (!newDirection) {
            // eslint-disable-next-line
            newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';
          }

          if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {
            return swiper;
          }

          swiper.$el.removeClass("".concat(swiper.params.containerModifierClass).concat(currentDirection)).addClass("".concat(swiper.params.containerModifierClass).concat(newDirection));
          swiper.emitContainerClasses();
          swiper.params.direction = newDirection;
          swiper.slides.each(function (slideEl) {
            if (newDirection === 'vertical') {
              slideEl.style.width = '';
            } else {
              slideEl.style.height = '';
            }
          });
          swiper.emit('changeDirection');
          if (needUpdate) swiper.update();
          return swiper;
        }
      }, {
        key: "mount",
        value: function mount(el) {
          var swiper = this;
          if (swiper.mounted) return true; // Find el

          var $el = $(el || swiper.params.el);
          el = $el[0];

          if (!el) {
            return false;
          }

          el.swiper = swiper;

          var getWrapperSelector = function getWrapperSelector() {
            return ".".concat((swiper.params.wrapperClass || '').trim().split(' ').join('.'));
          };

          var getWrapper = function getWrapper() {
            if (el && el.shadowRoot && el.shadowRoot.querySelector) {
              var res = $(el.shadowRoot.querySelector(getWrapperSelector())); // Children needs to return slot items

              res.children = function (options) {
                return $el.children(options);
              };

              return res;
            }

            return $el.children(getWrapperSelector());
          }; // Find Wrapper


          var $wrapperEl = getWrapper();

          if ($wrapperEl.length === 0 && swiper.params.createElements) {
            var _document2 = getDocument();

            var wrapper = _document2.createElement('div');

            $wrapperEl = $(wrapper);
            wrapper.className = swiper.params.wrapperClass;
            $el.append(wrapper);
            $el.children(".".concat(swiper.params.slideClass)).each(function (slideEl) {
              $wrapperEl.append(slideEl);
            });
          }

          Object.assign(swiper, {
            $el: $el,
            el: el,
            $wrapperEl: $wrapperEl,
            wrapperEl: $wrapperEl[0],
            mounted: true,
            // RTL
            rtl: el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl',
            rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),
            wrongRTL: $wrapperEl.css('display') === '-webkit-box'
          });
          return true;
        }
      }, {
        key: "init",
        value: function init(el) {
          var swiper = this;
          if (swiper.initialized) return swiper;
          var mounted = swiper.mount(el);
          if (mounted === false) return swiper;
          swiper.emit('beforeInit'); // Set breakpoint

          if (swiper.params.breakpoints) {
            swiper.setBreakpoint();
          } // Add Classes


          swiper.addClasses(); // Create loop

          if (swiper.params.loop) {
            swiper.loopCreate();
          } // Update size


          swiper.updateSize(); // Update slides

          swiper.updateSlides();

          if (swiper.params.watchOverflow) {
            swiper.checkOverflow();
          } // Set Grab Cursor


          if (swiper.params.grabCursor && swiper.enabled) {
            swiper.setGrabCursor();
          }

          if (swiper.params.preloadImages) {
            swiper.preloadImages();
          } // Slide To Initial Slide


          if (swiper.params.loop) {
            swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit, false, true);
          } else {
            swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);
          } // Attach events


          swiper.attachEvents(); // Init Flag

          swiper.initialized = true; // Emit

          swiper.emit('init');
          swiper.emit('afterInit');
          return swiper;
        }
      }, {
        key: "destroy",
        value: function destroy() {
          var deleteInstance = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
          var cleanStyles = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
          var swiper = this;
          var params = swiper.params,
              $el = swiper.$el,
              $wrapperEl = swiper.$wrapperEl,
              slides = swiper.slides;

          if (typeof swiper.params === 'undefined' || swiper.destroyed) {
            return null;
          }

          swiper.emit('beforeDestroy'); // Init Flag

          swiper.initialized = false; // Detach events

          swiper.detachEvents(); // Destroy loop

          if (params.loop) {
            swiper.loopDestroy();
          } // Cleanup styles


          if (cleanStyles) {
            swiper.removeClasses();
            $el.removeAttr('style');
            $wrapperEl.removeAttr('style');

            if (slides && slides.length) {
              slides.removeClass([params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass].join(' ')).removeAttr('style').removeAttr('data-swiper-slide-index');
            }
          }

          swiper.emit('destroy'); // Detach emitter events

          Object.keys(swiper.eventsListeners).forEach(function (eventName) {
            swiper.off(eventName);
          });

          if (deleteInstance !== false) {
            swiper.$el[0].swiper = null;
            deleteProps(swiper);
          }

          swiper.destroyed = true;
          return null;
        }
      }], [{
        key: "extendDefaults",
        value: function extendDefaults(newDefaults) {
          extend(extendedDefaults, newDefaults);
        }
      }, {
        key: "extendedDefaults",
        get: function get() {
          return extendedDefaults;
        }
      }, {
        key: "defaults",
        get: function get() {
          return defaults;
        }
      }, {
        key: "installModule",
        value: function installModule(mod) {
          if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];
          var modules = Swiper.prototype.__modules__;

          if (typeof mod === 'function' && modules.indexOf(mod) < 0) {
            modules.push(mod);
          }
        }
      }, {
        key: "use",
        value: function use(module) {
          if (Array.isArray(module)) {
            module.forEach(function (m) {
              return Swiper.installModule(m);
            });
            return Swiper;
          }

          Swiper.installModule(module);
          return Swiper;
        }
      }]);

      return Swiper;
    }();

    Object.keys(prototypes).forEach(function (prototypeGroup) {
      Object.keys(prototypes[prototypeGroup]).forEach(function (protoMethod) {
        Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];
      });
    });
    Swiper.use([Resize, Observer]);

    function Virtual(_ref7) {
      var swiper = _ref7.swiper,
          extendParams = _ref7.extendParams,
          on = _ref7.on;
      extendParams({
        virtual: {
          enabled: false,
          slides: [],
          cache: true,
          renderSlide: null,
          renderExternal: null,
          renderExternalUpdate: true,
          addSlidesBefore: 0,
          addSlidesAfter: 0
        }
      });
      var cssModeTimeout;
      swiper.virtual = {
        cache: {},
        from: undefined,
        to: undefined,
        slides: [],
        offset: 0,
        slidesGrid: []
      };

      function renderSlide(slide, index) {
        var params = swiper.params.virtual;

        if (params.cache && swiper.virtual.cache[index]) {
          return swiper.virtual.cache[index];
        }

        var $slideEl = params.renderSlide ? $(params.renderSlide.call(swiper, slide, index)) : $("<div class=\"".concat(swiper.params.slideClass, "\" data-swiper-slide-index=\"").concat(index, "\">").concat(slide, "</div>"));
        if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);
        if (params.cache) swiper.virtual.cache[index] = $slideEl;
        return $slideEl;
      }

      function update(force) {
        var _swiper$params = swiper.params,
            slidesPerView = _swiper$params.slidesPerView,
            slidesPerGroup = _swiper$params.slidesPerGroup,
            centeredSlides = _swiper$params.centeredSlides;
        var _swiper$params$virtua = swiper.params.virtual,
            addSlidesBefore = _swiper$params$virtua.addSlidesBefore,
            addSlidesAfter = _swiper$params$virtua.addSlidesAfter;
        var _swiper$virtual = swiper.virtual,
            previousFrom = _swiper$virtual.from,
            previousTo = _swiper$virtual.to,
            slides = _swiper$virtual.slides,
            previousSlidesGrid = _swiper$virtual.slidesGrid,
            previousOffset = _swiper$virtual.offset;

        if (!swiper.params.cssMode) {
          swiper.updateActiveIndex();
        }

        var activeIndex = swiper.activeIndex || 0;
        var offsetProp;
        if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';
        var slidesAfter;
        var slidesBefore;

        if (centeredSlides) {
          slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;
          slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;
        } else {
          slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;
          slidesBefore = slidesPerGroup + addSlidesBefore;
        }

        var from = Math.max((activeIndex || 0) - slidesBefore, 0);
        var to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);
        var offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);
        Object.assign(swiper.virtual, {
          from: from,
          to: to,
          offset: offset,
          slidesGrid: swiper.slidesGrid
        });

        function onRendered() {
          swiper.updateSlides();
          swiper.updateProgress();
          swiper.updateSlidesClasses();

          if (swiper.lazy && swiper.params.lazy.enabled) {
            swiper.lazy.load();
          }
        }

        if (previousFrom === from && previousTo === to && !force) {
          if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {
            swiper.slides.css(offsetProp, "".concat(offset, "px"));
          }

          swiper.updateProgress();
          return;
        }

        if (swiper.params.virtual.renderExternal) {
          swiper.params.virtual.renderExternal.call(swiper, {
            offset: offset,
            from: from,
            to: to,
            slides: function getSlides() {
              var slidesToRender = [];

              for (var i = from; i <= to; i += 1) {
                slidesToRender.push(slides[i]);
              }

              return slidesToRender;
            }()
          });

          if (swiper.params.virtual.renderExternalUpdate) {
            onRendered();
          }

          return;
        }

        var prependIndexes = [];
        var appendIndexes = [];

        if (force) {
          swiper.$wrapperEl.find(".".concat(swiper.params.slideClass)).remove();
        } else {
          for (var i = previousFrom; i <= previousTo; i += 1) {
            if (i < from || i > to) {
              swiper.$wrapperEl.find(".".concat(swiper.params.slideClass, "[data-swiper-slide-index=\"").concat(i, "\"]")).remove();
            }
          }
        }

        for (var _i7 = 0; _i7 < slides.length; _i7 += 1) {
          if (_i7 >= from && _i7 <= to) {
            if (typeof previousTo === 'undefined' || force) {
              appendIndexes.push(_i7);
            } else {
              if (_i7 > previousTo) appendIndexes.push(_i7);
              if (_i7 < previousFrom) prependIndexes.push(_i7);
            }
          }
        }

        appendIndexes.forEach(function (index) {
          swiper.$wrapperEl.append(renderSlide(slides[index], index));
        });
        prependIndexes.sort(function (a, b) {
          return b - a;
        }).forEach(function (index) {
          swiper.$wrapperEl.prepend(renderSlide(slides[index], index));
        });
        swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, "".concat(offset, "px"));
        onRendered();
      }

      function appendSlide(slides) {
        if (_typeof(slides) === 'object' && 'length' in slides) {
          for (var i = 0; i < slides.length; i += 1) {
            if (slides[i]) swiper.virtual.slides.push(slides[i]);
          }
        } else {
          swiper.virtual.slides.push(slides);
        }

        update(true);
      }

      function prependSlide(slides) {
        var activeIndex = swiper.activeIndex;
        var newActiveIndex = activeIndex + 1;
        var numberOfNewSlides = 1;

        if (Array.isArray(slides)) {
          for (var i = 0; i < slides.length; i += 1) {
            if (slides[i]) swiper.virtual.slides.unshift(slides[i]);
          }

          newActiveIndex = activeIndex + slides.length;
          numberOfNewSlides = slides.length;
        } else {
          swiper.virtual.slides.unshift(slides);
        }

        if (swiper.params.virtual.cache) {
          var cache = swiper.virtual.cache;
          var newCache = {};
          Object.keys(cache).forEach(function (cachedIndex) {
            var $cachedEl = cache[cachedIndex];
            var cachedElIndex = $cachedEl.attr('data-swiper-slide-index');

            if (cachedElIndex) {
              $cachedEl.attr('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);
            }

            newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = $cachedEl;
          });
          swiper.virtual.cache = newCache;
        }

        update(true);
        swiper.slideTo(newActiveIndex, 0);
      }

      function removeSlide(slidesIndexes) {
        if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;
        var activeIndex = swiper.activeIndex;

        if (Array.isArray(slidesIndexes)) {
          for (var i = slidesIndexes.length - 1; i >= 0; i -= 1) {
            swiper.virtual.slides.splice(slidesIndexes[i], 1);

            if (swiper.params.virtual.cache) {
              delete swiper.virtual.cache[slidesIndexes[i]];
            }

            if (slidesIndexes[i] < activeIndex) activeIndex -= 1;
            activeIndex = Math.max(activeIndex, 0);
          }
        } else {
          swiper.virtual.slides.splice(slidesIndexes, 1);

          if (swiper.params.virtual.cache) {
            delete swiper.virtual.cache[slidesIndexes];
          }

          if (slidesIndexes < activeIndex) activeIndex -= 1;
          activeIndex = Math.max(activeIndex, 0);
        }

        update(true);
        swiper.slideTo(activeIndex, 0);
      }

      function removeAllSlides() {
        swiper.virtual.slides = [];

        if (swiper.params.virtual.cache) {
          swiper.virtual.cache = {};
        }

        update(true);
        swiper.slideTo(0, 0);
      }

      on('beforeInit', function () {
        if (!swiper.params.virtual.enabled) return;
        swiper.virtual.slides = swiper.params.virtual.slides;
        swiper.classNames.push("".concat(swiper.params.containerModifierClass, "virtual"));
        swiper.params.watchSlidesProgress = true;
        swiper.originalParams.watchSlidesProgress = true;

        if (!swiper.params.initialSlide) {
          update();
        }
      });
      on('setTranslate', function () {
        if (!swiper.params.virtual.enabled) return;

        if (swiper.params.cssMode && !swiper._immediateVirtual) {
          clearTimeout(cssModeTimeout);
          cssModeTimeout = setTimeout(function () {
            update();
          }, 100);
        } else {
          update();
        }
      });
      on('init update resize', function () {
        if (!swiper.params.virtual.enabled) return;

        if (swiper.params.cssMode) {
          setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', "".concat(swiper.virtualSize, "px"));
        }
      });
      Object.assign(swiper.virtual, {
        appendSlide: appendSlide,
        prependSlide: prependSlide,
        removeSlide: removeSlide,
        removeAllSlides: removeAllSlides,
        update: update
      });
    }
    /* eslint-disable consistent-return */


    function Keyboard(_ref8) {
      var swiper = _ref8.swiper,
          extendParams = _ref8.extendParams,
          on = _ref8.on,
          emit = _ref8.emit;
      var document = getDocument();
      var window = getWindow();
      swiper.keyboard = {
        enabled: false
      };
      extendParams({
        keyboard: {
          enabled: false,
          onlyInViewport: true,
          pageUpDown: true
        }
      });

      function handle(event) {
        if (!swiper.enabled) return;
        var rtl = swiper.rtlTranslate;
        var e = event;
        if (e.originalEvent) e = e.originalEvent; // jquery fix

        var kc = e.keyCode || e.charCode;
        var pageUpDown = swiper.params.keyboard.pageUpDown;
        var isPageUp = pageUpDown && kc === 33;
        var isPageDown = pageUpDown && kc === 34;
        var isArrowLeft = kc === 37;
        var isArrowRight = kc === 39;
        var isArrowUp = kc === 38;
        var isArrowDown = kc === 40; // Directions locks

        if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {
          return false;
        }

        if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {
          return false;
        }

        if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {
          return undefined;
        }

        if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {
          return undefined;
        }

        if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {
          var inView = false; // Check that swiper should be inside of visible area of window

          if (swiper.$el.parents(".".concat(swiper.params.slideClass)).length > 0 && swiper.$el.parents(".".concat(swiper.params.slideActiveClass)).length === 0) {
            return undefined;
          }

          var $el = swiper.$el;
          var swiperWidth = $el[0].clientWidth;
          var swiperHeight = $el[0].clientHeight;
          var windowWidth = window.innerWidth;
          var windowHeight = window.innerHeight;
          var swiperOffset = swiper.$el.offset();
          if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;
          var swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];

          for (var i = 0; i < swiperCoord.length; i += 1) {
            var point = swiperCoord[i];

            if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {
              if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line

              inView = true;
            }
          }

          if (!inView) return undefined;
        }

        if (swiper.isHorizontal()) {
          if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {
            if (e.preventDefault) e.preventDefault();else e.returnValue = false;
          }

          if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();
          if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();
        } else {
          if (isPageUp || isPageDown || isArrowUp || isArrowDown) {
            if (e.preventDefault) e.preventDefault();else e.returnValue = false;
          }

          if (isPageDown || isArrowDown) swiper.slideNext();
          if (isPageUp || isArrowUp) swiper.slidePrev();
        }

        emit('keyPress', kc);
        return undefined;
      }

      function enable() {
        if (swiper.keyboard.enabled) return;
        $(document).on('keydown', handle);
        swiper.keyboard.enabled = true;
      }

      function disable() {
        if (!swiper.keyboard.enabled) return;
        $(document).off('keydown', handle);
        swiper.keyboard.enabled = false;
      }

      on('init', function () {
        if (swiper.params.keyboard.enabled) {
          enable();
        }
      });
      on('destroy', function () {
        if (swiper.keyboard.enabled) {
          disable();
        }
      });
      Object.assign(swiper.keyboard, {
        enable: enable,
        disable: disable
      });
    }
    /* eslint-disable consistent-return */


    function Mousewheel(_ref9) {
      var swiper = _ref9.swiper,
          extendParams = _ref9.extendParams,
          on = _ref9.on,
          emit = _ref9.emit;
      var window = getWindow();
      extendParams({
        mousewheel: {
          enabled: false,
          releaseOnEdges: false,
          invert: false,
          forceToAxis: false,
          sensitivity: 1,
          eventsTarget: 'container',
          thresholdDelta: null,
          thresholdTime: null
        }
      });
      swiper.mousewheel = {
        enabled: false
      };
      var timeout;
      var lastScrollTime = now();
      var lastEventBeforeSnap;
      var recentWheelEvents = [];

      function normalize(e) {
        // Reasonable defaults
        var PIXEL_STEP = 10;
        var LINE_HEIGHT = 40;
        var PAGE_HEIGHT = 800;
        var sX = 0;
        var sY = 0; // spinX, spinY

        var pX = 0;
        var pY = 0; // pixelX, pixelY
        // Legacy

        if ('detail' in e) {
          sY = e.detail;
        }

        if ('wheelDelta' in e) {
          sY = -e.wheelDelta / 120;
        }

        if ('wheelDeltaY' in e) {
          sY = -e.wheelDeltaY / 120;
        }

        if ('wheelDeltaX' in e) {
          sX = -e.wheelDeltaX / 120;
        } // side scrolling on FF with DOMMouseScroll


        if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {
          sX = sY;
          sY = 0;
        }

        pX = sX * PIXEL_STEP;
        pY = sY * PIXEL_STEP;

        if ('deltaY' in e) {
          pY = e.deltaY;
        }

        if ('deltaX' in e) {
          pX = e.deltaX;
        }

        if (e.shiftKey && !pX) {
          // if user scrolls with shift he wants horizontal scroll
          pX = pY;
          pY = 0;
        }

        if ((pX || pY) && e.deltaMode) {
          if (e.deltaMode === 1) {
            // delta in LINE units
            pX *= LINE_HEIGHT;
            pY *= LINE_HEIGHT;
          } else {
            // delta in PAGE units
            pX *= PAGE_HEIGHT;
            pY *= PAGE_HEIGHT;
          }
        } // Fall-back if spin cannot be determined


        if (pX && !sX) {
          sX = pX < 1 ? -1 : 1;
        }

        if (pY && !sY) {
          sY = pY < 1 ? -1 : 1;
        }

        return {
          spinX: sX,
          spinY: sY,
          pixelX: pX,
          pixelY: pY
        };
      }

      function handleMouseEnter() {
        if (!swiper.enabled) return;
        swiper.mouseEntered = true;
      }

      function handleMouseLeave() {
        if (!swiper.enabled) return;
        swiper.mouseEntered = false;
      }

      function animateSlider(newEvent) {
        if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) {
          // Prevent if delta of wheel scroll delta is below configured threshold
          return false;
        }

        if (swiper.params.mousewheel.thresholdTime && now() - lastScrollTime < swiper.params.mousewheel.thresholdTime) {
          // Prevent if time between scrolls is below configured threshold
          return false;
        } // If the movement is NOT big enough and
        // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):
        //   Don't go any further (avoid insignificant scroll movement).


        if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {
          // Return false as a default
          return true;
        } // If user is scrolling towards the end:
        //   If the slider hasn't hit the latest slide or
        //   if the slider is a loop and
        //   if the slider isn't moving right now:
        //     Go to next slide and
        //     emit a scroll event.
        // Else (the user is scrolling towards the beginning) and
        // if the slider hasn't hit the first slide or
        // if the slider is a loop and
        // if the slider isn't moving right now:
        //   Go to prev slide and
        //   emit a scroll event.


        if (newEvent.direction < 0) {
          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {
            swiper.slideNext();
            emit('scroll', newEvent.raw);
          }
        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {
          swiper.slidePrev();
          emit('scroll', newEvent.raw);
        } // If you got here is because an animation has been triggered so store the current time


        lastScrollTime = new window.Date().getTime(); // Return false as a default

        return false;
      }

      function releaseScroll(newEvent) {
        var params = swiper.params.mousewheel;

        if (newEvent.direction < 0) {
          if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {
            // Return true to animate scroll on edges
            return true;
          }
        } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {
          // Return true to animate scroll on edges
          return true;
        }

        return false;
      }

      function handle(event) {
        var e = event;
        var disableParentSwiper = true;
        if (!swiper.enabled) return;
        var params = swiper.params.mousewheel;

        if (swiper.params.cssMode) {
          e.preventDefault();
        }

        var target = swiper.$el;

        if (swiper.params.mousewheel.eventsTarget !== 'container') {
          target = $(swiper.params.mousewheel.eventsTarget);
        }

        if (!swiper.mouseEntered && !target[0].contains(e.target) && !params.releaseOnEdges) return true;
        if (e.originalEvent) e = e.originalEvent; // jquery fix

        var delta = 0;
        var rtlFactor = swiper.rtlTranslate ? -1 : 1;
        var data = normalize(e);

        if (params.forceToAxis) {
          if (swiper.isHorizontal()) {
            if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;
          } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;
        } else {
          delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;
        }

        if (delta === 0) return true;
        if (params.invert) delta = -delta; // Get the scroll positions

        var positions = swiper.getTranslate() + delta * params.sensitivity;
        if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();
        if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate(); // When loop is true:
        //     the disableParentSwiper will be true.
        // When loop is false:
        //     if the scroll positions is not on edge,
        //     then the disableParentSwiper will be true.
        //     if the scroll on edge positions,
        //     then the disableParentSwiper will be false.

        disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());
        if (disableParentSwiper && swiper.params.nested) e.stopPropagation();

        if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {
          // Register the new event in a variable which stores the relevant data
          var newEvent = {
            time: now(),
            delta: Math.abs(delta),
            direction: Math.sign(delta),
            raw: event
          }; // Keep the most recent events

          if (recentWheelEvents.length >= 2) {
            recentWheelEvents.shift(); // only store the last N events
          }

          var prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;
          recentWheelEvents.push(newEvent); // If there is at least one previous recorded event:
          //   If direction has changed or
          //   if the scroll is quicker than the previous one:
          //     Animate the slider.
          // Else (this is the first time the wheel is moved):
          //     Animate the slider.

          if (prevEvent) {
            if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {
              animateSlider(newEvent);
            }
          } else {
            animateSlider(newEvent);
          } // If it's time to release the scroll:
          //   Return now so you don't hit the preventDefault.


          if (releaseScroll(newEvent)) {
            return true;
          }
        } else {
          // Freemode or scrollContainer:
          // If we recently snapped after a momentum scroll, then ignore wheel events
          // to give time for the deceleration to finish. Stop ignoring after 500 msecs
          // or if it's a new scroll (larger delta or inverse sign as last event before
          // an end-of-momentum snap).
          var _newEvent = {
            time: now(),
            delta: Math.abs(delta),
            direction: Math.sign(delta)
          };
          var ignoreWheelEvents = lastEventBeforeSnap && _newEvent.time < lastEventBeforeSnap.time + 500 && _newEvent.delta <= lastEventBeforeSnap.delta && _newEvent.direction === lastEventBeforeSnap.direction;

          if (!ignoreWheelEvents) {
            lastEventBeforeSnap = undefined;

            if (swiper.params.loop) {
              swiper.loopFix();
            }

            var position = swiper.getTranslate() + delta * params.sensitivity;
            var wasBeginning = swiper.isBeginning;
            var wasEnd = swiper.isEnd;
            if (position >= swiper.minTranslate()) position = swiper.minTranslate();
            if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();
            swiper.setTransition(0);
            swiper.setTranslate(position);
            swiper.updateProgress();
            swiper.updateActiveIndex();
            swiper.updateSlidesClasses();

            if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {
              swiper.updateSlidesClasses();
            }

            if (swiper.params.freeMode.sticky) {
              // When wheel scrolling starts with sticky (aka snap) enabled, then detect
              // the end of a momentum scroll by storing recent (N=15?) wheel events.
              // 1. do all N events have decreasing or same (absolute value) delta?
              // 2. did all N events arrive in the last M (M=500?) msecs?
              // 3. does the earliest event have an (absolute value) delta that's
              //    at least P (P=1?) larger than the most recent event's delta?
              // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?
              // If 1-4 are "yes" then we're near the end of a momentum scroll deceleration.
              // Snap immediately and ignore remaining wheel events in this scroll.
              // See comment above for "remaining wheel events in this scroll" determination.
              // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.
              clearTimeout(timeout);
              timeout = undefined;

              if (recentWheelEvents.length >= 15) {
                recentWheelEvents.shift(); // only store the last N events
              }

              var _prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;

              var firstEvent = recentWheelEvents[0];
              recentWheelEvents.push(_newEvent);

              if (_prevEvent && (_newEvent.delta > _prevEvent.delta || _newEvent.direction !== _prevEvent.direction)) {
                // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.
                recentWheelEvents.splice(0);
              } else if (recentWheelEvents.length >= 15 && _newEvent.time - firstEvent.time < 500 && firstEvent.delta - _newEvent.delta >= 1 && _newEvent.delta <= 6) {
                // We're at the end of the deceleration of a momentum scroll, so there's no need
                // to wait for more events. Snap ASAP on the next tick.
                // Also, because there's some remaining momentum we'll bias the snap in the
                // direction of the ongoing scroll because it's better UX for the scroll to snap
                // in the same direction as the scroll instead of reversing to snap.  Therefore,
                // if it's already scrolled more than 20% in the current direction, keep going.
                var snapToThreshold = delta > 0 ? 0.8 : 0.2;
                lastEventBeforeSnap = _newEvent;
                recentWheelEvents.splice(0);
                timeout = nextTick(function () {
                  swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);
                }, 0); // no delay; move on next tick
              }

              if (!timeout) {
                // if we get here, then we haven't detected the end of a momentum scroll, so
                // we'll consider a scroll "complete" when there haven't been any wheel events
                // for 500ms.
                timeout = nextTick(function () {
                  var snapToThreshold = 0.5;
                  lastEventBeforeSnap = _newEvent;
                  recentWheelEvents.splice(0);
                  swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);
                }, 500);
              }
            } // Emit event


            if (!ignoreWheelEvents) emit('scroll', e); // Stop autoplay

            if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop(); // Return page scroll on edge positions

            if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;
          }
        }

        if (e.preventDefault) e.preventDefault();else e.returnValue = false;
        return false;
      }

      function events(method) {
        var target = swiper.$el;

        if (swiper.params.mousewheel.eventsTarget !== 'container') {
          target = $(swiper.params.mousewheel.eventsTarget);
        }

        target[method]('mouseenter', handleMouseEnter);
        target[method]('mouseleave', handleMouseLeave);
        target[method]('wheel', handle);
      }

      function enable() {
        if (swiper.params.cssMode) {
          swiper.wrapperEl.removeEventListener('wheel', handle);
          return true;
        }

        if (swiper.mousewheel.enabled) return false;
        events('on');
        swiper.mousewheel.enabled = true;
        return true;
      }

      function disable() {
        if (swiper.params.cssMode) {
          swiper.wrapperEl.addEventListener(event, handle);
          return true;
        }

        if (!swiper.mousewheel.enabled) return false;
        events('off');
        swiper.mousewheel.enabled = false;
        return true;
      }

      on('init', function () {
        if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {
          disable();
        }

        if (swiper.params.mousewheel.enabled) enable();
      });
      on('destroy', function () {
        if (swiper.params.cssMode) {
          enable();
        }

        if (swiper.mousewheel.enabled) disable();
      });
      Object.assign(swiper.mousewheel, {
        enable: enable,
        disable: disable
      });
    }

    function createElementIfNotDefined(swiper, originalParams, params, checkProps) {
      var document = getDocument();

      if (swiper.params.createElements) {
        Object.keys(checkProps).forEach(function (key) {
          if (!params[key] && params.auto === true) {
            var element = swiper.$el.children(".".concat(checkProps[key]))[0];

            if (!element) {
              element = document.createElement('div');
              element.className = checkProps[key];
              swiper.$el.append(element);
            }

            params[key] = element;
            originalParams[key] = element;
          }
        });
      }

      return params;
    }

    function Navigation(_ref10) {
      var swiper = _ref10.swiper,
          extendParams = _ref10.extendParams,
          on = _ref10.on,
          emit = _ref10.emit;
      extendParams({
        navigation: {
          nextEl: null,
          prevEl: null,
          hideOnClick: false,
          disabledClass: 'swiper-button-disabled',
          hiddenClass: 'swiper-button-hidden',
          lockClass: 'swiper-button-lock'
        }
      });
      swiper.navigation = {
        nextEl: null,
        $nextEl: null,
        prevEl: null,
        $prevEl: null
      };

      function getEl(el) {
        var $el;

        if (el) {
          $el = $(el);

          if (swiper.params.uniqueNavElements && typeof el === 'string' && $el.length > 1 && swiper.$el.find(el).length === 1) {
            $el = swiper.$el.find(el);
          }
        }

        return $el;
      }

      function toggleEl($el, disabled) {
        var params = swiper.params.navigation;

        if ($el && $el.length > 0) {
          $el[disabled ? 'addClass' : 'removeClass'](params.disabledClass);
          if ($el[0] && $el[0].tagName === 'BUTTON') $el[0].disabled = disabled;

          if (swiper.params.watchOverflow && swiper.enabled) {
            $el[swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);
          }
        }
      }

      function update() {
        // Update Navigation Buttons
        if (swiper.params.loop) return;
        var _swiper$navigation = swiper.navigation,
            $nextEl = _swiper$navigation.$nextEl,
            $prevEl = _swiper$navigation.$prevEl;
        toggleEl($prevEl, swiper.isBeginning && !swiper.params.rewind);
        toggleEl($nextEl, swiper.isEnd && !swiper.params.rewind);
      }

      function onPrevClick(e) {
        e.preventDefault();
        if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;
        swiper.slidePrev();
      }

      function onNextClick(e) {
        e.preventDefault();
        if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;
        swiper.slideNext();
      }

      function init() {
        var params = swiper.params.navigation;
        swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {
          nextEl: 'swiper-button-next',
          prevEl: 'swiper-button-prev'
        });
        if (!(params.nextEl || params.prevEl)) return;
        var $nextEl = getEl(params.nextEl);
        var $prevEl = getEl(params.prevEl);

        if ($nextEl && $nextEl.length > 0) {
          $nextEl.on('click', onNextClick);
        }

        if ($prevEl && $prevEl.length > 0) {
          $prevEl.on('click', onPrevClick);
        }

        Object.assign(swiper.navigation, {
          $nextEl: $nextEl,
          nextEl: $nextEl && $nextEl[0],
          $prevEl: $prevEl,
          prevEl: $prevEl && $prevEl[0]
        });

        if (!swiper.enabled) {
          if ($nextEl) $nextEl.addClass(params.lockClass);
          if ($prevEl) $prevEl.addClass(params.lockClass);
        }
      }

      function destroy() {
        var _swiper$navigation2 = swiper.navigation,
            $nextEl = _swiper$navigation2.$nextEl,
            $prevEl = _swiper$navigation2.$prevEl;

        if ($nextEl && $nextEl.length) {
          $nextEl.off('click', onNextClick);
          $nextEl.removeClass(swiper.params.navigation.disabledClass);
        }

        if ($prevEl && $prevEl.length) {
          $prevEl.off('click', onPrevClick);
          $prevEl.removeClass(swiper.params.navigation.disabledClass);
        }
      }

      on('init', function () {
        init();
        update();
      });
      on('toEdge fromEdge lock unlock', function () {
        update();
      });
      on('destroy', function () {
        destroy();
      });
      on('enable disable', function () {
        var _swiper$navigation3 = swiper.navigation,
            $nextEl = _swiper$navigation3.$nextEl,
            $prevEl = _swiper$navigation3.$prevEl;

        if ($nextEl) {
          $nextEl[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.navigation.lockClass);
        }

        if ($prevEl) {
          $prevEl[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.navigation.lockClass);
        }
      });
      on('click', function (_s, e) {
        var _swiper$navigation4 = swiper.navigation,
            $nextEl = _swiper$navigation4.$nextEl,
            $prevEl = _swiper$navigation4.$prevEl;
        var targetEl = e.target;

        if (swiper.params.navigation.hideOnClick && !$(targetEl).is($prevEl) && !$(targetEl).is($nextEl)) {
          if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;
          var isHidden;

          if ($nextEl) {
            isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);
          } else if ($prevEl) {
            isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);
          }

          if (isHidden === true) {
            emit('navigationShow');
          } else {
            emit('navigationHide');
          }

          if ($nextEl) {
            $nextEl.toggleClass(swiper.params.navigation.hiddenClass);
          }

          if ($prevEl) {
            $prevEl.toggleClass(swiper.params.navigation.hiddenClass);
          }
        }
      });
      Object.assign(swiper.navigation, {
        update: update,
        init: init,
        destroy: destroy
      });
    }

    function classesToSelector() {
      var classes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
      return ".".concat(classes.trim().replace(/([\.:!\/])/g, '\\$1') // eslint-disable-line
      .replace(/ /g, '.'));
    }

    function Pagination(_ref11) {
      var swiper = _ref11.swiper,
          extendParams = _ref11.extendParams,
          on = _ref11.on,
          emit = _ref11.emit;
      var pfx = 'swiper-pagination';
      extendParams({
        pagination: {
          el: null,
          bulletElement: 'span',
          clickable: false,
          hideOnClick: false,
          renderBullet: null,
          renderProgressbar: null,
          renderFraction: null,
          renderCustom: null,
          progressbarOpposite: false,
          type: 'bullets',
          // 'bullets' or 'progressbar' or 'fraction' or 'custom'
          dynamicBullets: false,
          dynamicMainBullets: 1,
          formatFractionCurrent: function formatFractionCurrent(number) {
            return number;
          },
          formatFractionTotal: function formatFractionTotal(number) {
            return number;
          },
          bulletClass: "".concat(pfx, "-bullet"),
          bulletActiveClass: "".concat(pfx, "-bullet-active"),
          modifierClass: "".concat(pfx, "-"),
          currentClass: "".concat(pfx, "-current"),
          totalClass: "".concat(pfx, "-total"),
          hiddenClass: "".concat(pfx, "-hidden"),
          progressbarFillClass: "".concat(pfx, "-progressbar-fill"),
          progressbarOppositeClass: "".concat(pfx, "-progressbar-opposite"),
          clickableClass: "".concat(pfx, "-clickable"),
          lockClass: "".concat(pfx, "-lock"),
          horizontalClass: "".concat(pfx, "-horizontal"),
          verticalClass: "".concat(pfx, "-vertical")
        }
      });
      swiper.pagination = {
        el: null,
        $el: null,
        bullets: []
      };
      var bulletSize;
      var dynamicBulletIndex = 0;

      function isPaginationDisabled() {
        return !swiper.params.pagination.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0;
      }

      function setSideBullets($bulletEl, position) {
        var bulletActiveClass = swiper.params.pagination.bulletActiveClass;
        $bulletEl[position]().addClass("".concat(bulletActiveClass, "-").concat(position))[position]().addClass("".concat(bulletActiveClass, "-").concat(position, "-").concat(position));
      }

      function update() {
        // Render || Update Pagination bullets/items
        var rtl = swiper.rtl;
        var params = swiper.params.pagination;
        if (isPaginationDisabled()) return;
        var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;
        var $el = swiper.pagination.$el; // Current/Total

        var current;
        var total = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;

        if (swiper.params.loop) {
          current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);

          if (current > slidesLength - 1 - swiper.loopedSlides * 2) {
            current -= slidesLength - swiper.loopedSlides * 2;
          }

          if (current > total - 1) current -= total;
          if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;
        } else if (typeof swiper.snapIndex !== 'undefined') {
          current = swiper.snapIndex;
        } else {
          current = swiper.activeIndex || 0;
        } // Types


        if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {
          var bullets = swiper.pagination.bullets;
          var firstIndex;
          var lastIndex;
          var midIndex;

          if (params.dynamicBullets) {
            bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);
            $el.css(swiper.isHorizontal() ? 'width' : 'height', "".concat(bulletSize * (params.dynamicMainBullets + 4), "px"));

            if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {
              dynamicBulletIndex += current - (swiper.previousIndex - swiper.loopedSlides || 0);

              if (dynamicBulletIndex > params.dynamicMainBullets - 1) {
                dynamicBulletIndex = params.dynamicMainBullets - 1;
              } else if (dynamicBulletIndex < 0) {
                dynamicBulletIndex = 0;
              }
            }

            firstIndex = Math.max(current - dynamicBulletIndex, 0);
            lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);
            midIndex = (lastIndex + firstIndex) / 2;
          }

          bullets.removeClass(['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(function (suffix) {
            return "".concat(params.bulletActiveClass).concat(suffix);
          }).join(' '));

          if ($el.length > 1) {
            bullets.each(function (bullet) {
              var $bullet = $(bullet);
              var bulletIndex = $bullet.index();

              if (bulletIndex === current) {
                $bullet.addClass(params.bulletActiveClass);
              }

              if (params.dynamicBullets) {
                if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {
                  $bullet.addClass("".concat(params.bulletActiveClass, "-main"));
                }

                if (bulletIndex === firstIndex) {
                  setSideBullets($bullet, 'prev');
                }

                if (bulletIndex === lastIndex) {
                  setSideBullets($bullet, 'next');
                }
              }
            });
          } else {
            var $bullet = bullets.eq(current);
            var bulletIndex = $bullet.index();
            $bullet.addClass(params.bulletActiveClass);

            if (params.dynamicBullets) {
              var $firstDisplayedBullet = bullets.eq(firstIndex);
              var $lastDisplayedBullet = bullets.eq(lastIndex);

              for (var i = firstIndex; i <= lastIndex; i += 1) {
                bullets.eq(i).addClass("".concat(params.bulletActiveClass, "-main"));
              }

              if (swiper.params.loop) {
                if (bulletIndex >= bullets.length) {
                  for (var _i8 = params.dynamicMainBullets; _i8 >= 0; _i8 -= 1) {
                    bullets.eq(bullets.length - _i8).addClass("".concat(params.bulletActiveClass, "-main"));
                  }

                  bullets.eq(bullets.length - params.dynamicMainBullets - 1).addClass("".concat(params.bulletActiveClass, "-prev"));
                } else {
                  setSideBullets($firstDisplayedBullet, 'prev');
                  setSideBullets($lastDisplayedBullet, 'next');
                }
              } else {
                setSideBullets($firstDisplayedBullet, 'prev');
                setSideBullets($lastDisplayedBullet, 'next');
              }
            }
          }

          if (params.dynamicBullets) {
            var dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);
            var bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;
            var offsetProp = rtl ? 'right' : 'left';
            bullets.css(swiper.isHorizontal() ? offsetProp : 'top', "".concat(bulletsOffset, "px"));
          }
        }

        if (params.type === 'fraction') {
          $el.find(classesToSelector(params.currentClass)).text(params.formatFractionCurrent(current + 1));
          $el.find(classesToSelector(params.totalClass)).text(params.formatFractionTotal(total));
        }

        if (params.type === 'progressbar') {
          var progressbarDirection;

          if (params.progressbarOpposite) {
            progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';
          } else {
            progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';
          }

          var scale = (current + 1) / total;
          var scaleX = 1;
          var scaleY = 1;

          if (progressbarDirection === 'horizontal') {
            scaleX = scale;
          } else {
            scaleY = scale;
          }

          $el.find(classesToSelector(params.progressbarFillClass)).transform("translate3d(0,0,0) scaleX(".concat(scaleX, ") scaleY(").concat(scaleY, ")")).transition(swiper.params.speed);
        }

        if (params.type === 'custom' && params.renderCustom) {
          $el.html(params.renderCustom(swiper, current + 1, total));
          emit('paginationRender', $el[0]);
        } else {
          emit('paginationUpdate', $el[0]);
        }

        if (swiper.params.watchOverflow && swiper.enabled) {
          $el[swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);
        }
      }

      function render() {
        // Render Container
        var params = swiper.params.pagination;
        if (isPaginationDisabled()) return;
        var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;
        var $el = swiper.pagination.$el;
        var paginationHTML = '';

        if (params.type === 'bullets') {
          var numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;

          if (swiper.params.freeMode && swiper.params.freeMode.enabled && !swiper.params.loop && numberOfBullets > slidesLength) {
            numberOfBullets = slidesLength;
          }

          for (var i = 0; i < numberOfBullets; i += 1) {
            if (params.renderBullet) {
              paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);
            } else {
              paginationHTML += "<".concat(params.bulletElement, " class=\"").concat(params.bulletClass, "\"></").concat(params.bulletElement, ">");
            }
          }

          $el.html(paginationHTML);
          swiper.pagination.bullets = $el.find(classesToSelector(params.bulletClass));
        }

        if (params.type === 'fraction') {
          if (params.renderFraction) {
            paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);
          } else {
            paginationHTML = "<span class=\"".concat(params.currentClass, "\"></span>") + ' / ' + "<span class=\"".concat(params.totalClass, "\"></span>");
          }

          $el.html(paginationHTML);
        }

        if (params.type === 'progressbar') {
          if (params.renderProgressbar) {
            paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);
          } else {
            paginationHTML = "<span class=\"".concat(params.progressbarFillClass, "\"></span>");
          }

          $el.html(paginationHTML);
        }

        if (params.type !== 'custom') {
          emit('paginationRender', swiper.pagination.$el[0]);
        }
      }

      function init() {
        swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {
          el: 'swiper-pagination'
        });
        var params = swiper.params.pagination;
        if (!params.el) return;
        var $el = $(params.el);
        if ($el.length === 0) return;

        if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1) {
          $el = swiper.$el.find(params.el); // check if it belongs to another nested Swiper

          if ($el.length > 1) {
            $el = $el.filter(function (el) {
              if ($(el).parents('.swiper')[0] !== swiper.el) return false;
              return true;
            });
          }
        }

        if (params.type === 'bullets' && params.clickable) {
          $el.addClass(params.clickableClass);
        }

        $el.addClass(params.modifierClass + params.type);
        $el.addClass(params.modifierClass + swiper.params.direction);

        if (params.type === 'bullets' && params.dynamicBullets) {
          $el.addClass("".concat(params.modifierClass).concat(params.type, "-dynamic"));
          dynamicBulletIndex = 0;

          if (params.dynamicMainBullets < 1) {
            params.dynamicMainBullets = 1;
          }
        }

        if (params.type === 'progressbar' && params.progressbarOpposite) {
          $el.addClass(params.progressbarOppositeClass);
        }

        if (params.clickable) {
          $el.on('click', classesToSelector(params.bulletClass), function onClick(e) {
            e.preventDefault();
            var index = $(this).index() * swiper.params.slidesPerGroup;
            if (swiper.params.loop) index += swiper.loopedSlides;
            swiper.slideTo(index);
          });
        }

        Object.assign(swiper.pagination, {
          $el: $el,
          el: $el[0]
        });

        if (!swiper.enabled) {
          $el.addClass(params.lockClass);
        }
      }

      function destroy() {
        var params = swiper.params.pagination;
        if (isPaginationDisabled()) return;
        var $el = swiper.pagination.$el;
        $el.removeClass(params.hiddenClass);
        $el.removeClass(params.modifierClass + params.type);
        $el.removeClass(params.modifierClass + swiper.params.direction);
        if (swiper.pagination.bullets && swiper.pagination.bullets.removeClass) swiper.pagination.bullets.removeClass(params.bulletActiveClass);

        if (params.clickable) {
          $el.off('click', classesToSelector(params.bulletClass));
        }
      }

      on('init', function () {
        init();
        render();
        update();
      });
      on('activeIndexChange', function () {
        if (swiper.params.loop) {
          update();
        } else if (typeof swiper.snapIndex === 'undefined') {
          update();
        }
      });
      on('snapIndexChange', function () {
        if (!swiper.params.loop) {
          update();
        }
      });
      on('slidesLengthChange', function () {
        if (swiper.params.loop) {
          render();
          update();
        }
      });
      on('snapGridLengthChange', function () {
        if (!swiper.params.loop) {
          render();
          update();
        }
      });
      on('destroy', function () {
        destroy();
      });
      on('enable disable', function () {
        var $el = swiper.pagination.$el;

        if ($el) {
          $el[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.pagination.lockClass);
        }
      });
      on('lock unlock', function () {
        update();
      });
      on('click', function (_s, e) {
        var targetEl = e.target;
        var $el = swiper.pagination.$el;

        if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && $el.length > 0 && !$(targetEl).hasClass(swiper.params.pagination.bulletClass)) {
          if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;
          var isHidden = $el.hasClass(swiper.params.pagination.hiddenClass);

          if (isHidden === true) {
            emit('paginationShow');
          } else {
            emit('paginationHide');
          }

          $el.toggleClass(swiper.params.pagination.hiddenClass);
        }
      });
      Object.assign(swiper.pagination, {
        render: render,
        update: update,
        init: init,
        destroy: destroy
      });
    }

    function Scrollbar(_ref12) {
      var swiper = _ref12.swiper,
          extendParams = _ref12.extendParams,
          on = _ref12.on,
          emit = _ref12.emit;
      var document = getDocument();
      var isTouched = false;
      var timeout = null;
      var dragTimeout = null;
      var dragStartPos;
      var dragSize;
      var trackSize;
      var divider;
      extendParams({
        scrollbar: {
          el: null,
          dragSize: 'auto',
          hide: false,
          draggable: false,
          snapOnRelease: true,
          lockClass: 'swiper-scrollbar-lock',
          dragClass: 'swiper-scrollbar-drag'
        }
      });
      swiper.scrollbar = {
        el: null,
        dragEl: null,
        $el: null,
        $dragEl: null
      };

      function setTranslate() {
        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;
        var scrollbar = swiper.scrollbar,
            rtl = swiper.rtlTranslate,
            progress = swiper.progress;
        var $dragEl = scrollbar.$dragEl,
            $el = scrollbar.$el;
        var params = swiper.params.scrollbar;
        var newSize = dragSize;
        var newPos = (trackSize - dragSize) * progress;

        if (rtl) {
          newPos = -newPos;

          if (newPos > 0) {
            newSize = dragSize - newPos;
            newPos = 0;
          } else if (-newPos + dragSize > trackSize) {
            newSize = trackSize + newPos;
          }
        } else if (newPos < 0) {
          newSize = dragSize + newPos;
          newPos = 0;
        } else if (newPos + dragSize > trackSize) {
          newSize = trackSize - newPos;
        }

        if (swiper.isHorizontal()) {
          $dragEl.transform("translate3d(".concat(newPos, "px, 0, 0)"));
          $dragEl[0].style.width = "".concat(newSize, "px");
        } else {
          $dragEl.transform("translate3d(0px, ".concat(newPos, "px, 0)"));
          $dragEl[0].style.height = "".concat(newSize, "px");
        }

        if (params.hide) {
          clearTimeout(timeout);
          $el[0].style.opacity = 1;
          timeout = setTimeout(function () {
            $el[0].style.opacity = 0;
            $el.transition(400);
          }, 1000);
        }
      }

      function setTransition(duration) {
        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;
        swiper.scrollbar.$dragEl.transition(duration);
      }

      function updateSize() {
        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;
        var scrollbar = swiper.scrollbar;
        var $dragEl = scrollbar.$dragEl,
            $el = scrollbar.$el;
        $dragEl[0].style.width = '';
        $dragEl[0].style.height = '';
        trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;
        divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));

        if (swiper.params.scrollbar.dragSize === 'auto') {
          dragSize = trackSize * divider;
        } else {
          dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);
        }

        if (swiper.isHorizontal()) {
          $dragEl[0].style.width = "".concat(dragSize, "px");
        } else {
          $dragEl[0].style.height = "".concat(dragSize, "px");
        }

        if (divider >= 1) {
          $el[0].style.display = 'none';
        } else {
          $el[0].style.display = '';
        }

        if (swiper.params.scrollbar.hide) {
          $el[0].style.opacity = 0;
        }

        if (swiper.params.watchOverflow && swiper.enabled) {
          scrollbar.$el[swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);
        }
      }

      function getPointerPosition(e) {
        if (swiper.isHorizontal()) {
          return e.type === 'touchstart' || e.type === 'touchmove' ? e.targetTouches[0].clientX : e.clientX;
        }

        return e.type === 'touchstart' || e.type === 'touchmove' ? e.targetTouches[0].clientY : e.clientY;
      }

      function setDragPosition(e) {
        var scrollbar = swiper.scrollbar,
            rtl = swiper.rtlTranslate;
        var $el = scrollbar.$el;
        var positionRatio;
        positionRatio = (getPointerPosition(e) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);
        positionRatio = Math.max(Math.min(positionRatio, 1), 0);

        if (rtl) {
          positionRatio = 1 - positionRatio;
        }

        var position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;
        swiper.updateProgress(position);
        swiper.setTranslate(position);
        swiper.updateActiveIndex();
        swiper.updateSlidesClasses();
      }

      function onDragStart(e) {
        var params = swiper.params.scrollbar;
        var scrollbar = swiper.scrollbar,
            $wrapperEl = swiper.$wrapperEl;
        var $el = scrollbar.$el,
            $dragEl = scrollbar.$dragEl;
        isTouched = true;
        dragStartPos = e.target === $dragEl[0] || e.target === $dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;
        e.preventDefault();
        e.stopPropagation();
        $wrapperEl.transition(100);
        $dragEl.transition(100);
        setDragPosition(e);
        clearTimeout(dragTimeout);
        $el.transition(0);

        if (params.hide) {
          $el.css('opacity', 1);
        }

        if (swiper.params.cssMode) {
          swiper.$wrapperEl.css('scroll-snap-type', 'none');
        }

        emit('scrollbarDragStart', e);
      }

      function onDragMove(e) {
        var scrollbar = swiper.scrollbar,
            $wrapperEl = swiper.$wrapperEl;
        var $el = scrollbar.$el,
            $dragEl = scrollbar.$dragEl;
        if (!isTouched) return;
        if (e.preventDefault) e.preventDefault();else e.returnValue = false;
        setDragPosition(e);
        $wrapperEl.transition(0);
        $el.transition(0);
        $dragEl.transition(0);
        emit('scrollbarDragMove', e);
      }

      function onDragEnd(e) {
        var params = swiper.params.scrollbar;
        var scrollbar = swiper.scrollbar,
            $wrapperEl = swiper.$wrapperEl;
        var $el = scrollbar.$el;
        if (!isTouched) return;
        isTouched = false;

        if (swiper.params.cssMode) {
          swiper.$wrapperEl.css('scroll-snap-type', '');
          $wrapperEl.transition('');
        }

        if (params.hide) {
          clearTimeout(dragTimeout);
          dragTimeout = nextTick(function () {
            $el.css('opacity', 0);
            $el.transition(400);
          }, 1000);
        }

        emit('scrollbarDragEnd', e);

        if (params.snapOnRelease) {
          swiper.slideToClosest();
        }
      }

      function events(method) {
        var scrollbar = swiper.scrollbar,
            touchEventsTouch = swiper.touchEventsTouch,
            touchEventsDesktop = swiper.touchEventsDesktop,
            params = swiper.params,
            support = swiper.support;
        var $el = scrollbar.$el;
        var target = $el[0];
        var activeListener = support.passiveListener && params.passiveListeners ? {
          passive: false,
          capture: false
        } : false;
        var passiveListener = support.passiveListener && params.passiveListeners ? {
          passive: true,
          capture: false
        } : false;
        if (!target) return;
        var eventMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';

        if (!support.touch) {
          target[eventMethod](touchEventsDesktop.start, onDragStart, activeListener);
          document[eventMethod](touchEventsDesktop.move, onDragMove, activeListener);
          document[eventMethod](touchEventsDesktop.end, onDragEnd, passiveListener);
        } else {
          target[eventMethod](touchEventsTouch.start, onDragStart, activeListener);
          target[eventMethod](touchEventsTouch.move, onDragMove, activeListener);
          target[eventMethod](touchEventsTouch.end, onDragEnd, passiveListener);
        }
      }

      function enableDraggable() {
        if (!swiper.params.scrollbar.el) return;
        events('on');
      }

      function disableDraggable() {
        if (!swiper.params.scrollbar.el) return;
        events('off');
      }

      function init() {
        var scrollbar = swiper.scrollbar,
            $swiperEl = swiper.$el;
        swiper.params.scrollbar = createElementIfNotDefined(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {
          el: 'swiper-scrollbar'
        });
        var params = swiper.params.scrollbar;
        if (!params.el) return;
        var $el = $(params.el);

        if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {
          $el = $swiperEl.find(params.el);
        }

        var $dragEl = $el.find(".".concat(swiper.params.scrollbar.dragClass));

        if ($dragEl.length === 0) {
          $dragEl = $("<div class=\"".concat(swiper.params.scrollbar.dragClass, "\"></div>"));
          $el.append($dragEl);
        }

        Object.assign(scrollbar, {
          $el: $el,
          el: $el[0],
          $dragEl: $dragEl,
          dragEl: $dragEl[0]
        });

        if (params.draggable) {
          enableDraggable();
        }

        if ($el) {
          $el[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.scrollbar.lockClass);
        }
      }

      function destroy() {
        disableDraggable();
      }

      on('init', function () {
        init();
        updateSize();
        setTranslate();
      });
      on('update resize observerUpdate lock unlock', function () {
        updateSize();
      });
      on('setTranslate', function () {
        setTranslate();
      });
      on('setTransition', function (_s, duration) {
        setTransition(duration);
      });
      on('enable disable', function () {
        var $el = swiper.scrollbar.$el;

        if ($el) {
          $el[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.scrollbar.lockClass);
        }
      });
      on('destroy', function () {
        destroy();
      });
      Object.assign(swiper.scrollbar, {
        updateSize: updateSize,
        setTranslate: setTranslate,
        init: init,
        destroy: destroy
      });
    }

    function Parallax(_ref13) {
      var swiper = _ref13.swiper,
          extendParams = _ref13.extendParams,
          on = _ref13.on;
      extendParams({
        parallax: {
          enabled: false
        }
      });

      var setTransform = function setTransform(el, progress) {
        var rtl = swiper.rtl;
        var $el = $(el);
        var rtlFactor = rtl ? -1 : 1;
        var p = $el.attr('data-swiper-parallax') || '0';
        var x = $el.attr('data-swiper-parallax-x');
        var y = $el.attr('data-swiper-parallax-y');
        var scale = $el.attr('data-swiper-parallax-scale');
        var opacity = $el.attr('data-swiper-parallax-opacity');

        if (x || y) {
          x = x || '0';
          y = y || '0';
        } else if (swiper.isHorizontal()) {
          x = p;
          y = '0';
        } else {
          y = p;
          x = '0';
        }

        if (x.indexOf('%') >= 0) {
          x = "".concat(parseInt(x, 10) * progress * rtlFactor, "%");
        } else {
          x = "".concat(x * progress * rtlFactor, "px");
        }

        if (y.indexOf('%') >= 0) {
          y = "".concat(parseInt(y, 10) * progress, "%");
        } else {
          y = "".concat(y * progress, "px");
        }

        if (typeof opacity !== 'undefined' && opacity !== null) {
          var currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));
          $el[0].style.opacity = currentOpacity;
        }

        if (typeof scale === 'undefined' || scale === null) {
          $el.transform("translate3d(".concat(x, ", ").concat(y, ", 0px)"));
        } else {
          var currentScale = scale - (scale - 1) * (1 - Math.abs(progress));
          $el.transform("translate3d(".concat(x, ", ").concat(y, ", 0px) scale(").concat(currentScale, ")"));
        }
      };

      var setTranslate = function setTranslate() {
        var $el = swiper.$el,
            slides = swiper.slides,
            progress = swiper.progress,
            snapGrid = swiper.snapGrid;
        $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(function (el) {
          setTransform(el, progress);
        });
        slides.each(function (slideEl, slideIndex) {
          var slideProgress = slideEl.progress;

          if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {
            slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);
          }

          slideProgress = Math.min(Math.max(slideProgress, -1), 1);
          $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(function (el) {
            setTransform(el, slideProgress);
          });
        });
      };

      var setTransition = function setTransition() {
        var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : swiper.params.speed;
        var $el = swiper.$el;
        $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(function (parallaxEl) {
          var $parallaxEl = $(parallaxEl);
          var parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;
          if (duration === 0) parallaxDuration = 0;
          $parallaxEl.transition(parallaxDuration);
        });
      };

      on('beforeInit', function () {
        if (!swiper.params.parallax.enabled) return;
        swiper.params.watchSlidesProgress = true;
        swiper.originalParams.watchSlidesProgress = true;
      });
      on('init', function () {
        if (!swiper.params.parallax.enabled) return;
        setTranslate();
      });
      on('setTranslate', function () {
        if (!swiper.params.parallax.enabled) return;
        setTranslate();
      });
      on('setTransition', function (_swiper, duration) {
        if (!swiper.params.parallax.enabled) return;
        setTransition(duration);
      });
    }

    function Zoom(_ref14) {
      var swiper = _ref14.swiper,
          extendParams = _ref14.extendParams,
          on = _ref14.on,
          emit = _ref14.emit;
      var window = getWindow();
      extendParams({
        zoom: {
          enabled: false,
          maxRatio: 3,
          minRatio: 1,
          toggle: true,
          containerClass: 'swiper-zoom-container',
          zoomedSlideClass: 'swiper-slide-zoomed'
        }
      });
      swiper.zoom = {
        enabled: false
      };
      var currentScale = 1;
      var isScaling = false;
      var gesturesEnabled;
      var fakeGestureTouched;
      var fakeGestureMoved;
      var gesture = {
        $slideEl: undefined,
        slideWidth: undefined,
        slideHeight: undefined,
        $imageEl: undefined,
        $imageWrapEl: undefined,
        maxRatio: 3
      };
      var image = {
        isTouched: undefined,
        isMoved: undefined,
        currentX: undefined,
        currentY: undefined,
        minX: undefined,
        minY: undefined,
        maxX: undefined,
        maxY: undefined,
        width: undefined,
        height: undefined,
        startX: undefined,
        startY: undefined,
        touchesStart: {},
        touchesCurrent: {}
      };
      var velocity = {
        x: undefined,
        y: undefined,
        prevPositionX: undefined,
        prevPositionY: undefined,
        prevTime: undefined
      };
      var scale = 1;
      Object.defineProperty(swiper.zoom, 'scale', {
        get: function get() {
          return scale;
        },
        set: function set(value) {
          if (scale !== value) {
            var imageEl = gesture.$imageEl ? gesture.$imageEl[0] : undefined;
            var slideEl = gesture.$slideEl ? gesture.$slideEl[0] : undefined;
            emit('zoomChange', value, imageEl, slideEl);
          }

          scale = value;
        }
      });

      function getDistanceBetweenTouches(e) {
        if (e.targetTouches.length < 2) return 1;
        var x1 = e.targetTouches[0].pageX;
        var y1 = e.targetTouches[0].pageY;
        var x2 = e.targetTouches[1].pageX;
        var y2 = e.targetTouches[1].pageY;
        var distance = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));
        return distance;
      } // Events


      function onGestureStart(e) {
        var support = swiper.support;
        var params = swiper.params.zoom;
        fakeGestureTouched = false;
        fakeGestureMoved = false;

        if (!support.gestures) {
          if (e.type !== 'touchstart' || e.type === 'touchstart' && e.targetTouches.length < 2) {
            return;
          }

          fakeGestureTouched = true;
          gesture.scaleStart = getDistanceBetweenTouches(e);
        }

        if (!gesture.$slideEl || !gesture.$slideEl.length) {
          gesture.$slideEl = $(e.target).closest(".".concat(swiper.params.slideClass));
          if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);
          gesture.$imageEl = gesture.$slideEl.find(".".concat(params.containerClass)).eq(0).find('picture, img, svg, canvas, .swiper-zoom-target').eq(0);
          gesture.$imageWrapEl = gesture.$imageEl.parent(".".concat(params.containerClass));
          gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;

          if (gesture.$imageWrapEl.length === 0) {
            gesture.$imageEl = undefined;
            return;
          }
        }

        if (gesture.$imageEl) {
          gesture.$imageEl.transition(0);
        }

        isScaling = true;
      }

      function onGestureChange(e) {
        var support = swiper.support;
        var params = swiper.params.zoom;
        var zoom = swiper.zoom;

        if (!support.gestures) {
          if (e.type !== 'touchmove' || e.type === 'touchmove' && e.targetTouches.length < 2) {
            return;
          }

          fakeGestureMoved = true;
          gesture.scaleMove = getDistanceBetweenTouches(e);
        }

        if (!gesture.$imageEl || gesture.$imageEl.length === 0) {
          if (e.type === 'gesturechange') onGestureStart(e);
          return;
        }

        if (support.gestures) {
          zoom.scale = e.scale * currentScale;
        } else {
          zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;
        }

        if (zoom.scale > gesture.maxRatio) {
          zoom.scale = gesture.maxRatio - 1 + Math.pow(zoom.scale - gesture.maxRatio + 1, 0.5);
        }

        if (zoom.scale < params.minRatio) {
          zoom.scale = params.minRatio + 1 - Math.pow(params.minRatio - zoom.scale + 1, 0.5);
        }

        gesture.$imageEl.transform("translate3d(0,0,0) scale(".concat(zoom.scale, ")"));
      }

      function onGestureEnd(e) {
        var device = swiper.device;
        var support = swiper.support;
        var params = swiper.params.zoom;
        var zoom = swiper.zoom;

        if (!support.gestures) {
          if (!fakeGestureTouched || !fakeGestureMoved) {
            return;
          }

          if (e.type !== 'touchend' || e.type === 'touchend' && e.changedTouches.length < 2 && !device.android) {
            return;
          }

          fakeGestureTouched = false;
          fakeGestureMoved = false;
        }

        if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;
        zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);
        gesture.$imageEl.transition(swiper.params.speed).transform("translate3d(0,0,0) scale(".concat(zoom.scale, ")"));
        currentScale = zoom.scale;
        isScaling = false;
        if (zoom.scale === 1) gesture.$slideEl = undefined;
      }

      function onTouchStart(e) {
        var device = swiper.device;
        if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;
        if (image.isTouched) return;
        if (device.android && e.cancelable) e.preventDefault();
        image.isTouched = true;
        image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;
        image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;
      }

      function onTouchMove(e) {
        var zoom = swiper.zoom;
        if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;
        swiper.allowClick = false;
        if (!image.isTouched || !gesture.$slideEl) return;

        if (!image.isMoved) {
          image.width = gesture.$imageEl[0].offsetWidth;
          image.height = gesture.$imageEl[0].offsetHeight;
          image.startX = getTranslate(gesture.$imageWrapEl[0], 'x') || 0;
          image.startY = getTranslate(gesture.$imageWrapEl[0], 'y') || 0;
          gesture.slideWidth = gesture.$slideEl[0].offsetWidth;
          gesture.slideHeight = gesture.$slideEl[0].offsetHeight;
          gesture.$imageWrapEl.transition(0);
        } // Define if we need image drag


        var scaledWidth = image.width * zoom.scale;
        var scaledHeight = image.height * zoom.scale;
        if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;
        image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);
        image.maxX = -image.minX;
        image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);
        image.maxY = -image.minY;
        image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;
        image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;

        if (!image.isMoved && !isScaling) {
          if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {
            image.isTouched = false;
            return;
          }

          if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {
            image.isTouched = false;
            return;
          }
        }

        if (e.cancelable) {
          e.preventDefault();
        }

        e.stopPropagation();
        image.isMoved = true;
        image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX;
        image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY;

        if (image.currentX < image.minX) {
          image.currentX = image.minX + 1 - Math.pow(image.minX - image.currentX + 1, 0.8);
        }

        if (image.currentX > image.maxX) {
          image.currentX = image.maxX - 1 + Math.pow(image.currentX - image.maxX + 1, 0.8);
        }

        if (image.currentY < image.minY) {
          image.currentY = image.minY + 1 - Math.pow(image.minY - image.currentY + 1, 0.8);
        }

        if (image.currentY > image.maxY) {
          image.currentY = image.maxY - 1 + Math.pow(image.currentY - image.maxY + 1, 0.8);
        } // Velocity


        if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;
        if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;
        if (!velocity.prevTime) velocity.prevTime = Date.now();
        velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;
        velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;
        if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;
        if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;
        velocity.prevPositionX = image.touchesCurrent.x;
        velocity.prevPositionY = image.touchesCurrent.y;
        velocity.prevTime = Date.now();
        gesture.$imageWrapEl.transform("translate3d(".concat(image.currentX, "px, ").concat(image.currentY, "px,0)"));
      }

      function onTouchEnd() {
        var zoom = swiper.zoom;
        if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;

        if (!image.isTouched || !image.isMoved) {
          image.isTouched = false;
          image.isMoved = false;
          return;
        }

        image.isTouched = false;
        image.isMoved = false;
        var momentumDurationX = 300;
        var momentumDurationY = 300;
        var momentumDistanceX = velocity.x * momentumDurationX;
        var newPositionX = image.currentX + momentumDistanceX;
        var momentumDistanceY = velocity.y * momentumDurationY;
        var newPositionY = image.currentY + momentumDistanceY; // Fix duration

        if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);
        if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);
        var momentumDuration = Math.max(momentumDurationX, momentumDurationY);
        image.currentX = newPositionX;
        image.currentY = newPositionY; // Define if we need image drag

        var scaledWidth = image.width * zoom.scale;
        var scaledHeight = image.height * zoom.scale;
        image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);
        image.maxX = -image.minX;
        image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);
        image.maxY = -image.minY;
        image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);
        image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);
        gesture.$imageWrapEl.transition(momentumDuration).transform("translate3d(".concat(image.currentX, "px, ").concat(image.currentY, "px,0)"));
      }

      function onTransitionEnd() {
        var zoom = swiper.zoom;

        if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {
          if (gesture.$imageEl) {
            gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');
          }

          if (gesture.$imageWrapEl) {
            gesture.$imageWrapEl.transform('translate3d(0,0,0)');
          }

          zoom.scale = 1;
          currentScale = 1;
          gesture.$slideEl = undefined;
          gesture.$imageEl = undefined;
          gesture.$imageWrapEl = undefined;
        }
      }

      function zoomIn(e) {
        var zoom = swiper.zoom;
        var params = swiper.params.zoom;

        if (!gesture.$slideEl) {
          if (e && e.target) {
            gesture.$slideEl = $(e.target).closest(".".concat(swiper.params.slideClass));
          }

          if (!gesture.$slideEl) {
            if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {
              gesture.$slideEl = swiper.$wrapperEl.children(".".concat(swiper.params.slideActiveClass));
            } else {
              gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);
            }
          }

          gesture.$imageEl = gesture.$slideEl.find(".".concat(params.containerClass)).eq(0).find('picture, img, svg, canvas, .swiper-zoom-target').eq(0);
          gesture.$imageWrapEl = gesture.$imageEl.parent(".".concat(params.containerClass));
        }

        if (!gesture.$imageEl || gesture.$imageEl.length === 0 || !gesture.$imageWrapEl || gesture.$imageWrapEl.length === 0) return;

        if (swiper.params.cssMode) {
          swiper.wrapperEl.style.overflow = 'hidden';
          swiper.wrapperEl.style.touchAction = 'none';
        }

        gesture.$slideEl.addClass("".concat(params.zoomedSlideClass));
        var touchX;
        var touchY;
        var offsetX;
        var offsetY;
        var diffX;
        var diffY;
        var translateX;
        var translateY;
        var imageWidth;
        var imageHeight;
        var scaledWidth;
        var scaledHeight;
        var translateMinX;
        var translateMinY;
        var translateMaxX;
        var translateMaxY;
        var slideWidth;
        var slideHeight;

        if (typeof image.touchesStart.x === 'undefined' && e) {
          touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;
          touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;
        } else {
          touchX = image.touchesStart.x;
          touchY = image.touchesStart.y;
        }

        zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;
        currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;

        if (e) {
          slideWidth = gesture.$slideEl[0].offsetWidth;
          slideHeight = gesture.$slideEl[0].offsetHeight;
          offsetX = gesture.$slideEl.offset().left + window.scrollX;
          offsetY = gesture.$slideEl.offset().top + window.scrollY;
          diffX = offsetX + slideWidth / 2 - touchX;
          diffY = offsetY + slideHeight / 2 - touchY;
          imageWidth = gesture.$imageEl[0].offsetWidth;
          imageHeight = gesture.$imageEl[0].offsetHeight;
          scaledWidth = imageWidth * zoom.scale;
          scaledHeight = imageHeight * zoom.scale;
          translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);
          translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);
          translateMaxX = -translateMinX;
          translateMaxY = -translateMinY;
          translateX = diffX * zoom.scale;
          translateY = diffY * zoom.scale;

          if (translateX < translateMinX) {
            translateX = translateMinX;
          }

          if (translateX > translateMaxX) {
            translateX = translateMaxX;
          }

          if (translateY < translateMinY) {
            translateY = translateMinY;
          }

          if (translateY > translateMaxY) {
            translateY = translateMaxY;
          }
        } else {
          translateX = 0;
          translateY = 0;
        }

        gesture.$imageWrapEl.transition(300).transform("translate3d(".concat(translateX, "px, ").concat(translateY, "px,0)"));
        gesture.$imageEl.transition(300).transform("translate3d(0,0,0) scale(".concat(zoom.scale, ")"));
      }

      function zoomOut() {
        var zoom = swiper.zoom;
        var params = swiper.params.zoom;

        if (!gesture.$slideEl) {
          if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {
            gesture.$slideEl = swiper.$wrapperEl.children(".".concat(swiper.params.slideActiveClass));
          } else {
            gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);
          }

          gesture.$imageEl = gesture.$slideEl.find(".".concat(params.containerClass)).eq(0).find('picture, img, svg, canvas, .swiper-zoom-target').eq(0);
          gesture.$imageWrapEl = gesture.$imageEl.parent(".".concat(params.containerClass));
        }

        if (!gesture.$imageEl || gesture.$imageEl.length === 0 || !gesture.$imageWrapEl || gesture.$imageWrapEl.length === 0) return;

        if (swiper.params.cssMode) {
          swiper.wrapperEl.style.overflow = '';
          swiper.wrapperEl.style.touchAction = '';
        }

        zoom.scale = 1;
        currentScale = 1;
        gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');
        gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');
        gesture.$slideEl.removeClass("".concat(params.zoomedSlideClass));
        gesture.$slideEl = undefined;
      } // Toggle Zoom


      function zoomToggle(e) {
        var zoom = swiper.zoom;

        if (zoom.scale && zoom.scale !== 1) {
          // Zoom Out
          zoomOut();
        } else {
          // Zoom In
          zoomIn(e);
        }
      }

      function getListeners() {
        var support = swiper.support;
        var passiveListener = swiper.touchEvents.start === 'touchstart' && support.passiveListener && swiper.params.passiveListeners ? {
          passive: true,
          capture: false
        } : false;
        var activeListenerWithCapture = support.passiveListener ? {
          passive: false,
          capture: true
        } : true;
        return {
          passiveListener: passiveListener,
          activeListenerWithCapture: activeListenerWithCapture
        };
      }

      function getSlideSelector() {
        return ".".concat(swiper.params.slideClass);
      }

      function toggleGestures(method) {
        var _getListeners = getListeners(),
            passiveListener = _getListeners.passiveListener;

        var slideSelector = getSlideSelector();
        swiper.$wrapperEl[method]('gesturestart', slideSelector, onGestureStart, passiveListener);
        swiper.$wrapperEl[method]('gesturechange', slideSelector, onGestureChange, passiveListener);
        swiper.$wrapperEl[method]('gestureend', slideSelector, onGestureEnd, passiveListener);
      }

      function enableGestures() {
        if (gesturesEnabled) return;
        gesturesEnabled = true;
        toggleGestures('on');
      }

      function disableGestures() {
        if (!gesturesEnabled) return;
        gesturesEnabled = false;
        toggleGestures('off');
      } // Attach/Detach Events


      function enable() {
        var zoom = swiper.zoom;
        if (zoom.enabled) return;
        zoom.enabled = true;
        var support = swiper.support;

        var _getListeners2 = getListeners(),
            passiveListener = _getListeners2.passiveListener,
            activeListenerWithCapture = _getListeners2.activeListenerWithCapture;

        var slideSelector = getSlideSelector(); // Scale image

        if (support.gestures) {
          swiper.$wrapperEl.on(swiper.touchEvents.start, enableGestures, passiveListener);
          swiper.$wrapperEl.on(swiper.touchEvents.end, disableGestures, passiveListener);
        } else if (swiper.touchEvents.start === 'touchstart') {
          swiper.$wrapperEl.on(swiper.touchEvents.start, slideSelector, onGestureStart, passiveListener);
          swiper.$wrapperEl.on(swiper.touchEvents.move, slideSelector, onGestureChange, activeListenerWithCapture);
          swiper.$wrapperEl.on(swiper.touchEvents.end, slideSelector, onGestureEnd, passiveListener);

          if (swiper.touchEvents.cancel) {
            swiper.$wrapperEl.on(swiper.touchEvents.cancel, slideSelector, onGestureEnd, passiveListener);
          }
        } // Move image


        swiper.$wrapperEl.on(swiper.touchEvents.move, ".".concat(swiper.params.zoom.containerClass), onTouchMove, activeListenerWithCapture);
      }

      function disable() {
        var zoom = swiper.zoom;
        if (!zoom.enabled) return;
        var support = swiper.support;
        zoom.enabled = false;

        var _getListeners3 = getListeners(),
            passiveListener = _getListeners3.passiveListener,
            activeListenerWithCapture = _getListeners3.activeListenerWithCapture;

        var slideSelector = getSlideSelector(); // Scale image

        if (support.gestures) {
          swiper.$wrapperEl.off(swiper.touchEvents.start, enableGestures, passiveListener);
          swiper.$wrapperEl.off(swiper.touchEvents.end, disableGestures, passiveListener);
        } else if (swiper.touchEvents.start === 'touchstart') {
          swiper.$wrapperEl.off(swiper.touchEvents.start, slideSelector, onGestureStart, passiveListener);
          swiper.$wrapperEl.off(swiper.touchEvents.move, slideSelector, onGestureChange, activeListenerWithCapture);
          swiper.$wrapperEl.off(swiper.touchEvents.end, slideSelector, onGestureEnd, passiveListener);

          if (swiper.touchEvents.cancel) {
            swiper.$wrapperEl.off(swiper.touchEvents.cancel, slideSelector, onGestureEnd, passiveListener);
          }
        } // Move image


        swiper.$wrapperEl.off(swiper.touchEvents.move, ".".concat(swiper.params.zoom.containerClass), onTouchMove, activeListenerWithCapture);
      }

      on('init', function () {
        if (swiper.params.zoom.enabled) {
          enable();
        }
      });
      on('destroy', function () {
        disable();
      });
      on('touchStart', function (_s, e) {
        if (!swiper.zoom.enabled) return;
        onTouchStart(e);
      });
      on('touchEnd', function (_s, e) {
        if (!swiper.zoom.enabled) return;
        onTouchEnd();
      });
      on('doubleTap', function (_s, e) {
        if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {
          zoomToggle(e);
        }
      });
      on('transitionEnd', function () {
        if (swiper.zoom.enabled && swiper.params.zoom.enabled) {
          onTransitionEnd();
        }
      });
      on('slideChange', function () {
        if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {
          onTransitionEnd();
        }
      });
      Object.assign(swiper.zoom, {
        enable: enable,
        disable: disable,
        in: zoomIn,
        out: zoomOut,
        toggle: zoomToggle
      });
    }

    function Lazy(_ref15) {
      var swiper = _ref15.swiper,
          extendParams = _ref15.extendParams,
          on = _ref15.on,
          emit = _ref15.emit;
      extendParams({
        lazy: {
          checkInView: false,
          enabled: false,
          loadPrevNext: false,
          loadPrevNextAmount: 1,
          loadOnTransitionStart: false,
          scrollingElement: '',
          elementClass: 'swiper-lazy',
          loadingClass: 'swiper-lazy-loading',
          loadedClass: 'swiper-lazy-loaded',
          preloaderClass: 'swiper-lazy-preloader'
        }
      });
      swiper.lazy = {};
      var scrollHandlerAttached = false;
      var initialImageLoaded = false;

      function loadInSlide(index) {
        var loadInDuplicate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
        var params = swiper.params.lazy;
        if (typeof index === 'undefined') return;
        if (swiper.slides.length === 0) return;
        var isVirtual = swiper.virtual && swiper.params.virtual.enabled;
        var $slideEl = isVirtual ? swiper.$wrapperEl.children(".".concat(swiper.params.slideClass, "[data-swiper-slide-index=\"").concat(index, "\"]")) : swiper.slides.eq(index);
        var $images = $slideEl.find(".".concat(params.elementClass, ":not(.").concat(params.loadedClass, "):not(.").concat(params.loadingClass, ")"));

        if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {
          $images.push($slideEl[0]);
        }

        if ($images.length === 0) return;
        $images.each(function (imageEl) {
          var $imageEl = $(imageEl);
          $imageEl.addClass(params.loadingClass);
          var background = $imageEl.attr('data-background');
          var src = $imageEl.attr('data-src');
          var srcset = $imageEl.attr('data-srcset');
          var sizes = $imageEl.attr('data-sizes');
          var $pictureEl = $imageEl.parent('picture');
          swiper.loadImage($imageEl[0], src || background, srcset, sizes, false, function () {
            if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper && !swiper.params || swiper.destroyed) return;

            if (background) {
              $imageEl.css('background-image', "url(\"".concat(background, "\")"));
              $imageEl.removeAttr('data-background');
            } else {
              if (srcset) {
                $imageEl.attr('srcset', srcset);
                $imageEl.removeAttr('data-srcset');
              }

              if (sizes) {
                $imageEl.attr('sizes', sizes);
                $imageEl.removeAttr('data-sizes');
              }

              if ($pictureEl.length) {
                $pictureEl.children('source').each(function (sourceEl) {
                  var $source = $(sourceEl);

                  if ($source.attr('data-srcset')) {
                    $source.attr('srcset', $source.attr('data-srcset'));
                    $source.removeAttr('data-srcset');
                  }
                });
              }

              if (src) {
                $imageEl.attr('src', src);
                $imageEl.removeAttr('data-src');
              }
            }

            $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);
            $slideEl.find(".".concat(params.preloaderClass)).remove();

            if (swiper.params.loop && loadInDuplicate) {
              var slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');

              if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {
                var originalSlide = swiper.$wrapperEl.children("[data-swiper-slide-index=\"".concat(slideOriginalIndex, "\"]:not(.").concat(swiper.params.slideDuplicateClass, ")"));
                loadInSlide(originalSlide.index(), false);
              } else {
                var duplicatedSlide = swiper.$wrapperEl.children(".".concat(swiper.params.slideDuplicateClass, "[data-swiper-slide-index=\"").concat(slideOriginalIndex, "\"]"));
                loadInSlide(duplicatedSlide.index(), false);
              }
            }

            emit('lazyImageReady', $slideEl[0], $imageEl[0]);

            if (swiper.params.autoHeight) {
              swiper.updateAutoHeight();
            }
          });
          emit('lazyImageLoad', $slideEl[0], $imageEl[0]);
        });
      }

      function load() {
        var $wrapperEl = swiper.$wrapperEl,
            swiperParams = swiper.params,
            slides = swiper.slides,
            activeIndex = swiper.activeIndex;
        var isVirtual = swiper.virtual && swiperParams.virtual.enabled;
        var params = swiperParams.lazy;
        var slidesPerView = swiperParams.slidesPerView;

        if (slidesPerView === 'auto') {
          slidesPerView = 0;
        }

        function slideExist(index) {
          if (isVirtual) {
            if ($wrapperEl.children(".".concat(swiperParams.slideClass, "[data-swiper-slide-index=\"").concat(index, "\"]")).length) {
              return true;
            }
          } else if (slides[index]) return true;

          return false;
        }

        function slideIndex(slideEl) {
          if (isVirtual) {
            return $(slideEl).attr('data-swiper-slide-index');
          }

          return $(slideEl).index();
        }

        if (!initialImageLoaded) initialImageLoaded = true;

        if (swiper.params.watchSlidesProgress) {
          $wrapperEl.children(".".concat(swiperParams.slideVisibleClass)).each(function (slideEl) {
            var index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();
            loadInSlide(index);
          });
        } else if (slidesPerView > 1) {
          for (var i = activeIndex; i < activeIndex + slidesPerView; i += 1) {
            if (slideExist(i)) loadInSlide(i);
          }
        } else {
          loadInSlide(activeIndex);
        }

        if (params.loadPrevNext) {
          if (slidesPerView > 1 || params.loadPrevNextAmount && params.loadPrevNextAmount > 1) {
            var amount = params.loadPrevNextAmount;
            var spv = slidesPerView;
            var maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);
            var minIndex = Math.max(activeIndex - Math.max(spv, amount), 0); // Next Slides

            for (var _i9 = activeIndex + slidesPerView; _i9 < maxIndex; _i9 += 1) {
              if (slideExist(_i9)) loadInSlide(_i9);
            } // Prev Slides


            for (var _i10 = minIndex; _i10 < activeIndex; _i10 += 1) {
              if (slideExist(_i10)) loadInSlide(_i10);
            }
          } else {
            var nextSlide = $wrapperEl.children(".".concat(swiperParams.slideNextClass));
            if (nextSlide.length > 0) loadInSlide(slideIndex(nextSlide));
            var prevSlide = $wrapperEl.children(".".concat(swiperParams.slidePrevClass));
            if (prevSlide.length > 0) loadInSlide(slideIndex(prevSlide));
          }
        }
      }

      function checkInViewOnLoad() {
        var window = getWindow();
        if (!swiper || swiper.destroyed) return;
        var $scrollElement = swiper.params.lazy.scrollingElement ? $(swiper.params.lazy.scrollingElement) : $(window);
        var isWindow = $scrollElement[0] === window;
        var scrollElementWidth = isWindow ? window.innerWidth : $scrollElement[0].offsetWidth;
        var scrollElementHeight = isWindow ? window.innerHeight : $scrollElement[0].offsetHeight;
        var swiperOffset = swiper.$el.offset();
        var rtl = swiper.rtlTranslate;
        var inView = false;
        if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;
        var swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiper.width, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiper.height], [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height]];

        for (var i = 0; i < swiperCoord.length; i += 1) {
          var point = swiperCoord[i];

          if (point[0] >= 0 && point[0] <= scrollElementWidth && point[1] >= 0 && point[1] <= scrollElementHeight) {
            if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line

            inView = true;
          }
        }

        var passiveListener = swiper.touchEvents.start === 'touchstart' && swiper.support.passiveListener && swiper.params.passiveListeners ? {
          passive: true,
          capture: false
        } : false;

        if (inView) {
          load();
          $scrollElement.off('scroll', checkInViewOnLoad, passiveListener);
        } else if (!scrollHandlerAttached) {
          scrollHandlerAttached = true;
          $scrollElement.on('scroll', checkInViewOnLoad, passiveListener);
        }
      }

      on('beforeInit', function () {
        if (swiper.params.lazy.enabled && swiper.params.preloadImages) {
          swiper.params.preloadImages = false;
        }
      });
      on('init', function () {
        if (swiper.params.lazy.enabled) {
          if (swiper.params.lazy.checkInView) {
            checkInViewOnLoad();
          } else {
            load();
          }
        }
      });
      on('scroll', function () {
        if (swiper.params.freeMode && swiper.params.freeMode.enabled && !swiper.params.freeMode.sticky) {
          load();
        }
      });
      on('scrollbarDragMove resize _freeModeNoMomentumRelease', function () {
        if (swiper.params.lazy.enabled) {
          if (swiper.params.lazy.checkInView) {
            checkInViewOnLoad();
          } else {
            load();
          }
        }
      });
      on('transitionStart', function () {
        if (swiper.params.lazy.enabled) {
          if (swiper.params.lazy.loadOnTransitionStart || !swiper.params.lazy.loadOnTransitionStart && !initialImageLoaded) {
            if (swiper.params.lazy.checkInView) {
              checkInViewOnLoad();
            } else {
              load();
            }
          }
        }
      });
      on('transitionEnd', function () {
        if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {
          if (swiper.params.lazy.checkInView) {
            checkInViewOnLoad();
          } else {
            load();
          }
        }
      });
      on('slideChange', function () {
        var _swiper$params2 = swiper.params,
            lazy = _swiper$params2.lazy,
            cssMode = _swiper$params2.cssMode,
            watchSlidesProgress = _swiper$params2.watchSlidesProgress,
            touchReleaseOnEdges = _swiper$params2.touchReleaseOnEdges,
            resistanceRatio = _swiper$params2.resistanceRatio;

        if (lazy.enabled && (cssMode || watchSlidesProgress && (touchReleaseOnEdges || resistanceRatio === 0))) {
          load();
        }
      });
      Object.assign(swiper.lazy, {
        load: load,
        loadInSlide: loadInSlide
      });
    }
    /* eslint no-bitwise: ["error", { "allow": [">>"] }] */


    function Controller(_ref16) {
      var swiper = _ref16.swiper,
          extendParams = _ref16.extendParams,
          on = _ref16.on;
      extendParams({
        controller: {
          control: undefined,
          inverse: false,
          by: 'slide' // or 'container'

        }
      });
      swiper.controller = {
        control: undefined
      };

      function LinearSpline(x, y) {
        var binarySearch = function search() {
          var maxIndex;
          var minIndex;
          var guess;
          return function (array, val) {
            minIndex = -1;
            maxIndex = array.length;

            while (maxIndex - minIndex > 1) {
              guess = maxIndex + minIndex >> 1;

              if (array[guess] <= val) {
                minIndex = guess;
              } else {
                maxIndex = guess;
              }
            }

            return maxIndex;
          };
        }();

        this.x = x;
        this.y = y;
        this.lastIndex = x.length - 1; // Given an x value (x2), return the expected y2 value:
        // (x1,y1) is the known point before given value,
        // (x3,y3) is the known point after given value.

        var i1;
        var i3;

        this.interpolate = function interpolate(x2) {
          if (!x2) return 0; // Get the indexes of x1 and x3 (the array indexes before and after given x2):

          i3 = binarySearch(this.x, x2);
          i1 = i3 - 1; // We have our indexes i1 & i3, so we can calculate already:
          // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1

          return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];
        };

        return this;
      } // xxx: for now i will just save one spline function to to


      function getInterpolateFunction(c) {
        if (!swiper.controller.spline) {
          swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);
        }
      }

      function setTranslate(_t, byController) {
        var controlled = swiper.controller.control;
        var multiplier;
        var controlledTranslate;
        var Swiper = swiper.constructor;

        function setControlledTranslate(c) {
          // this will create an Interpolate function based on the snapGrids
          // x is the Grid of the scrolled scroller and y will be the controlled scroller
          // it makes sense to create this only once and recall it for the interpolation
          // the function does a lot of value caching for performance
          var translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;

          if (swiper.params.controller.by === 'slide') {
            getInterpolateFunction(c); // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid
            // but it did not work out

            controlledTranslate = -swiper.controller.spline.interpolate(-translate);
          }

          if (!controlledTranslate || swiper.params.controller.by === 'container') {
            multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());
            controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();
          }

          if (swiper.params.controller.inverse) {
            controlledTranslate = c.maxTranslate() - controlledTranslate;
          }

          c.updateProgress(controlledTranslate);
          c.setTranslate(controlledTranslate, swiper);
          c.updateActiveIndex();
          c.updateSlidesClasses();
        }

        if (Array.isArray(controlled)) {
          for (var i = 0; i < controlled.length; i += 1) {
            if (controlled[i] !== byController && controlled[i] instanceof Swiper) {
              setControlledTranslate(controlled[i]);
            }
          }
        } else if (controlled instanceof Swiper && byController !== controlled) {
          setControlledTranslate(controlled);
        }
      }

      function setTransition(duration, byController) {
        var Swiper = swiper.constructor;
        var controlled = swiper.controller.control;
        var i;

        function setControlledTransition(c) {
          c.setTransition(duration, swiper);

          if (duration !== 0) {
            c.transitionStart();

            if (c.params.autoHeight) {
              nextTick(function () {
                c.updateAutoHeight();
              });
            }

            c.$wrapperEl.transitionEnd(function () {
              if (!controlled) return;

              if (c.params.loop && swiper.params.controller.by === 'slide') {
                c.loopFix();
              }

              c.transitionEnd();
            });
          }
        }

        if (Array.isArray(controlled)) {
          for (i = 0; i < controlled.length; i += 1) {
            if (controlled[i] !== byController && controlled[i] instanceof Swiper) {
              setControlledTransition(controlled[i]);
            }
          }
        } else if (controlled instanceof Swiper && byController !== controlled) {
          setControlledTransition(controlled);
        }
      }

      function removeSpline() {
        if (!swiper.controller.control) return;

        if (swiper.controller.spline) {
          swiper.controller.spline = undefined;
          delete swiper.controller.spline;
        }
      }

      on('beforeInit', function () {
        swiper.controller.control = swiper.params.controller.control;
      });
      on('update', function () {
        removeSpline();
      });
      on('resize', function () {
        removeSpline();
      });
      on('observerUpdate', function () {
        removeSpline();
      });
      on('setTranslate', function (_s, translate, byController) {
        if (!swiper.controller.control) return;
        swiper.controller.setTranslate(translate, byController);
      });
      on('setTransition', function (_s, duration, byController) {
        if (!swiper.controller.control) return;
        swiper.controller.setTransition(duration, byController);
      });
      Object.assign(swiper.controller, {
        setTranslate: setTranslate,
        setTransition: setTransition
      });
    }

    function A11y(_ref17) {
      var swiper = _ref17.swiper,
          extendParams = _ref17.extendParams,
          on = _ref17.on;
      extendParams({
        a11y: {
          enabled: true,
          notificationClass: 'swiper-notification',
          prevSlideMessage: 'Previous slide',
          nextSlideMessage: 'Next slide',
          firstSlideMessage: 'This is the first slide',
          lastSlideMessage: 'This is the last slide',
          paginationBulletMessage: 'Go to slide {{index}}',
          slideLabelMessage: '{{index}} / {{slidesLength}}',
          containerMessage: null,
          containerRoleDescriptionMessage: null,
          itemRoleDescriptionMessage: null,
          slideRole: 'group'
        }
      });
      var liveRegion = null;

      function notify(message) {
        var notification = liveRegion;
        if (notification.length === 0) return;
        notification.html('');
        notification.html(message);
      }

      function getRandomNumber() {
        var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 16;

        var randomChar = function randomChar() {
          return Math.round(16 * Math.random()).toString(16);
        };

        return 'x'.repeat(size).replace(/x/g, randomChar);
      }

      function makeElFocusable($el) {
        $el.attr('tabIndex', '0');
      }

      function makeElNotFocusable($el) {
        $el.attr('tabIndex', '-1');
      }

      function addElRole($el, role) {
        $el.attr('role', role);
      }

      function addElRoleDescription($el, description) {
        $el.attr('aria-roledescription', description);
      }

      function addElControls($el, controls) {
        $el.attr('aria-controls', controls);
      }

      function addElLabel($el, label) {
        $el.attr('aria-label', label);
      }

      function addElId($el, id) {
        $el.attr('id', id);
      }

      function addElLive($el, live) {
        $el.attr('aria-live', live);
      }

      function disableEl($el) {
        $el.attr('aria-disabled', true);
      }

      function enableEl($el) {
        $el.attr('aria-disabled', false);
      }

      function onEnterOrSpaceKey(e) {
        if (e.keyCode !== 13 && e.keyCode !== 32) return;
        var params = swiper.params.a11y;
        var $targetEl = $(e.target);

        if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {
          if (!(swiper.isEnd && !swiper.params.loop)) {
            swiper.slideNext();
          }

          if (swiper.isEnd) {
            notify(params.lastSlideMessage);
          } else {
            notify(params.nextSlideMessage);
          }
        }

        if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {
          if (!(swiper.isBeginning && !swiper.params.loop)) {
            swiper.slidePrev();
          }

          if (swiper.isBeginning) {
            notify(params.firstSlideMessage);
          } else {
            notify(params.prevSlideMessage);
          }
        }

        if (swiper.pagination && $targetEl.is(classesToSelector(swiper.params.pagination.bulletClass))) {
          $targetEl[0].click();
        }
      }

      function updateNavigation() {
        if (swiper.params.loop || swiper.params.rewind || !swiper.navigation) return;
        var _swiper$navigation5 = swiper.navigation,
            $nextEl = _swiper$navigation5.$nextEl,
            $prevEl = _swiper$navigation5.$prevEl;

        if ($prevEl && $prevEl.length > 0) {
          if (swiper.isBeginning) {
            disableEl($prevEl);
            makeElNotFocusable($prevEl);
          } else {
            enableEl($prevEl);
            makeElFocusable($prevEl);
          }
        }

        if ($nextEl && $nextEl.length > 0) {
          if (swiper.isEnd) {
            disableEl($nextEl);
            makeElNotFocusable($nextEl);
          } else {
            enableEl($nextEl);
            makeElFocusable($nextEl);
          }
        }
      }

      function hasPagination() {
        return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;
      }

      function hasClickablePagination() {
        return hasPagination() && swiper.params.pagination.clickable;
      }

      function updatePagination() {
        var params = swiper.params.a11y;
        if (!hasPagination()) return;
        swiper.pagination.bullets.each(function (bulletEl) {
          var $bulletEl = $(bulletEl);

          if (swiper.params.pagination.clickable) {
            makeElFocusable($bulletEl);

            if (!swiper.params.pagination.renderBullet) {
              addElRole($bulletEl, 'button');
              addElLabel($bulletEl, params.paginationBulletMessage.replace(/\{\{index\}\}/, $bulletEl.index() + 1));
            }
          }

          if ($bulletEl.is(".".concat(swiper.params.pagination.bulletActiveClass))) {
            $bulletEl.attr('aria-current', 'true');
          } else {
            $bulletEl.removeAttr('aria-current');
          }
        });
      }

      var initNavEl = function initNavEl($el, wrapperId, message) {
        makeElFocusable($el);

        if ($el[0].tagName !== 'BUTTON') {
          addElRole($el, 'button');
          $el.on('keydown', onEnterOrSpaceKey);
        }

        addElLabel($el, message);
        addElControls($el, wrapperId);
      };

      function init() {
        var params = swiper.params.a11y;
        swiper.$el.append(liveRegion); // Container

        var $containerEl = swiper.$el;

        if (params.containerRoleDescriptionMessage) {
          addElRoleDescription($containerEl, params.containerRoleDescriptionMessage);
        }

        if (params.containerMessage) {
          addElLabel($containerEl, params.containerMessage);
        } // Wrapper


        var $wrapperEl = swiper.$wrapperEl;
        var wrapperId = $wrapperEl.attr('id') || "swiper-wrapper-".concat(getRandomNumber(16));
        var live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';
        addElId($wrapperEl, wrapperId);
        addElLive($wrapperEl, live); // Slide

        if (params.itemRoleDescriptionMessage) {
          addElRoleDescription($(swiper.slides), params.itemRoleDescriptionMessage);
        }

        addElRole($(swiper.slides), params.slideRole);
        var slidesLength = swiper.params.loop ? swiper.slides.filter(function (el) {
          return !el.classList.contains(swiper.params.slideDuplicateClass);
        }).length : swiper.slides.length;
        swiper.slides.each(function (slideEl, index) {
          var $slideEl = $(slideEl);
          var slideIndex = swiper.params.loop ? parseInt($slideEl.attr('data-swiper-slide-index'), 10) : index;
          var ariaLabelMessage = params.slideLabelMessage.replace(/\{\{index\}\}/, slideIndex + 1).replace(/\{\{slidesLength\}\}/, slidesLength);
          addElLabel($slideEl, ariaLabelMessage);
        }); // Navigation

        var $nextEl;
        var $prevEl;

        if (swiper.navigation && swiper.navigation.$nextEl) {
          $nextEl = swiper.navigation.$nextEl;
        }

        if (swiper.navigation && swiper.navigation.$prevEl) {
          $prevEl = swiper.navigation.$prevEl;
        }

        if ($nextEl && $nextEl.length) {
          initNavEl($nextEl, wrapperId, params.nextSlideMessage);
        }

        if ($prevEl && $prevEl.length) {
          initNavEl($prevEl, wrapperId, params.prevSlideMessage);
        } // Pagination


        if (hasClickablePagination()) {
          swiper.pagination.$el.on('keydown', classesToSelector(swiper.params.pagination.bulletClass), onEnterOrSpaceKey);
        }
      }

      function destroy() {
        if (liveRegion && liveRegion.length > 0) liveRegion.remove();
        var $nextEl;
        var $prevEl;

        if (swiper.navigation && swiper.navigation.$nextEl) {
          $nextEl = swiper.navigation.$nextEl;
        }

        if (swiper.navigation && swiper.navigation.$prevEl) {
          $prevEl = swiper.navigation.$prevEl;
        }

        if ($nextEl) {
          $nextEl.off('keydown', onEnterOrSpaceKey);
        }

        if ($prevEl) {
          $prevEl.off('keydown', onEnterOrSpaceKey);
        } // Pagination


        if (hasClickablePagination()) {
          swiper.pagination.$el.off('keydown', classesToSelector(swiper.params.pagination.bulletClass), onEnterOrSpaceKey);
        }
      }

      on('beforeInit', function () {
        liveRegion = $("<span class=\"".concat(swiper.params.a11y.notificationClass, "\" aria-live=\"assertive\" aria-atomic=\"true\"></span>"));
      });
      on('afterInit', function () {
        if (!swiper.params.a11y.enabled) return;
        init();
        updateNavigation();
      });
      on('toEdge', function () {
        if (!swiper.params.a11y.enabled) return;
        updateNavigation();
      });
      on('fromEdge', function () {
        if (!swiper.params.a11y.enabled) return;
        updateNavigation();
      });
      on('paginationUpdate', function () {
        if (!swiper.params.a11y.enabled) return;
        updatePagination();
      });
      on('destroy', function () {
        if (!swiper.params.a11y.enabled) return;
        destroy();
      });
    }

    function History(_ref18) {
      var swiper = _ref18.swiper,
          extendParams = _ref18.extendParams,
          on = _ref18.on;
      extendParams({
        history: {
          enabled: false,
          root: '',
          replaceState: false,
          key: 'slides'
        }
      });
      var initialized = false;
      var paths = {};

      var slugify = function slugify(text) {
        return text.toString().replace(/\s+/g, '-').replace(/[^\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');
      };

      var getPathValues = function getPathValues(urlOverride) {
        var window = getWindow();
        var location;

        if (urlOverride) {
          location = new URL(urlOverride);
        } else {
          location = window.location;
        }

        var pathArray = location.pathname.slice(1).split('/').filter(function (part) {
          return part !== '';
        });
        var total = pathArray.length;
        var key = pathArray[total - 2];
        var value = pathArray[total - 1];
        return {
          key: key,
          value: value
        };
      };

      var setHistory = function setHistory(key, index) {
        var window = getWindow();
        if (!initialized || !swiper.params.history.enabled) return;
        var location;

        if (swiper.params.url) {
          location = new URL(swiper.params.url);
        } else {
          location = window.location;
        }

        var slide = swiper.slides.eq(index);
        var value = slugify(slide.attr('data-history'));

        if (swiper.params.history.root.length > 0) {
          var root = swiper.params.history.root;
          if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);
          value = "".concat(root, "/").concat(key, "/").concat(value);
        } else if (!location.pathname.includes(key)) {
          value = "".concat(key, "/").concat(value);
        }

        var currentState = window.history.state;

        if (currentState && currentState.value === value) {
          return;
        }

        if (swiper.params.history.replaceState) {
          window.history.replaceState({
            value: value
          }, null, value);
        } else {
          window.history.pushState({
            value: value
          }, null, value);
        }
      };

      var scrollToSlide = function scrollToSlide(speed, value, runCallbacks) {
        if (value) {
          for (var i = 0, length = swiper.slides.length; i < length; i += 1) {
            var _slide3 = swiper.slides.eq(i);

            var slideHistory = slugify(_slide3.attr('data-history'));

            if (slideHistory === value && !_slide3.hasClass(swiper.params.slideDuplicateClass)) {
              var _index2 = _slide3.index();

              swiper.slideTo(_index2, speed, runCallbacks);
            }
          }
        } else {
          swiper.slideTo(0, speed, runCallbacks);
        }
      };

      var setHistoryPopState = function setHistoryPopState() {
        paths = getPathValues(swiper.params.url);
        scrollToSlide(swiper.params.speed, swiper.paths.value, false);
      };

      var init = function init() {
        var window = getWindow();
        if (!swiper.params.history) return;

        if (!window.history || !window.history.pushState) {
          swiper.params.history.enabled = false;
          swiper.params.hashNavigation.enabled = true;
          return;
        }

        initialized = true;
        paths = getPathValues(swiper.params.url);
        if (!paths.key && !paths.value) return;
        scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);

        if (!swiper.params.history.replaceState) {
          window.addEventListener('popstate', setHistoryPopState);
        }
      };

      var destroy = function destroy() {
        var window = getWindow();

        if (!swiper.params.history.replaceState) {
          window.removeEventListener('popstate', setHistoryPopState);
        }
      };

      on('init', function () {
        if (swiper.params.history.enabled) {
          init();
        }
      });
      on('destroy', function () {
        if (swiper.params.history.enabled) {
          destroy();
        }
      });
      on('transitionEnd _freeModeNoMomentumRelease', function () {
        if (initialized) {
          setHistory(swiper.params.history.key, swiper.activeIndex);
        }
      });
      on('slideChange', function () {
        if (initialized && swiper.params.cssMode) {
          setHistory(swiper.params.history.key, swiper.activeIndex);
        }
      });
    }

    function HashNavigation(_ref19) {
      var swiper = _ref19.swiper,
          extendParams = _ref19.extendParams,
          emit = _ref19.emit,
          on = _ref19.on;
      var initialized = false;
      var document = getDocument();
      var window = getWindow();
      extendParams({
        hashNavigation: {
          enabled: false,
          replaceState: false,
          watchState: false
        }
      });

      var onHashChange = function onHashChange() {
        emit('hashChange');
        var newHash = document.location.hash.replace('#', '');
        var activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');

        if (newHash !== activeSlideHash) {
          var newIndex = swiper.$wrapperEl.children(".".concat(swiper.params.slideClass, "[data-hash=\"").concat(newHash, "\"]")).index();
          if (typeof newIndex === 'undefined') return;
          swiper.slideTo(newIndex);
        }
      };

      var setHash = function setHash() {
        if (!initialized || !swiper.params.hashNavigation.enabled) return;

        if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {
          window.history.replaceState(null, null, "#".concat(swiper.slides.eq(swiper.activeIndex).attr('data-hash')) || false);
          emit('hashSet');
        } else {
          var _slide4 = swiper.slides.eq(swiper.activeIndex);

          var hash = _slide4.attr('data-hash') || _slide4.attr('data-history');

          document.location.hash = hash || '';
          emit('hashSet');
        }
      };

      var init = function init() {
        if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;
        initialized = true;
        var hash = document.location.hash.replace('#', '');

        if (hash) {
          var speed = 0;

          for (var i = 0, length = swiper.slides.length; i < length; i += 1) {
            var _slide5 = swiper.slides.eq(i);

            var slideHash = _slide5.attr('data-hash') || _slide5.attr('data-history');

            if (slideHash === hash && !_slide5.hasClass(swiper.params.slideDuplicateClass)) {
              var _index3 = _slide5.index();

              swiper.slideTo(_index3, speed, swiper.params.runCallbacksOnInit, true);
            }
          }
        }

        if (swiper.params.hashNavigation.watchState) {
          $(window).on('hashchange', onHashChange);
        }
      };

      var destroy = function destroy() {
        if (swiper.params.hashNavigation.watchState) {
          $(window).off('hashchange', onHashChange);
        }
      };

      on('init', function () {
        if (swiper.params.hashNavigation.enabled) {
          init();
        }
      });
      on('destroy', function () {
        if (swiper.params.hashNavigation.enabled) {
          destroy();
        }
      });
      on('transitionEnd _freeModeNoMomentumRelease', function () {
        if (initialized) {
          setHash();
        }
      });
      on('slideChange', function () {
        if (initialized && swiper.params.cssMode) {
          setHash();
        }
      });
    }
    /* eslint no-underscore-dangle: "off" */


    function Autoplay(_ref20) {
      var swiper = _ref20.swiper,
          extendParams = _ref20.extendParams,
          on = _ref20.on,
          emit = _ref20.emit;
      var timeout;
      swiper.autoplay = {
        running: false,
        paused: false
      };
      extendParams({
        autoplay: {
          enabled: false,
          delay: 3000,
          waitForTransition: true,
          disableOnInteraction: true,
          stopOnLastSlide: false,
          reverseDirection: false,
          pauseOnMouseEnter: false
        }
      });

      function run() {
        var $activeSlideEl = swiper.slides.eq(swiper.activeIndex);
        var delay = swiper.params.autoplay.delay;

        if ($activeSlideEl.attr('data-swiper-autoplay')) {
          delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;
        }

        clearTimeout(timeout);
        timeout = nextTick(function () {
          var autoplayResult;

          if (swiper.params.autoplay.reverseDirection) {
            if (swiper.params.loop) {
              swiper.loopFix();
              autoplayResult = swiper.slidePrev(swiper.params.speed, true, true);
              emit('autoplay');
            } else if (!swiper.isBeginning) {
              autoplayResult = swiper.slidePrev(swiper.params.speed, true, true);
              emit('autoplay');
            } else if (!swiper.params.autoplay.stopOnLastSlide) {
              autoplayResult = swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);
              emit('autoplay');
            } else {
              stop();
            }
          } else if (swiper.params.loop) {
            swiper.loopFix();
            autoplayResult = swiper.slideNext(swiper.params.speed, true, true);
            emit('autoplay');
          } else if (!swiper.isEnd) {
            autoplayResult = swiper.slideNext(swiper.params.speed, true, true);
            emit('autoplay');
          } else if (!swiper.params.autoplay.stopOnLastSlide) {
            autoplayResult = swiper.slideTo(0, swiper.params.speed, true, true);
            emit('autoplay');
          } else {
            stop();
          }

          if (swiper.params.cssMode && swiper.autoplay.running) run();else if (autoplayResult === false) {
            run();
          }
        }, delay);
      }

      function start() {
        if (typeof timeout !== 'undefined') return false;
        if (swiper.autoplay.running) return false;
        swiper.autoplay.running = true;
        emit('autoplayStart');
        run();
        return true;
      }

      function stop() {
        if (!swiper.autoplay.running) return false;
        if (typeof timeout === 'undefined') return false;

        if (timeout) {
          clearTimeout(timeout);
          timeout = undefined;
        }

        swiper.autoplay.running = false;
        emit('autoplayStop');
        return true;
      }

      function pause(speed) {
        if (!swiper.autoplay.running) return;
        if (swiper.autoplay.paused) return;
        if (timeout) clearTimeout(timeout);
        swiper.autoplay.paused = true;

        if (speed === 0 || !swiper.params.autoplay.waitForTransition) {
          swiper.autoplay.paused = false;
          run();
        } else {
          ['transitionend', 'webkitTransitionEnd'].forEach(function (event) {
            swiper.$wrapperEl[0].addEventListener(event, onTransitionEnd);
          });
        }
      }

      function onVisibilityChange() {
        var document = getDocument();

        if (document.visibilityState === 'hidden' && swiper.autoplay.running) {
          pause();
        }

        if (document.visibilityState === 'visible' && swiper.autoplay.paused) {
          run();
          swiper.autoplay.paused = false;
        }
      }

      function onTransitionEnd(e) {
        if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;
        if (e.target !== swiper.$wrapperEl[0]) return;
        ['transitionend', 'webkitTransitionEnd'].forEach(function (event) {
          swiper.$wrapperEl[0].removeEventListener(event, onTransitionEnd);
        });
        swiper.autoplay.paused = false;

        if (!swiper.autoplay.running) {
          stop();
        } else {
          run();
        }
      }

      function onMouseEnter() {
        if (swiper.params.autoplay.disableOnInteraction) {
          stop();
        } else {
          pause();
        }

        ['transitionend', 'webkitTransitionEnd'].forEach(function (event) {
          swiper.$wrapperEl[0].removeEventListener(event, onTransitionEnd);
        });
      }

      function onMouseLeave() {
        if (swiper.params.autoplay.disableOnInteraction) {
          return;
        }

        swiper.autoplay.paused = false;
        run();
      }

      function attachMouseEvents() {
        if (swiper.params.autoplay.pauseOnMouseEnter) {
          swiper.$el.on('mouseenter', onMouseEnter);
          swiper.$el.on('mouseleave', onMouseLeave);
        }
      }

      function detachMouseEvents() {
        swiper.$el.off('mouseenter', onMouseEnter);
        swiper.$el.off('mouseleave', onMouseLeave);
      }

      on('init', function () {
        if (swiper.params.autoplay.enabled) {
          start();

          var _document3 = getDocument();

          _document3.addEventListener('visibilitychange', onVisibilityChange);

          attachMouseEvents();
        }
      });
      on('beforeTransitionStart', function (_s, speed, internal) {
        if (swiper.autoplay.running) {
          if (internal || !swiper.params.autoplay.disableOnInteraction) {
            swiper.autoplay.pause(speed);
          } else {
            stop();
          }
        }
      });
      on('sliderFirstMove', function () {
        if (swiper.autoplay.running) {
          if (swiper.params.autoplay.disableOnInteraction) {
            stop();
          } else {
            pause();
          }
        }
      });
      on('touchEnd', function () {
        if (swiper.params.cssMode && swiper.autoplay.paused && !swiper.params.autoplay.disableOnInteraction) {
          run();
        }
      });
      on('destroy', function () {
        detachMouseEvents();

        if (swiper.autoplay.running) {
          stop();
        }

        var document = getDocument();
        document.removeEventListener('visibilitychange', onVisibilityChange);
      });
      Object.assign(swiper.autoplay, {
        pause: pause,
        run: run,
        start: start,
        stop: stop
      });
    }

    function Thumb(_ref21) {
      var swiper = _ref21.swiper,
          extendParams = _ref21.extendParams,
          on = _ref21.on;
      extendParams({
        thumbs: {
          swiper: null,
          multipleActiveThumbs: true,
          autoScrollOffset: 0,
          slideThumbActiveClass: 'swiper-slide-thumb-active',
          thumbsContainerClass: 'swiper-thumbs'
        }
      });
      var initialized = false;
      var swiperCreated = false;
      swiper.thumbs = {
        swiper: null
      };

      function onThumbClick() {
        var thumbsSwiper = swiper.thumbs.swiper;
        if (!thumbsSwiper) return;
        var clickedIndex = thumbsSwiper.clickedIndex;
        var clickedSlide = thumbsSwiper.clickedSlide;
        if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;
        if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;
        var slideToIndex;

        if (thumbsSwiper.params.loop) {
          slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);
        } else {
          slideToIndex = clickedIndex;
        }

        if (swiper.params.loop) {
          var currentIndex = swiper.activeIndex;

          if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {
            swiper.loopFix(); // eslint-disable-next-line

            swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;
            currentIndex = swiper.activeIndex;
          }

          var prevIndex = swiper.slides.eq(currentIndex).prevAll("[data-swiper-slide-index=\"".concat(slideToIndex, "\"]")).eq(0).index();
          var nextIndex = swiper.slides.eq(currentIndex).nextAll("[data-swiper-slide-index=\"".concat(slideToIndex, "\"]")).eq(0).index();
          if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;else slideToIndex = prevIndex;
        }

        swiper.slideTo(slideToIndex);
      }

      function init() {
        var thumbsParams = swiper.params.thumbs;
        if (initialized) return false;
        initialized = true;
        var SwiperClass = swiper.constructor;

        if (thumbsParams.swiper instanceof SwiperClass) {
          swiper.thumbs.swiper = thumbsParams.swiper;
          Object.assign(swiper.thumbs.swiper.originalParams, {
            watchSlidesProgress: true,
            slideToClickedSlide: false
          });
          Object.assign(swiper.thumbs.swiper.params, {
            watchSlidesProgress: true,
            slideToClickedSlide: false
          });
        } else if (isObject(thumbsParams.swiper)) {
          var thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);
          Object.assign(thumbsSwiperParams, {
            watchSlidesProgress: true,
            slideToClickedSlide: false
          });
          swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);
          swiperCreated = true;
        }

        swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);
        swiper.thumbs.swiper.on('tap', onThumbClick);
        return true;
      }

      function update(initial) {
        var thumbsSwiper = swiper.thumbs.swiper;
        if (!thumbsSwiper) return;
        var slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;
        var autoScrollOffset = swiper.params.thumbs.autoScrollOffset;
        var useOffset = autoScrollOffset && !thumbsSwiper.params.loop;

        if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {
          var currentThumbsIndex = thumbsSwiper.activeIndex;
          var newThumbsIndex;
          var direction;

          if (thumbsSwiper.params.loop) {
            if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {
              thumbsSwiper.loopFix(); // eslint-disable-next-line

              thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;
              currentThumbsIndex = thumbsSwiper.activeIndex;
            } // Find actual thumbs index to slide to


            var prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll("[data-swiper-slide-index=\"".concat(swiper.realIndex, "\"]")).eq(0).index();
            var nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll("[data-swiper-slide-index=\"".concat(swiper.realIndex, "\"]")).eq(0).index();

            if (typeof prevThumbsIndex === 'undefined') {
              newThumbsIndex = nextThumbsIndex;
            } else if (typeof nextThumbsIndex === 'undefined') {
              newThumbsIndex = prevThumbsIndex;
            } else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) {
              newThumbsIndex = thumbsSwiper.params.slidesPerGroup > 1 ? nextThumbsIndex : currentThumbsIndex;
            } else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) {
              newThumbsIndex = nextThumbsIndex;
            } else {
              newThumbsIndex = prevThumbsIndex;
            }

            direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';
          } else {
            newThumbsIndex = swiper.realIndex;
            direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';
          }

          if (useOffset) {
            newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;
          }

          if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {
            if (thumbsSwiper.params.centeredSlides) {
              if (newThumbsIndex > currentThumbsIndex) {
                newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;
              } else {
                newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;
              }
            } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) ;

            thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);
          }
        } // Activate thumbs


        var thumbsToActivate = 1;
        var thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;

        if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {
          thumbsToActivate = swiper.params.slidesPerView;
        }

        if (!swiper.params.thumbs.multipleActiveThumbs) {
          thumbsToActivate = 1;
        }

        thumbsToActivate = Math.floor(thumbsToActivate);
        thumbsSwiper.slides.removeClass(thumbActiveClass);

        if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {
          for (var i = 0; i < thumbsToActivate; i += 1) {
            thumbsSwiper.$wrapperEl.children("[data-swiper-slide-index=\"".concat(swiper.realIndex + i, "\"]")).addClass(thumbActiveClass);
          }
        } else {
          for (var _i11 = 0; _i11 < thumbsToActivate; _i11 += 1) {
            thumbsSwiper.slides.eq(swiper.realIndex + _i11).addClass(thumbActiveClass);
          }
        }
      }

      on('beforeInit', function () {
        var thumbs = swiper.params.thumbs;
        if (!thumbs || !thumbs.swiper) return;
        init();
        update(true);
      });
      on('slideChange update resize observerUpdate', function () {
        if (!swiper.thumbs.swiper) return;
        update();
      });
      on('setTransition', function (_s, duration) {
        var thumbsSwiper = swiper.thumbs.swiper;
        if (!thumbsSwiper) return;
        thumbsSwiper.setTransition(duration);
      });
      on('beforeDestroy', function () {
        var thumbsSwiper = swiper.thumbs.swiper;
        if (!thumbsSwiper) return;

        if (swiperCreated && thumbsSwiper) {
          thumbsSwiper.destroy();
        }
      });
      Object.assign(swiper.thumbs, {
        init: init,
        update: update
      });
    }

    function freeMode(_ref22) {
      var swiper = _ref22.swiper,
          extendParams = _ref22.extendParams,
          emit = _ref22.emit,
          once = _ref22.once;
      extendParams({
        freeMode: {
          enabled: false,
          momentum: true,
          momentumRatio: 1,
          momentumBounce: true,
          momentumBounceRatio: 1,
          momentumVelocityRatio: 1,
          sticky: false,
          minimumVelocity: 0.02
        }
      });

      function onTouchMove() {
        var data = swiper.touchEventsData,
            touches = swiper.touches; // Velocity

        if (data.velocities.length === 0) {
          data.velocities.push({
            position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],
            time: data.touchStartTime
          });
        }

        data.velocities.push({
          position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],
          time: now()
        });
      }

      function onTouchEnd(_ref23) {
        var currentPos = _ref23.currentPos;
        var params = swiper.params,
            $wrapperEl = swiper.$wrapperEl,
            rtl = swiper.rtlTranslate,
            snapGrid = swiper.snapGrid,
            data = swiper.touchEventsData; // Time diff

        var touchEndTime = now();
        var timeDiff = touchEndTime - data.touchStartTime;

        if (currentPos < -swiper.minTranslate()) {
          swiper.slideTo(swiper.activeIndex);
          return;
        }

        if (currentPos > -swiper.maxTranslate()) {
          if (swiper.slides.length < snapGrid.length) {
            swiper.slideTo(snapGrid.length - 1);
          } else {
            swiper.slideTo(swiper.slides.length - 1);
          }

          return;
        }

        if (params.freeMode.momentum) {
          if (data.velocities.length > 1) {
            var lastMoveEvent = data.velocities.pop();
            var velocityEvent = data.velocities.pop();
            var distance = lastMoveEvent.position - velocityEvent.position;
            var time = lastMoveEvent.time - velocityEvent.time;
            swiper.velocity = distance / time;
            swiper.velocity /= 2;

            if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {
              swiper.velocity = 0;
            } // this implies that the user stopped moving a finger then released.
            // There would be no events with distance zero, so the last event is stale.


            if (time > 150 || now() - lastMoveEvent.time > 300) {
              swiper.velocity = 0;
            }
          } else {
            swiper.velocity = 0;
          }

          swiper.velocity *= params.freeMode.momentumVelocityRatio;
          data.velocities.length = 0;
          var momentumDuration = 1000 * params.freeMode.momentumRatio;
          var momentumDistance = swiper.velocity * momentumDuration;
          var newPosition = swiper.translate + momentumDistance;
          if (rtl) newPosition = -newPosition;
          var doBounce = false;
          var afterBouncePosition;
          var bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;
          var needsLoopFix;

          if (newPosition < swiper.maxTranslate()) {
            if (params.freeMode.momentumBounce) {
              if (newPosition + swiper.maxTranslate() < -bounceAmount) {
                newPosition = swiper.maxTranslate() - bounceAmount;
              }

              afterBouncePosition = swiper.maxTranslate();
              doBounce = true;
              data.allowMomentumBounce = true;
            } else {
              newPosition = swiper.maxTranslate();
            }

            if (params.loop && params.centeredSlides) needsLoopFix = true;
          } else if (newPosition > swiper.minTranslate()) {
            if (params.freeMode.momentumBounce) {
              if (newPosition - swiper.minTranslate() > bounceAmount) {
                newPosition = swiper.minTranslate() + bounceAmount;
              }

              afterBouncePosition = swiper.minTranslate();
              doBounce = true;
              data.allowMomentumBounce = true;
            } else {
              newPosition = swiper.minTranslate();
            }

            if (params.loop && params.centeredSlides) needsLoopFix = true;
          } else if (params.freeMode.sticky) {
            var nextSlide;

            for (var j = 0; j < snapGrid.length; j += 1) {
              if (snapGrid[j] > -newPosition) {
                nextSlide = j;
                break;
              }
            }

            if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {
              newPosition = snapGrid[nextSlide];
            } else {
              newPosition = snapGrid[nextSlide - 1];
            }

            newPosition = -newPosition;
          }

          if (needsLoopFix) {
            once('transitionEnd', function () {
              swiper.loopFix();
            });
          } // Fix duration


          if (swiper.velocity !== 0) {
            if (rtl) {
              momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);
            } else {
              momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);
            }

            if (params.freeMode.sticky) {
              // If freeMode.sticky is active and the user ends a swipe with a slow-velocity
              // event, then durations can be 20+ seconds to slide one (or zero!) slides.
              // It's easy to see this when simulating touch with mouse events. To fix this,
              // limit single-slide swipes to the default slide duration. This also has the
              // nice side effect of matching slide speed if the user stopped moving before
              // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.
              // For faster swipes, also apply limits (albeit higher ones).
              var moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);
              var currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];

              if (moveDistance < currentSlideSize) {
                momentumDuration = params.speed;
              } else if (moveDistance < 2 * currentSlideSize) {
                momentumDuration = params.speed * 1.5;
              } else {
                momentumDuration = params.speed * 2.5;
              }
            }
          } else if (params.freeMode.sticky) {
            swiper.slideToClosest();
            return;
          }

          if (params.freeMode.momentumBounce && doBounce) {
            swiper.updateProgress(afterBouncePosition);
            swiper.setTransition(momentumDuration);
            swiper.setTranslate(newPosition);
            swiper.transitionStart(true, swiper.swipeDirection);
            swiper.animating = true;
            $wrapperEl.transitionEnd(function () {
              if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;
              emit('momentumBounce');
              swiper.setTransition(params.speed);
              setTimeout(function () {
                swiper.setTranslate(afterBouncePosition);
                $wrapperEl.transitionEnd(function () {
                  if (!swiper || swiper.destroyed) return;
                  swiper.transitionEnd();
                });
              }, 0);
            });
          } else if (swiper.velocity) {
            emit('_freeModeNoMomentumRelease');
            swiper.updateProgress(newPosition);
            swiper.setTransition(momentumDuration);
            swiper.setTranslate(newPosition);
            swiper.transitionStart(true, swiper.swipeDirection);

            if (!swiper.animating) {
              swiper.animating = true;
              $wrapperEl.transitionEnd(function () {
                if (!swiper || swiper.destroyed) return;
                swiper.transitionEnd();
              });
            }
          } else {
            swiper.updateProgress(newPosition);
          }

          swiper.updateActiveIndex();
          swiper.updateSlidesClasses();
        } else if (params.freeMode.sticky) {
          swiper.slideToClosest();
          return;
        } else if (params.freeMode) {
          emit('_freeModeNoMomentumRelease');
        }

        if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {
          swiper.updateProgress();
          swiper.updateActiveIndex();
          swiper.updateSlidesClasses();
        }
      }

      Object.assign(swiper, {
        freeMode: {
          onTouchMove: onTouchMove,
          onTouchEnd: onTouchEnd
        }
      });
    }

    function Grid(_ref24) {
      var swiper = _ref24.swiper,
          extendParams = _ref24.extendParams;
      extendParams({
        grid: {
          rows: 1,
          fill: 'column'
        }
      });
      var slidesNumberEvenToRows;
      var slidesPerRow;
      var numFullColumns;

      var initSlides = function initSlides(slidesLength) {
        var slidesPerView = swiper.params.slidesPerView;
        var _swiper$params$grid = swiper.params.grid,
            rows = _swiper$params$grid.rows,
            fill = _swiper$params$grid.fill;
        slidesPerRow = slidesNumberEvenToRows / rows;
        numFullColumns = Math.floor(slidesLength / rows);

        if (Math.floor(slidesLength / rows) === slidesLength / rows) {
          slidesNumberEvenToRows = slidesLength;
        } else {
          slidesNumberEvenToRows = Math.ceil(slidesLength / rows) * rows;
        }

        if (slidesPerView !== 'auto' && fill === 'row') {
          slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, slidesPerView * rows);
        }
      };

      var updateSlide = function updateSlide(i, slide, slidesLength, getDirectionLabel) {
        var _swiper$params3 = swiper.params,
            slidesPerGroup = _swiper$params3.slidesPerGroup,
            spaceBetween = _swiper$params3.spaceBetween;
        var _swiper$params$grid2 = swiper.params.grid,
            rows = _swiper$params$grid2.rows,
            fill = _swiper$params$grid2.fill; // Set slides order

        var newSlideOrderIndex;
        var column;
        var row;

        if (fill === 'row' && slidesPerGroup > 1) {
          var groupIndex = Math.floor(i / (slidesPerGroup * rows));
          var slideIndexInGroup = i - rows * slidesPerGroup * groupIndex;
          var columnsInGroup = groupIndex === 0 ? slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * rows * slidesPerGroup) / rows), slidesPerGroup);
          row = Math.floor(slideIndexInGroup / columnsInGroup);
          column = slideIndexInGroup - row * columnsInGroup + groupIndex * slidesPerGroup;
          newSlideOrderIndex = column + row * slidesNumberEvenToRows / rows;
          slide.css({
            '-webkit-order': newSlideOrderIndex,
            order: newSlideOrderIndex
          });
        } else if (fill === 'column') {
          column = Math.floor(i / rows);
          row = i - column * rows;

          if (column > numFullColumns || column === numFullColumns && row === rows - 1) {
            row += 1;

            if (row >= rows) {
              row = 0;
              column += 1;
            }
          }
        } else {
          row = Math.floor(i / slidesPerRow);
          column = i - row * slidesPerRow;
        }

        slide.css(getDirectionLabel('margin-top'), row !== 0 ? spaceBetween && "".concat(spaceBetween, "px") : '');
      };

      var updateWrapperSize = function updateWrapperSize(slideSize, snapGrid, getDirectionLabel) {
        var _swiper$params4 = swiper.params,
            spaceBetween = _swiper$params4.spaceBetween,
            centeredSlides = _swiper$params4.centeredSlides,
            roundLengths = _swiper$params4.roundLengths;
        var rows = swiper.params.grid.rows;
        swiper.virtualSize = (slideSize + spaceBetween) * slidesNumberEvenToRows;
        swiper.virtualSize = Math.ceil(swiper.virtualSize / rows) - spaceBetween;
        swiper.$wrapperEl.css(_defineProperty({}, getDirectionLabel('width'), "".concat(swiper.virtualSize + spaceBetween, "px")));

        if (centeredSlides) {
          snapGrid.splice(0, snapGrid.length);
          var newSlidesGrid = [];

          for (var i = 0; i < snapGrid.length; i += 1) {
            var slidesGridItem = snapGrid[i];
            if (roundLengths) slidesGridItem = Math.floor(slidesGridItem);
            if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);
          }

          snapGrid.push.apply(snapGrid, newSlidesGrid);
        }
      };

      swiper.grid = {
        initSlides: initSlides,
        updateSlide: updateSlide,
        updateWrapperSize: updateWrapperSize
      };
    }

    function appendSlide(slides) {
      var swiper = this;
      var $wrapperEl = swiper.$wrapperEl,
          params = swiper.params;

      if (params.loop) {
        swiper.loopDestroy();
      }

      if (_typeof(slides) === 'object' && 'length' in slides) {
        for (var i = 0; i < slides.length; i += 1) {
          if (slides[i]) $wrapperEl.append(slides[i]);
        }
      } else {
        $wrapperEl.append(slides);
      }

      if (params.loop) {
        swiper.loopCreate();
      }

      if (!params.observer) {
        swiper.update();
      }
    }

    function prependSlide(slides) {
      var swiper = this;
      var params = swiper.params,
          $wrapperEl = swiper.$wrapperEl,
          activeIndex = swiper.activeIndex;

      if (params.loop) {
        swiper.loopDestroy();
      }

      var newActiveIndex = activeIndex + 1;

      if (_typeof(slides) === 'object' && 'length' in slides) {
        for (var i = 0; i < slides.length; i += 1) {
          if (slides[i]) $wrapperEl.prepend(slides[i]);
        }

        newActiveIndex = activeIndex + slides.length;
      } else {
        $wrapperEl.prepend(slides);
      }

      if (params.loop) {
        swiper.loopCreate();
      }

      if (!params.observer) {
        swiper.update();
      }

      swiper.slideTo(newActiveIndex, 0, false);
    }

    function addSlide(index, slides) {
      var swiper = this;
      var $wrapperEl = swiper.$wrapperEl,
          params = swiper.params,
          activeIndex = swiper.activeIndex;
      var activeIndexBuffer = activeIndex;

      if (params.loop) {
        activeIndexBuffer -= swiper.loopedSlides;
        swiper.loopDestroy();
        swiper.slides = $wrapperEl.children(".".concat(params.slideClass));
      }

      var baseLength = swiper.slides.length;

      if (index <= 0) {
        swiper.prependSlide(slides);
        return;
      }

      if (index >= baseLength) {
        swiper.appendSlide(slides);
        return;
      }

      var newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;
      var slidesBuffer = [];

      for (var i = baseLength - 1; i >= index; i -= 1) {
        var currentSlide = swiper.slides.eq(i);
        currentSlide.remove();
        slidesBuffer.unshift(currentSlide);
      }

      if (_typeof(slides) === 'object' && 'length' in slides) {
        for (var _i12 = 0; _i12 < slides.length; _i12 += 1) {
          if (slides[_i12]) $wrapperEl.append(slides[_i12]);
        }

        newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;
      } else {
        $wrapperEl.append(slides);
      }

      for (var _i13 = 0; _i13 < slidesBuffer.length; _i13 += 1) {
        $wrapperEl.append(slidesBuffer[_i13]);
      }

      if (params.loop) {
        swiper.loopCreate();
      }

      if (!params.observer) {
        swiper.update();
      }

      if (params.loop) {
        swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);
      } else {
        swiper.slideTo(newActiveIndex, 0, false);
      }
    }

    function removeSlide(slidesIndexes) {
      var swiper = this;
      var params = swiper.params,
          $wrapperEl = swiper.$wrapperEl,
          activeIndex = swiper.activeIndex;
      var activeIndexBuffer = activeIndex;

      if (params.loop) {
        activeIndexBuffer -= swiper.loopedSlides;
        swiper.loopDestroy();
        swiper.slides = $wrapperEl.children(".".concat(params.slideClass));
      }

      var newActiveIndex = activeIndexBuffer;
      var indexToRemove;

      if (_typeof(slidesIndexes) === 'object' && 'length' in slidesIndexes) {
        for (var i = 0; i < slidesIndexes.length; i += 1) {
          indexToRemove = slidesIndexes[i];
          if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();
          if (indexToRemove < newActiveIndex) newActiveIndex -= 1;
        }

        newActiveIndex = Math.max(newActiveIndex, 0);
      } else {
        indexToRemove = slidesIndexes;
        if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();
        if (indexToRemove < newActiveIndex) newActiveIndex -= 1;
        newActiveIndex = Math.max(newActiveIndex, 0);
      }

      if (params.loop) {
        swiper.loopCreate();
      }

      if (!params.observer) {
        swiper.update();
      }

      if (params.loop) {
        swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);
      } else {
        swiper.slideTo(newActiveIndex, 0, false);
      }
    }

    function removeAllSlides() {
      var swiper = this;
      var slidesIndexes = [];

      for (var i = 0; i < swiper.slides.length; i += 1) {
        slidesIndexes.push(i);
      }

      swiper.removeSlide(slidesIndexes);
    }

    function Manipulation(_ref25) {
      var swiper = _ref25.swiper;
      Object.assign(swiper, {
        appendSlide: appendSlide.bind(swiper),
        prependSlide: prependSlide.bind(swiper),
        addSlide: addSlide.bind(swiper),
        removeSlide: removeSlide.bind(swiper),
        removeAllSlides: removeAllSlides.bind(swiper)
      });
    }

    function effectInit(params) {
      var effect = params.effect,
          swiper = params.swiper,
          on = params.on,
          setTranslate = params.setTranslate,
          setTransition = params.setTransition,
          overwriteParams = params.overwriteParams,
          perspective = params.perspective;
      on('beforeInit', function () {
        if (swiper.params.effect !== effect) return;
        swiper.classNames.push("".concat(swiper.params.containerModifierClass).concat(effect));

        if (perspective && perspective()) {
          swiper.classNames.push("".concat(swiper.params.containerModifierClass, "3d"));
        }

        var overwriteParamsResult = overwriteParams ? overwriteParams() : {};
        Object.assign(swiper.params, overwriteParamsResult);
        Object.assign(swiper.originalParams, overwriteParamsResult);
      });
      on('setTranslate', function () {
        if (swiper.params.effect !== effect) return;
        setTranslate();
      });
      on('setTransition', function (_s, duration) {
        if (swiper.params.effect !== effect) return;
        setTransition(duration);
      });
    }

    function effectTarget(effectParams, $slideEl) {
      if (effectParams.transformEl) {
        return $slideEl.find(effectParams.transformEl).css({
          'backface-visibility': 'hidden',
          '-webkit-backface-visibility': 'hidden'
        });
      }

      return $slideEl;
    }

    function effectVirtualTransitionEnd(_ref26) {
      var swiper = _ref26.swiper,
          duration = _ref26.duration,
          transformEl = _ref26.transformEl,
          allSlides = _ref26.allSlides;
      var slides = swiper.slides,
          activeIndex = swiper.activeIndex,
          $wrapperEl = swiper.$wrapperEl;

      if (swiper.params.virtualTranslate && duration !== 0) {
        var eventTriggered = false;
        var $transitionEndTarget;

        if (allSlides) {
          $transitionEndTarget = transformEl ? slides.find(transformEl) : slides;
        } else {
          $transitionEndTarget = transformEl ? slides.eq(activeIndex).find(transformEl) : slides.eq(activeIndex);
        }

        $transitionEndTarget.transitionEnd(function () {
          if (eventTriggered) return;
          if (!swiper || swiper.destroyed) return;
          eventTriggered = true;
          swiper.animating = false;
          var triggerEvents = ['webkitTransitionEnd', 'transitionend'];

          for (var i = 0; i < triggerEvents.length; i += 1) {
            $wrapperEl.trigger(triggerEvents[i]);
          }
        });
      }
    }

    function EffectFade(_ref27) {
      var swiper = _ref27.swiper,
          extendParams = _ref27.extendParams,
          on = _ref27.on;
      extendParams({
        fadeEffect: {
          crossFade: false,
          transformEl: null
        }
      });

      var setTranslate = function setTranslate() {
        var slides = swiper.slides;
        var params = swiper.params.fadeEffect;

        for (var i = 0; i < slides.length; i += 1) {
          var $slideEl = swiper.slides.eq(i);
          var _offset = $slideEl[0].swiperSlideOffset;
          var tx = -_offset;
          if (!swiper.params.virtualTranslate) tx -= swiper.translate;
          var ty = 0;

          if (!swiper.isHorizontal()) {
            ty = tx;
            tx = 0;
          }

          var slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs($slideEl[0].progress), 0) : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);
          var $targetEl = effectTarget(params, $slideEl);
          $targetEl.css({
            opacity: slideOpacity
          }).transform("translate3d(".concat(tx, "px, ").concat(ty, "px, 0px)"));
        }
      };

      var setTransition = function setTransition(duration) {
        var transformEl = swiper.params.fadeEffect.transformEl;
        var $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;
        $transitionElements.transition(duration);
        effectVirtualTransitionEnd({
          swiper: swiper,
          duration: duration,
          transformEl: transformEl,
          allSlides: true
        });
      };

      effectInit({
        effect: 'fade',
        swiper: swiper,
        on: on,
        setTranslate: setTranslate,
        setTransition: setTransition,
        overwriteParams: function overwriteParams() {
          return {
            slidesPerView: 1,
            slidesPerGroup: 1,
            watchSlidesProgress: true,
            spaceBetween: 0,
            virtualTranslate: !swiper.params.cssMode
          };
        }
      });
    }

    function EffectCube(_ref28) {
      var swiper = _ref28.swiper,
          extendParams = _ref28.extendParams,
          on = _ref28.on;
      extendParams({
        cubeEffect: {
          slideShadows: true,
          shadow: true,
          shadowOffset: 20,
          shadowScale: 0.94
        }
      });

      var setTranslate = function setTranslate() {
        var $el = swiper.$el,
            $wrapperEl = swiper.$wrapperEl,
            slides = swiper.slides,
            swiperWidth = swiper.width,
            swiperHeight = swiper.height,
            rtl = swiper.rtlTranslate,
            swiperSize = swiper.size,
            browser = swiper.browser;
        var params = swiper.params.cubeEffect;
        var isHorizontal = swiper.isHorizontal();
        var isVirtual = swiper.virtual && swiper.params.virtual.enabled;
        var wrapperRotate = 0;
        var $cubeShadowEl;

        if (params.shadow) {
          if (isHorizontal) {
            $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');

            if ($cubeShadowEl.length === 0) {
              $cubeShadowEl = $('<div class="swiper-cube-shadow"></div>');
              $wrapperEl.append($cubeShadowEl);
            }

            $cubeShadowEl.css({
              height: "".concat(swiperWidth, "px")
            });
          } else {
            $cubeShadowEl = $el.find('.swiper-cube-shadow');

            if ($cubeShadowEl.length === 0) {
              $cubeShadowEl = $('<div class="swiper-cube-shadow"></div>');
              $el.append($cubeShadowEl);
            }
          }
        }

        for (var i = 0; i < slides.length; i += 1) {
          var $slideEl = slides.eq(i);
          var slideIndex = i;

          if (isVirtual) {
            slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);
          }

          var slideAngle = slideIndex * 90;
          var round = Math.floor(slideAngle / 360);

          if (rtl) {
            slideAngle = -slideAngle;
            round = Math.floor(-slideAngle / 360);
          }

          var progress = Math.max(Math.min($slideEl[0].progress, 1), -1);
          var tx = 0;
          var ty = 0;
          var tz = 0;

          if (slideIndex % 4 === 0) {
            tx = -round * 4 * swiperSize;
            tz = 0;
          } else if ((slideIndex - 1) % 4 === 0) {
            tx = 0;
            tz = -round * 4 * swiperSize;
          } else if ((slideIndex - 2) % 4 === 0) {
            tx = swiperSize + round * 4 * swiperSize;
            tz = swiperSize;
          } else if ((slideIndex - 3) % 4 === 0) {
            tx = -swiperSize;
            tz = 3 * swiperSize + swiperSize * 4 * round;
          }

          if (rtl) {
            tx = -tx;
          }

          if (!isHorizontal) {
            ty = tx;
            tx = 0;
          }

          var _transform = "rotateX(".concat(isHorizontal ? 0 : -slideAngle, "deg) rotateY(").concat(isHorizontal ? slideAngle : 0, "deg) translate3d(").concat(tx, "px, ").concat(ty, "px, ").concat(tz, "px)");

          if (progress <= 1 && progress > -1) {
            wrapperRotate = slideIndex * 90 + progress * 90;
            if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;
          }

          $slideEl.transform(_transform);

          if (params.slideShadows) {
            // Set shadows
            var shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');
            var shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');

            if (shadowBefore.length === 0) {
              shadowBefore = $("<div class=\"swiper-slide-shadow-".concat(isHorizontal ? 'left' : 'top', "\"></div>"));
              $slideEl.append(shadowBefore);
            }

            if (shadowAfter.length === 0) {
              shadowAfter = $("<div class=\"swiper-slide-shadow-".concat(isHorizontal ? 'right' : 'bottom', "\"></div>"));
              $slideEl.append(shadowAfter);
            }

            if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);
            if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);
          }
        }

        $wrapperEl.css({
          '-webkit-transform-origin': "50% 50% -".concat(swiperSize / 2, "px"),
          'transform-origin': "50% 50% -".concat(swiperSize / 2, "px")
        });

        if (params.shadow) {
          if (isHorizontal) {
            $cubeShadowEl.transform("translate3d(0px, ".concat(swiperWidth / 2 + params.shadowOffset, "px, ").concat(-swiperWidth / 2, "px) rotateX(90deg) rotateZ(0deg) scale(").concat(params.shadowScale, ")"));
          } else {
            var shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;
            var multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);
            var scale1 = params.shadowScale;
            var scale2 = params.shadowScale / multiplier;
            var _offset2 = params.shadowOffset;
            $cubeShadowEl.transform("scale3d(".concat(scale1, ", 1, ").concat(scale2, ") translate3d(0px, ").concat(swiperHeight / 2 + _offset2, "px, ").concat(-swiperHeight / 2 / scale2, "px) rotateX(-90deg)"));
          }
        }

        var zFactor = browser.isSafari || browser.isWebView ? -swiperSize / 2 : 0;
        $wrapperEl.transform("translate3d(0px,0,".concat(zFactor, "px) rotateX(").concat(swiper.isHorizontal() ? 0 : wrapperRotate, "deg) rotateY(").concat(swiper.isHorizontal() ? -wrapperRotate : 0, "deg)"));
      };

      var setTransition = function setTransition(duration) {
        var $el = swiper.$el,
            slides = swiper.slides;
        slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);

        if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {
          $el.find('.swiper-cube-shadow').transition(duration);
        }
      };

      effectInit({
        effect: 'cube',
        swiper: swiper,
        on: on,
        setTranslate: setTranslate,
        setTransition: setTransition,
        perspective: function perspective() {
          return true;
        },
        overwriteParams: function overwriteParams() {
          return {
            slidesPerView: 1,
            slidesPerGroup: 1,
            watchSlidesProgress: true,
            resistanceRatio: 0,
            spaceBetween: 0,
            centeredSlides: false,
            virtualTranslate: true
          };
        }
      });
    }

    function createShadow(params, $slideEl, side) {
      var shadowClass = "swiper-slide-shadow".concat(side ? "-".concat(side) : '');
      var $shadowContainer = params.transformEl ? $slideEl.find(params.transformEl) : $slideEl;
      var $shadowEl = $shadowContainer.children(".".concat(shadowClass));

      if (!$shadowEl.length) {
        $shadowEl = $("<div class=\"swiper-slide-shadow".concat(side ? "-".concat(side) : '', "\"></div>"));
        $shadowContainer.append($shadowEl);
      }

      return $shadowEl;
    }

    function EffectFlip(_ref29) {
      var swiper = _ref29.swiper,
          extendParams = _ref29.extendParams,
          on = _ref29.on;
      extendParams({
        flipEffect: {
          slideShadows: true,
          limitRotation: true,
          transformEl: null
        }
      });

      var setTranslate = function setTranslate() {
        var slides = swiper.slides,
            rtl = swiper.rtlTranslate;
        var params = swiper.params.flipEffect;

        for (var i = 0; i < slides.length; i += 1) {
          var $slideEl = slides.eq(i);
          var progress = $slideEl[0].progress;

          if (swiper.params.flipEffect.limitRotation) {
            progress = Math.max(Math.min($slideEl[0].progress, 1), -1);
          }

          var _offset3 = $slideEl[0].swiperSlideOffset;
          var rotate = -180 * progress;
          var rotateY = rotate;
          var rotateX = 0;
          var tx = swiper.params.cssMode ? -_offset3 - swiper.translate : -_offset3;
          var ty = 0;

          if (!swiper.isHorizontal()) {
            ty = tx;
            tx = 0;
            rotateX = -rotateY;
            rotateY = 0;
          } else if (rtl) {
            rotateY = -rotateY;
          }

          $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;

          if (params.slideShadows) {
            // Set shadows
            var shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');
            var shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');

            if (shadowBefore.length === 0) {
              shadowBefore = createShadow(params, $slideEl, swiper.isHorizontal() ? 'left' : 'top');
            }

            if (shadowAfter.length === 0) {
              shadowAfter = createShadow(params, $slideEl, swiper.isHorizontal() ? 'right' : 'bottom');
            }

            if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);
            if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);
          }

          var _transform2 = "translate3d(".concat(tx, "px, ").concat(ty, "px, 0px) rotateX(").concat(rotateX, "deg) rotateY(").concat(rotateY, "deg)");

          var $targetEl = effectTarget(params, $slideEl);
          $targetEl.transform(_transform2);
        }
      };

      var setTransition = function setTransition(duration) {
        var transformEl = swiper.params.flipEffect.transformEl;
        var $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;
        $transitionElements.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);
        effectVirtualTransitionEnd({
          swiper: swiper,
          duration: duration,
          transformEl: transformEl
        });
      };

      effectInit({
        effect: 'flip',
        swiper: swiper,
        on: on,
        setTranslate: setTranslate,
        setTransition: setTransition,
        perspective: function perspective() {
          return true;
        },
        overwriteParams: function overwriteParams() {
          return {
            slidesPerView: 1,
            slidesPerGroup: 1,
            watchSlidesProgress: true,
            spaceBetween: 0,
            virtualTranslate: !swiper.params.cssMode
          };
        }
      });
    }

    function EffectCoverflow(_ref30) {
      var swiper = _ref30.swiper,
          extendParams = _ref30.extendParams,
          on = _ref30.on;
      extendParams({
        coverflowEffect: {
          rotate: 50,
          stretch: 0,
          depth: 100,
          scale: 1,
          modifier: 1,
          slideShadows: true,
          transformEl: null
        }
      });

      var setTranslate = function setTranslate() {
        var swiperWidth = swiper.width,
            swiperHeight = swiper.height,
            slides = swiper.slides,
            slidesSizesGrid = swiper.slidesSizesGrid;
        var params = swiper.params.coverflowEffect;
        var isHorizontal = swiper.isHorizontal();
        var transform = swiper.translate;
        var center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;
        var rotate = isHorizontal ? params.rotate : -params.rotate;
        var translate = params.depth; // Each slide offset from center

        for (var i = 0, length = slides.length; i < length; i += 1) {
          var $slideEl = slides.eq(i);
          var slideSize = slidesSizesGrid[i];
          var slideOffset = $slideEl[0].swiperSlideOffset;
          var offsetMultiplier = (center - slideOffset - slideSize / 2) / slideSize * params.modifier;
          var rotateY = isHorizontal ? rotate * offsetMultiplier : 0;
          var rotateX = isHorizontal ? 0 : rotate * offsetMultiplier; // var rotateZ = 0

          var translateZ = -translate * Math.abs(offsetMultiplier);
          var stretch = params.stretch; // Allow percentage to make a relative stretch for responsive sliders

          if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {
            stretch = parseFloat(params.stretch) / 100 * slideSize;
          }

          var translateY = isHorizontal ? 0 : stretch * offsetMultiplier;
          var translateX = isHorizontal ? stretch * offsetMultiplier : 0;
          var scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier); // Fix for ultra small values

          if (Math.abs(translateX) < 0.001) translateX = 0;
          if (Math.abs(translateY) < 0.001) translateY = 0;
          if (Math.abs(translateZ) < 0.001) translateZ = 0;
          if (Math.abs(rotateY) < 0.001) rotateY = 0;
          if (Math.abs(rotateX) < 0.001) rotateX = 0;
          if (Math.abs(scale) < 0.001) scale = 0;
          var slideTransform = "translate3d(".concat(translateX, "px,").concat(translateY, "px,").concat(translateZ, "px)  rotateX(").concat(rotateX, "deg) rotateY(").concat(rotateY, "deg) scale(").concat(scale, ")");
          var $targetEl = effectTarget(params, $slideEl);
          $targetEl.transform(slideTransform);
          $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;

          if (params.slideShadows) {
            // Set shadows
            var $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');
            var $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');

            if ($shadowBeforeEl.length === 0) {
              $shadowBeforeEl = createShadow(params, $slideEl, isHorizontal ? 'left' : 'top');
            }

            if ($shadowAfterEl.length === 0) {
              $shadowAfterEl = createShadow(params, $slideEl, isHorizontal ? 'right' : 'bottom');
            }

            if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;
            if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;
          }
        }
      };

      var setTransition = function setTransition(duration) {
        var transformEl = swiper.params.coverflowEffect.transformEl;
        var $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;
        $transitionElements.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);
      };

      effectInit({
        effect: 'coverflow',
        swiper: swiper,
        on: on,
        setTranslate: setTranslate,
        setTransition: setTransition,
        perspective: function perspective() {
          return true;
        },
        overwriteParams: function overwriteParams() {
          return {
            watchSlidesProgress: true
          };
        }
      });
    }

    function EffectCreative(_ref31) {
      var swiper = _ref31.swiper,
          extendParams = _ref31.extendParams,
          on = _ref31.on;
      extendParams({
        creativeEffect: {
          transformEl: null,
          limitProgress: 1,
          shadowPerProgress: false,
          progressMultiplier: 1,
          perspective: true,
          prev: {
            translate: [0, 0, 0],
            rotate: [0, 0, 0],
            opacity: 1,
            scale: 1
          },
          next: {
            translate: [0, 0, 0],
            rotate: [0, 0, 0],
            opacity: 1,
            scale: 1
          }
        }
      });

      var getTranslateValue = function getTranslateValue(value) {
        if (typeof value === 'string') return value;
        return "".concat(value, "px");
      };

      var setTranslate = function setTranslate() {
        var slides = swiper.slides,
            $wrapperEl = swiper.$wrapperEl,
            slidesSizesGrid = swiper.slidesSizesGrid;
        var params = swiper.params.creativeEffect;
        var multiplier = params.progressMultiplier;
        var isCenteredSlides = swiper.params.centeredSlides;

        if (isCenteredSlides) {
          var margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;
          $wrapperEl.transform("translateX(calc(50% - ".concat(margin, "px))"));
        }

        var _loop = function _loop(i) {
          var $slideEl = slides.eq(i);
          var slideProgress = $slideEl[0].progress;
          var progress = Math.min(Math.max($slideEl[0].progress, -params.limitProgress), params.limitProgress);
          var originalProgress = progress;

          if (!isCenteredSlides) {
            originalProgress = Math.min(Math.max($slideEl[0].originalProgress, -params.limitProgress), params.limitProgress);
          }

          var offset = $slideEl[0].swiperSlideOffset;
          var t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];
          var r = [0, 0, 0];
          var custom = false;

          if (!swiper.isHorizontal()) {
            t[1] = t[0];
            t[0] = 0;
          }

          var data = {
            translate: [0, 0, 0],
            rotate: [0, 0, 0],
            scale: 1,
            opacity: 1
          };

          if (progress < 0) {
            data = params.next;
            custom = true;
          } else if (progress > 0) {
            data = params.prev;
            custom = true;
          } // set translate


          t.forEach(function (value, index) {
            t[index] = "calc(".concat(value, "px + (").concat(getTranslateValue(data.translate[index]), " * ").concat(Math.abs(progress * multiplier), "))");
          }); // set rotates

          r.forEach(function (value, index) {
            r[index] = data.rotate[index] * Math.abs(progress * multiplier);
          });
          $slideEl[0].style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;
          var translateString = t.join(', ');
          var rotateString = "rotateX(".concat(r[0], "deg) rotateY(").concat(r[1], "deg) rotateZ(").concat(r[2], "deg)");
          var scaleString = originalProgress < 0 ? "scale(".concat(1 + (1 - data.scale) * originalProgress * multiplier, ")") : "scale(".concat(1 - (1 - data.scale) * originalProgress * multiplier, ")");
          var opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;
          var transform = "translate3d(".concat(translateString, ") ").concat(rotateString, " ").concat(scaleString); // Set shadows

          if (custom && data.shadow || !custom) {
            var $shadowEl = $slideEl.children('.swiper-slide-shadow');

            if ($shadowEl.length === 0 && data.shadow) {
              $shadowEl = createShadow(params, $slideEl);
            }

            if ($shadowEl.length) {
              var shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;
              $shadowEl[0].style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);
            }
          }

          var $targetEl = effectTarget(params, $slideEl);
          $targetEl.transform(transform).css({
            opacity: opacityString
          });

          if (data.origin) {
            $targetEl.css('transform-origin', data.origin);
          }
        };

        for (var i = 0; i < slides.length; i += 1) {
          _loop(i);
        }
      };

      var setTransition = function setTransition(duration) {
        var transformEl = swiper.params.creativeEffect.transformEl;
        var $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;
        $transitionElements.transition(duration).find('.swiper-slide-shadow').transition(duration);
        effectVirtualTransitionEnd({
          swiper: swiper,
          duration: duration,
          transformEl: transformEl,
          allSlides: true
        });
      };

      effectInit({
        effect: 'creative',
        swiper: swiper,
        on: on,
        setTranslate: setTranslate,
        setTransition: setTransition,
        perspective: function perspective() {
          return swiper.params.creativeEffect.perspective;
        },
        overwriteParams: function overwriteParams() {
          return {
            watchSlidesProgress: true,
            virtualTranslate: !swiper.params.cssMode
          };
        }
      });
    }

    function EffectCards(_ref32) {
      var swiper = _ref32.swiper,
          extendParams = _ref32.extendParams,
          on = _ref32.on;
      extendParams({
        cardsEffect: {
          slideShadows: true,
          transformEl: null
        }
      });

      var setTranslate = function setTranslate() {
        var slides = swiper.slides,
            activeIndex = swiper.activeIndex;
        var params = swiper.params.cardsEffect;
        var _swiper$touchEventsDa = swiper.touchEventsData,
            startTranslate = _swiper$touchEventsDa.startTranslate,
            isTouched = _swiper$touchEventsDa.isTouched;
        var currentTranslate = swiper.translate;

        for (var i = 0; i < slides.length; i += 1) {
          var $slideEl = slides.eq(i);
          var slideProgress = $slideEl[0].progress;
          var progress = Math.min(Math.max(slideProgress, -4), 4);
          var _offset4 = $slideEl[0].swiperSlideOffset;

          if (swiper.params.centeredSlides && !swiper.params.cssMode) {
            swiper.$wrapperEl.transform("translateX(".concat(swiper.minTranslate(), "px)"));
          }

          if (swiper.params.centeredSlides && swiper.params.cssMode) {
            _offset4 -= slides[0].swiperSlideOffset;
          }

          var tX = swiper.params.cssMode ? -_offset4 - swiper.translate : -_offset4;
          var tY = 0;
          var tZ = -100 * Math.abs(progress);
          var scale = 1;
          var rotate = -2 * progress;
          var tXAdd = 8 - Math.abs(progress) * 0.75;
          var isSwipeToNext = (i === activeIndex || i === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;
          var isSwipeToPrev = (i === activeIndex || i === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;

          if (isSwipeToNext || isSwipeToPrev) {
            var subProgress = Math.pow(1 - Math.abs((Math.abs(progress) - 0.5) / 0.5), 0.5);
            rotate += -28 * progress * subProgress;
            scale += -0.5 * subProgress;
            tXAdd += 96 * subProgress;
            tY = "".concat(-25 * subProgress * Math.abs(progress), "%");
          }

          if (progress < 0) {
            // next
            tX = "calc(".concat(tX, "px + (").concat(tXAdd * Math.abs(progress), "%))");
          } else if (progress > 0) {
            // prev
            tX = "calc(".concat(tX, "px + (-").concat(tXAdd * Math.abs(progress), "%))");
          } else {
            tX = "".concat(tX, "px");
          }

          if (!swiper.isHorizontal()) {
            var prevY = tY;
            tY = tX;
            tX = prevY;
          }

          var scaleString = progress < 0 ? "".concat(1 + (1 - scale) * progress) : "".concat(1 - (1 - scale) * progress);

          var _transform3 = "\n      translate3d(".concat(tX, ", ").concat(tY, ", ").concat(tZ, "px)\n      rotateZ(").concat(rotate, "deg)\n      scale(").concat(scaleString, ")\n    ");

          if (params.slideShadows) {
            // Set shadows
            var $shadowEl = $slideEl.find('.swiper-slide-shadow');

            if ($shadowEl.length === 0) {
              $shadowEl = createShadow(params, $slideEl);
            }

            if ($shadowEl.length) $shadowEl[0].style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);
          }

          $slideEl[0].style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;
          var $targetEl = effectTarget(params, $slideEl);
          $targetEl.transform(_transform3);
        }
      };

      var setTransition = function setTransition(duration) {
        var transformEl = swiper.params.cardsEffect.transformEl;
        var $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;
        $transitionElements.transition(duration).find('.swiper-slide-shadow').transition(duration);
        effectVirtualTransitionEnd({
          swiper: swiper,
          duration: duration,
          transformEl: transformEl
        });
      };

      effectInit({
        effect: 'cards',
        swiper: swiper,
        on: on,
        setTranslate: setTranslate,
        setTransition: setTransition,
        perspective: function perspective() {
          return true;
        },
        overwriteParams: function overwriteParams() {
          return {
            watchSlidesProgress: true,
            virtualTranslate: !swiper.params.cssMode
          };
        }
      });
    } // Swiper Class


    var modules = [Virtual, Keyboard, Mousewheel, Navigation, Pagination, Scrollbar, Parallax, Zoom, Lazy, Controller, A11y, History, HashNavigation, Autoplay, Thumb, freeMode, Grid, Manipulation, EffectFade, EffectCube, EffectFlip, EffectCoverflow, EffectCreative, EffectCards];
    Swiper.use(modules);
    return Swiper;
  });
};

/* harmony default export */ __webpack_exports__["default"] = (swiper());
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/webpack/buildin/harmony-module.js */ "../node_modules/webpack/buildin/harmony-module.js")(module)))

/***/ })

/******/ });
//# sourceMappingURL=vendor.min.js.map